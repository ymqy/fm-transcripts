WEBVTT

1
00:00:00.480 --> 00:00:03.540
> > Brian Holt: 现在我们有了一个捆束器，我们可以为所欲为，对吧 ?
&gt;&gt; Brian Holt: So now we have a bundler,
we can do whatever we want, right?

2
00:00:03.540 --> 00:00:05.980
现在我们有更多的余地去做事情。
Now we have more leeway to do things.

3
00:00:05.980 --> 00:00:11.769
所以我想做的第一件事就是我想把宠物和
So the first thing I want to do
here is I want to split pet and

4
00:00:11.769 --> 00:00:14.699
应用到两个不同的文件对吧
app into two different files, right?

5
00:00:16.960 --> 00:00:21.789
我不知道为什么您没有一个组件，一个文件。
I can't think of a reason why you would
not have one component, one file.

6
00:00:21.789 --> 00:00:22.859
一直都是这样
It's always that way.

7
00:00:22.859 --> 00:00:25.019
文件中没有两个组件。
You don't ever have two
components in a file.

8
00:00:25.019 --> 00:00:28.550
我以前没见过这么好的理由
I've not really seen a good
reason to do that before.

9
00:00:28.550 --> 00:00:30.519
一个组件一个文件
So one component, one file.

10
00:00:30.519 --> 00:00:35.299
所以我要给你们看一个很酷的把戏 VS Code 可以为你做。
So I'm gonna show you a pretty cool
trick that VS Code can do for you.

11
00:00:35.299 --> 00:00:38.539
所以我要强调这一点，然后我把这个小灯泡弄过来。
So I'm gonna highlight this and
then I get this little light bulb here.

12
00:00:38.539 --> 00:00:40.450
该灯泡称为代码操作。
This light bulb is called a code action.

13
00:00:41.649 --> 00:00:47.329
所以我要点击这里，这里还有一些东西。
So I'm gonna click that and
there's a couple things here.

14
00:00:47.329 --> 00:00:48.840
我想要的就是移动
The one that I want is move,

15
00:00:48.840 --> 00:00:52.030
您可能看不到所有这些，因为我安装了其他扩展。
you might not see all of these because
I have other extensions installed.

16
00:00:52.030 --> 00:00:54.520
但你想做的就是搬到一个新的档案里
But the one that you wanna
do is move to a new file,

17
00:00:54.520 --> 00:00:56.659
都是你应该看到的对吧
which all of you should see, right?

18
00:00:56.659 --> 00:00:57.939
因此，单击移动到新文件。
So click move to a new file.

19
00:00:59.490 --> 00:01:03.659
突然我有一个新的 Pet.js 文件
And all the sudden I
have a new Pet.js file

20
00:01:03.659 --> 00:01:08.609
其中有导出，应用程序正在从该文件导入。
which has an export in it, and
app is importing from that file.

21
00:01:12.189 --> 00:01:14.620
挺酷的对吧你喜欢这样吗
It's pretty cool, right,
you like this, cool?

22
00:01:14.620 --> 00:01:15.150
好的
Okay, cool.

23
00:01:16.819 --> 00:01:18.060
所以最酷的是
So what's really cool about it is,

24
00:01:18.060 --> 00:01:19.640
其实是 TypeScript 给你做的
it's actually TypeScript
that does that for you.

25
00:01:19.640 --> 00:01:20.575
这不是 VS .
It's not VS Code.

26
00:01:20.575 --> 00:01:22.519
TypeScript 实际上正在您的代码上运行
TypeScript is actually
running on your code,

27
00:01:22.519 --> 00:01:24.680
虽然我们现在不是在写任何类型的剧本
even though we're not writing
any TypeScript right now.

28
00:01:24.680 --> 00:01:27.777
VS 代码始终在针对您的代码运行 TypeScript ，
VS Code is constantly running
TypeScript against your code,

29
00:01:27.777 --> 00:01:29.572
来理解你的密码是如何运作的
to understand how your code works.

30
00:01:29.572 --> 00:01:32.990
这才是真正能做到的。
And so
that's what's actually able to do that.

31
00:01:32.990 --> 00:01:34.849
现在我更喜欢默认的出口
Now, I prefer default exports, so

32
00:01:34.849 --> 00:01:40.189
我要改变这个来把那些花在花括号里的花去掉
I'm gonna change this to get rid of
those curly braces, and save that.

33
00:01:40.189 --> 00:01:44.390
然后在这里而不是说
And then here, instead of saying,

34
00:01:44.390 --> 00:01:49.150
出口商品 = blah，我想说
export const Pet = blah, I'm gonna say

35
00:01:49.150 --> 00:01:54.049
导出缺省函数 blah .
export default function blah like that.

36
00:01:56.469 --> 00:02:00.143
让我们给这个名字吧
And let's give this a name like so.

37
00:02:06.727 --> 00:02:08.338
>> Brian Holt: 我为什么要这样做 ?
&gt;&gt; Brian Holt: Now why do I do that?

38
00:02:08.338 --> 00:02:12.358
这只是我的默认输出模式
It's just kind of a pattern that
I had that the default export for

39
00:02:12.358 --> 00:02:14.752
组件始终是组件。
components is always the component.

40
00:02:14.752 --> 00:02:17.156
我想说这是个很普通的模式
I would say it's a decently
common pattern, but

41
00:02:17.156 --> 00:02:19.216
我要让你自己来判断
I'll leave you to judge it for yourself.

42
00:02:21.015 --> 00:02:24.082
>> Brian Holt: 在将其更改为指定组件方面，这对于
&gt;&gt; Brian Holt: As far as changing it to
a named component, this is useful for

43
00:02:24.082 --> 00:02:25.780
当你在调试东西的时候
when you're debugging things.

44
00:02:25.780 --> 00:02:27.170
因为如果有堆积痕迹
Because if there's a stack trace,

45
00:02:27.170 --> 00:02:31.689
你会看到宠物有这个错误，这使得以后更容易调试。
you'll see pet has the error, which makes
that a little bit easier to debug later.

46
00:02:33.599 --> 00:02:35.840
现在，我们有两个不同的文件，对吗 ?
So now,
we have two different files, right?

47
00:02:35.840 --> 00:02:37.030
我们从宠物进口宠物
We're importing pet from pet.

48
00:02:37.030 --> 00:02:38.810
这仍应以应有的方式进行。
This should still work the way it should.

49
00:02:38.810 --> 00:02:39.439
确实有
It does.

50
00:02:41.000 --> 00:02:44.069
但现在他们的组织结构变得更好了
But now they're a little bit better
organized now that we have an app

51
00:02:44.069 --> 00:02:44.729
组件和
component and

52
00:02:44.729 --> 00:02:48.050
一个宠物组件，它们在不同的文件中，我们可以分开保存它们。
a pet component, and they're in separate
files and we can maintain them separately.

53
00:02:49.289 --> 00:02:53.997
这里还有一个承诺如果你落后了你就可以
There's another commit point here, that if
you've fallen behind, you can go ahead and

54
00:02:53.997 --> 00:02:55.639
我觉得这个承诺
come up to I think this commit.

55
00:02:55.639 --> 00:03:00.532
让我们看看它叫什么
Let's just take a look and
see what it's called.

56
00:03:00.532 --> 00:03:01.743
就在那儿
It's right there.

57
00:03:10.063 --> 00:03:14.272
>> Brian Holt: 因此，这是添加 Parcel，构建过程和抽取 Pet
&gt;&gt; Brian Holt: So this one is the add
Parcel, build process and extract out Pet

58
00:03:14.272 --> 00:03:18.889
这就是你现在想做的一件
components so this is the one that
you'd want to move up to right now.

59
00:03:23.689 --> 00:03:25.210
好吧我们用了包裹
Okay and so we used Parcel.

60
00:03:25.210 --> 00:03:29.069
我告诉过你可以用 Webpack 做 100% 的工作
I told you could use Webpack this
would 100% work with Webpack as well.

61
00:03:29.069 --> 00:03:33.329
您还可以使用 Browserify，这是另一个用于捆绑代码的伟大项目。
You could also use Browserify, which is
another great project for bundling code.

62
00:03:33.329 --> 00:03:35.949
虽然别人会说，但仍然运作良好。
It still works really well despite
what other people might say.

63
00:03:35.949 --> 00:03:38.259
年纪大一点，但还是很不错的。
It's a bit older, but
it still works great.

64
00:03:40.759 --> 00:03:43.090
也可以使用 Rollup 。
Or you could use Rollup as well.

65
00:03:43.090 --> 00:03:45.920
上卷有点不方便有时更难使用
Roll up is a bit more unwieldy
sometimes a little bit harder to use,

66
00:03:45.920 --> 00:03:47.079
但工作也很顺利
but works well, as well.

67
00:03:50.360 --> 00:03:54.729
现在我们介绍了一个 package.json ，
At this point,
now we've introduced a package.json so

68
00:03:54.729 --> 00:03:58.420
如果你在这个过程中向前推进的话
if you're moving forward and
commit points in the course, make sure you

69
00:03:58.420 --> 00:04:01.830
在落实中向前移动，然后在以后运行 npm 安装，对吗 ?
move forward in the commit, and then
you run npm install afterwards, right?

70
00:04:01.830 --> 00:04:07.620
所以，如果我来到这里，不是这个，这个。
So if I come to my terminal here,
not this one, this one.

71
00:04:09.080 --> 00:04:12.040
我说如果我在承诺中向前迈进
And I say,
if I moved forward in the commit,

72
00:04:12.040 --> 00:04:15.492
我得说， npm install，就像这样。
I would have to say,
npm install, just like that.

73
00:04:15.492 --> 00:04:20.757
然后把所有东西都从 npm 的注册表中跑出来
And it's gonna go run and install
everything off of the npm registry.

74
00:04:20.757 --> 00:04:23.730
如果你一直在跟踪你就不用这么做了
You don't have to do this if you've been
following along, but just so you know,

75
00:04:23.730 --> 00:04:26.709
确保您始终与 npm 安装保持一致。
make sure that you're always keeping
up with the npm installs as well.

76
00:04:26.709 --> 00:04:27.560
否则事情就不起作用了
Otherwise, things won't work.
