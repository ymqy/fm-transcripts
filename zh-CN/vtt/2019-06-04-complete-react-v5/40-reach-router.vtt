WEBVTT

1
00:00:00.230 --> 00:00:04.708
>> Brian Holt: 因此 Reach 路由器有两个主要的路由器。
&gt;&gt; Brian Holt: So Reach Router, there's
there's two major routers for React.

2
00:00:04.708 --> 00:00:07.552
其实现在可能还有另外一个叫纳维的
And actually now there's probably three
there's another one called NaVi that just

3
00:00:07.552 --> 00:00:09.244
我真的不太懂
came out that I don't
really know too much about.

4
00:00:09.244 --> 00:00:13.109
我只知道它是站起来的，人们喜欢它。
I just know that it's up and
coming and people like it.

5
00:00:13.109 --> 00:00:17.611
但历史上都有 React 路由器和 Reach 路由器
But historically there's been
React router and Reach router,

6
00:00:17.611 --> 00:00:21.957
Ryan Florence 是由类似的人撰写的
which are authored by similar people,
Ryan Florence wrote.

7
00:00:21.957 --> 00:00:25.265
同时， React 路由器也可以使用 React 路由器。
Reach router and
he also helps with React router as well.

8
00:00:25.265 --> 00:00:26.704
所以我们今天要用 Reach 路由器
So we're gonna use Reach router today.

9
00:00:26.704 --> 00:00:32.887
我是 Reach 路由器的粉丝，因为它的功能非常集中，对吧 ?
I'm a big fan of Reach router because
it's very accessibility focused, right?

10
00:00:32.887 --> 00:00:36.408
所以如果你有一个页面改变它会聚焦在右边的页面上
So if you have like a page change
it'll focus on the right page,

11
00:00:36.408 --> 00:00:39.137
而关注焦点是一个非常困难的事情。
and managing focus is
a really difficult thing.

12
00:00:39.137 --> 00:00:42.057
如果你不知道这就意味着你需要
And if you don't know that it's
a difficult thing that means you need to

13
00:00:42.057 --> 00:00:44.883
在辅助功能选项方面更加努力，因为这很困难，而且
work harder on accessibility probably,
because it is difficult and

14
00:00:44.883 --> 00:00:47.237
那也是值得的，你应该做的事情。
it's also worthwhile,
something you should be doing.

15
00:00:47.237 --> 00:00:51.054
所以， React 路由器，不是在辅助功能上不好，不是，但是
So React router, it's not that it's
bad at accessibility, it's not, but

16
00:00:51.054 --> 00:00:53.828
它只会让你处理很多无障碍的事情
it just makes you handle a lot
of accessibility things.

17
00:00:53.828 --> 00:00:58.665
Reach 路由器会为你处理很多问题他们很聪明
Reach router handles much of that for
you and they're smart about it, so

18
00:00:58.665 --> 00:01:00.823
这是个很好的计划
it's a good project to look at.

19
00:01:02.679 --> 00:01:03.823
> > Brian Holt:
&gt;&gt; Brian Holt: And that being said,

20
00:01:03.823 --> 00:01:07.135
他们的工作相当相似他们都是伟大的项目
they work relatively similar
they're both great projects.

21
00:01:07.135 --> 00:01:12.064
如果您对学习 React 路由器版本三感兴趣
If you're very interested in
learning React router version three

22
00:01:12.064 --> 00:01:15.067
在此过程中，请使用此 React 路由器。
of this course, use this React router.

23
00:01:15.067 --> 00:01:17.795
它仍然完全有效，它们仍在同一主版本上。
It's still totally valid,
they're still on the same major version.

24
00:01:17.795 --> 00:01:18.804
那就去吧
So yeah, go ahead and

25
00:01:18.804 --> 00:01:21.784
如果想了解 React 路由器，请检出版本 3 。
check out version three if you
wanna learn about React router.

26
00:01:23.924 --> 00:01:26.368
>> Brian Holt: 现在，我们想做的是，我们想添加第二个页面，
&gt;&gt; Brian Holt: So now, what we wanna
do is, we wanna add a second page,

27
00:01:26.368 --> 00:01:27.471
详细信息页面，对吧 ?
a details page, right?

28
00:01:27.471 --> 00:01:30.978
所以我们要有个单页申请
So we're gonna have
a single page application.

29
00:01:30.978 --> 00:01:33.895
现在只需要谈谈关于单页应用的问题
Now, just a second to talk
about single page applications,

30
00:01:33.895 --> 00:01:36.424
并非每个应用程序都需要是单个页面应用程序。
not every app needs to be
a single page application.

31
00:01:36.424 --> 00:01:41.454
有多个不同的页面来加载不同的东西是可以的，对吧 ?
It's okay to have multiple different
pages that load different things, right?

32
00:01:41.454 --> 00:01:45.203
所以我要展示如何做到这一点，所以这是你工具箱里的另一个工具。
So I'm just gonna show how to do this,
so this is another tool in your toolbox.

33
00:01:45.203 --> 00:01:48.219
但是不要觉得你总是要有一个单一的页面应用，对吧 ?
But don't feel like you always have to
have a single page application, right?

34
00:01:48.219 --> 00:01:51.885
我想一个很好的例子是Fron趋向大师的网站，对吧 ?
I think a good example of that is
the Frontend Masters website, right?

35
00:01:51.885 --> 00:01:54.576
这不是单页应用程序，它们做得非常好。
It's not a single page application and
they did it really well.

36
00:01:56.906 --> 00:01:59.490
>> Brian Holt: 但类似 Netflix 的内容是单页应用程序和
&gt;&gt; Brian Holt: But something like
Netflix is a single page application and

37
00:01:59.490 --> 00:02:00.686
有道理吧
that makes sense, right?

38
00:02:00.686 --> 00:02:02.021
这是一种非常应用的感觉
It's a very app like feel.

39
00:02:03.367 --> 00:02:07.299
>> Brian Holt: 好的，我要你做的就是我希望你回到你的代码
&gt;&gt; Brian Holt: Okay, so what I want you to
do is I want you to go back to your code

40
00:02:07.299 --> 00:02:11.947
我希望您创建一个新文件并调用此 details.js。
editor here and I want you to create
a new file and call this details.js.

41
00:02:14.581 --> 00:02:21.037
>> Brian Holt: 好，而不是 details.js ，我们会说从反应中反应。
&gt;&gt; Brian Holt: Okay, instead of details.js
we're gonna say import React from react.

42
00:02:21.037 --> 00:02:23.033
你可能已经厌烦了
You're probably sick of writing that now.

43
00:02:24.479 --> 00:02:28.757
>> Brian Holt: 您会说 const 详细信息等于箭头函数，对于
&gt;&gt; Brian Holt: And you'll say const
Details equals arrows function, and for

44
00:02:28.757 --> 00:02:31.915
现在我们只会把一些愚蠢的东西送回去
now we're just gonna
return something dumb.

45
00:02:34.766 --> 00:02:36.628
>> Brian Holt: 就像那样。
&gt;&gt; Brian Holt: Just something like that.

46
00:02:36.628 --> 00:02:39.483
然后我们会说出口违约细节
And then we'll say export default Details.

47
00:02:43.106 --> 00:02:45.072
布莱恩 - 霍尔特: 很明显我们稍后会解决这个问题
&gt;&gt; Brian Holt: Well,
obviously we're gonna fix this later,

48
00:02:45.072 --> 00:02:47.586
这不是最后的结果不过是吧
this is not what this is gonna
end up looking like, but yeah.

49
00:02:50.543 --> 00:02:52.896
>> Brian Holt: 现在，我们需要安装 Reach 路由器。
&gt;&gt; Brian Holt: Now, at this point
we need to go install Reach router.

50
00:02:52.896 --> 00:02:54.843
我只想让包裹为我做
I'm just gonna let parcel do it for me,

51
00:02:54.843 --> 00:02:57.686
cutz 我在命令行里有个包裹在这里
cuz I have parcel running right
here in the command line.

52
00:02:59.646 --> 00:03:03.558
>> Brian Holt: 因此，在上面的 app.js中，
&gt;&gt; Brian Holt: So
at the top here in app.js,

53
00:03:03.558 --> 00:03:09.975
我要用卷发来输入类似的路由器
I'm gonna say import Router
like that with curly

54
00:03:09.975 --> 00:03:17.033
从 @reach/router ( 如 @reach/router ) 周围的花括号括起。
braces around it from @reach/router,
like that.

55
00:03:17.033 --> 00:03:21.025
再次记住，如果我这样做，你可以在这里看它。
And again remember, that parcel if I do
this and you can watch it down here let's

56
00:03:21.025 --> 00:03:29.177
为我安装该装置 >> Brian Holt: 但是
install that for me
&gt;&gt; Brian Holt: But

57
00:03:29.177 --> 00:03:31.923
如果不是您，那么必须执行 npm 安装到达路由器。
if not you then you have to go
do npm install reach router.

58
00:03:40.973 --> 00:03:44.411
> > Brian Holt: 好的，看起来是重建。
&gt;&gt; Brian Holt: Okay,
looks like it's rebuilding.

59
00:03:44.411 --> 00:03:48.582
所以现在我想做的不是一直在渲染搜索媒体
So now, I wanna do instead of just always
rendering search press which is what we're

60
00:03:48.582 --> 00:03:49.894
现在正在做对吧
doing right now, right?

61
00:03:49.894 --> 00:03:55.252
我希望在搜索页面或搜索页面之间切换
I want to switch between rendering
either the search page or

62
00:03:55.252 --> 00:03:57.728
详细信息页面，对吗 ?
the details page, right?

63
00:03:57.728 --> 00:04:01.907
我要做的就是把路由器放了
So what I'm gonna do here
is I'm gonna put router.

64
00:04:03.915 --> 00:04:07.676
>> Brian Holt: 然后，我将在路由器内部放置 SearchParams 。
&gt;&gt; Brian Holt: And then oops, I'm gonna
put SearchParams inside of the router.

65
00:04:10.084 --> 00:04:14.800
> > Brian Holt: 然后在下面我要详细说明细节。
&gt;&gt; Brian Holt: And then underneath
that I'm gonna put Details.

66
00:04:14.800 --> 00:04:18.113
现在注意我还没有输入详细信息
Now, notice I haven't I haven't
imported details as well but

67
00:04:18.113 --> 00:04:20.175
用 Visual Studio 代码来形容
with Visual Studio code it says hey,

68
00:04:20.175 --> 00:04:24.382
您正在尝试使用详细信息组件，并且您有一个称为详细信息的文件。
you're trying to use the details component
and you have a file called details.

69
00:04:24.382 --> 00:04:26.334
我很确定你在这里也要用同样的东西
I'm pretty sure you're trying
to use the same thing here.

70
00:04:26.334 --> 00:04:30.163
所以我就点击这个你就会注意到
So I'll just click this, and
you'll notice up here that

71
00:04:30.163 --> 00:04:34.653
对我来说是很重要的事对吧
are important details up here for
me, which is convenient right?

72
00:04:34.653 --> 00:04:38.911
但是，我又要在这里做 5 行，从细节中输入细节。
But again I have to do this line 5 there,
import details from details like that.

73
00:04:40.550 --> 00:04:45.423
>> Brian Holt: 然后你必须给他们路径，所以
&gt;&gt; Brian Holt: And
then you have to give them paths, so

74
00:04:45.423 --> 00:04:51.781
我要说的是 " path= / details/:id " 。
I'm gonna say path=
/details/:id like that.

75
00:04:51.781 --> 00:04:56.033
我还得给 SearchParams 提供路径，我指的是 /。
And I have to give SearchParams
the path as well, I mean the path of /.

76
00:05:00.197 --> 00:05:03.730
>> Brian Holt: 这是 React 路由器不同于 Reach 路由器的另一种方法。
&gt;&gt; Brian Holt: So this is another way that
React router differs from Reach router.

77
00:05:03.730 --> 00:05:07.880
React 路由器将呈现匹配的所有内容，而 Reach 路由器仅为
React router will render everything that
matches, whereas Reach router is only

78
00:05:07.880 --> 00:05:10.579
才能把最匹配的东西
going to render the the thing
that matches the most.

79
00:05:10.579 --> 00:05:13.245
我想说的是一个很主观的事情
Which is I realize a very
subjective thing to say,

80
00:05:13.245 --> 00:05:17.065
因为你能有两种技术在技术上是一致的
because you can have two things that
technically match the same thing.

81
00:05:17.065 --> 00:05:20.168
就像这样如果我说你不用跟着我
Like this, if I said,
you don't have to follow with me here,

82
00:05:20.168 --> 00:05:22.983
我给你举个例子还有其他路线
I'm just gonna give you an example,
some other route.

83
00:05:22.983 --> 00:05:27.264
我说了路径 = /details/1。
And I said path = /details/1.

84
00:05:29.247 --> 00:05:31.372
>> Brian Holt: 让我们在这里谈第二个话题。
&gt;&gt; Brian Holt: Let's talk about
ID here for just a second.

85
00:05:31.372 --> 00:05:32.447
这是变量对吧
This is a variable, right?

86
00:05:32.447 --> 00:05:35.740
这是用路径做变量的很常见的方法，对吧 ?
This is a very common way of doing
variables with paths, right?

87
00:05:35.740 --> 00:05:39.435
所以如果我放进去，请忽略 14 秒。
So if I put in,
just ignore a 14 for a second.

88
00:05:39.435 --> 00:05:44.439
如果我放进去我把它放进我的 URL里
If I put in this, and
I put in /details/15 into my URL,

89
00:05:44.439 --> 00:05:49.151
它会把那个 ID 传给那个组件吧
it's gonna pass that ID
into that component, right?

90
00:05:49.151 --> 00:05:51.694
这样就能匹配了对吧
So it'll match this, right?

91
00:05:51.694 --> 00:05:52.831
有道理吗
Does that make sense?

92
00:05:52.831 --> 00:05:55.898
好吧如果我有这两条路
Okay, now,
if I have these two routes here,

93
00:05:55.898 --> 00:05:58.654
哪条路线更具体?
which of these routes is more specific?

94
00:06:00.661 --> 00:06:03.646
>> Brian Holt: 显然还有其他路线，如人类一样，我们会看到
&gt;&gt; Brian Holt: Obviously some other route,
like as a human, we look at that and

95
00:06:03.646 --> 00:06:05.487
对我们来说是很直观的对吧
that's very intuitive to us, right?

96
00:06:05.487 --> 00:06:09.903
但他们其实就像一个计分算法
But they've actually put like a scoring
algorithm behind this that it'll choose

97
00:06:09.903 --> 00:06:13.038
对你来说是最具体的路线对吧
the most specific route for
you, and it's good, right?

98
00:06:13.038 --> 00:06:18.336
所以如果我放进 /ddetail/1， React 路由器也会呈现这两种情况，对吧 ?
So if I put in /detail/1, React router
would render both of these, right?

99
00:06:18.336 --> 00:06:20.788
而 Reach 路由器只会呈现其他路线
And Reach router will just
render some other route,

100
00:06:20.788 --> 00:06:24.086
我认为这是我们预期的直觉行为，对吧 ?
which I think is the intuitive
behavior that we would expect, right?

101
00:06:24.086 --> 00:06:26.475
但这就是这样工作的方式。
But that's how that works.

102
00:06:26.475 --> 00:06:27.461
有道理吗
Make sense?

103
00:06:27.461 --> 00:06:29.074
好的
Okay, cool.

104
00:06:29.074 --> 00:06:31.935
>> 扬声器 2: 此处声明的顺序是否重要?
&gt;&gt; Speaker 2: So
does the order of declaration here matter?

105
00:06:31.935 --> 00:06:32.528
>> Brian Holt: 没有。
&gt;&gt; Brian Holt: It does not.

106
00:06:32.528 --> 00:06:33.295
>> 演讲者 2: 好的。 >> Brian Holt: 是的。
&gt;&gt; Speaker 2: Okay.
&gt;&gt; Brian Holt: Yeah.

107
00:06:33.295 --> 00:06:35.771
问得好，不是。
Good question, it does not.

108
00:06:35.771 --> 00:06:39.062
因此，在 React 路由器中，它们使用名为 Switch的东西。
So with React router they
use a thing called Switch.

109
00:06:39.062 --> 00:06:42.555
如果你想做一个特别的路线
If you wanna do just one
particular route in that one,

110
00:06:42.555 --> 00:06:45.441
第一次比赛就行了吧
it will do the first one it matches,
right?

111
00:06:45.441 --> 00:06:48.696
所以在这个问题上它确实很重要但它是一个计分系统
So in that one it does matter, but
this one it does a scoring system and

112
00:06:48.696 --> 00:06:54.144
然后在结束时取最高分 > Brian Holt: 也许我
then it picks the highest score at the end
&gt;&gt; Brian Holt: Maybe I

113
00:06:54.144 --> 00:06:57.271
应该会少一点看多
should probably be a little
bit less bullish on that.

114
00:06:57.271 --> 00:07:01.980
可能在某种程度上它可能会在评分算法中添加一点
It might matter at some point it might add
like one point in their scoring algorithm,

115
00:07:01.980 --> 00:07:04.985
但在理论上我不认为这不重要
but in theory,
I don't think it shouldn't matter.

116
00:07:04.985 --> 00:07:07.807
这就是他们对名誉的要求之一。
That was one of their claims to
fame was scoring system in it.

117
00:07:10.738 --> 00:07:13.836
>> Brian Holt: 好的，现在我们有路由器了。
&gt;&gt; Brian Holt: Okay, cool so
now we have a router.

118
00:07:13.836 --> 00:07:16.737
还有一些值得一提的关于 Reach 路由器的事
Something else that's worth mentioning
about Reach router is you can have

119
00:07:16.737 --> 00:07:17.944
页面上的多个路由器。
multiple routers on the page.

120
00:07:17.944 --> 00:07:23.127
所以你可以想象我有一个主页，我用一个路由器来做这个。
So you can probably imagine I have like
a main page and I use a router for that.

121
00:07:23.127 --> 00:07:25.663
但我现在也可以有一个情境的网站，对吧 ?
But I could also have
a contextual site now, right?

122
00:07:25.663 --> 00:07:29.702
这就像根据哪个页面修改侧边导航更改一样。
That like depending on which page
amend the side nav changes as well.

123
00:07:29.702 --> 00:07:33.009
你还可以有一个路由器在那里有不同的规则
And you can also have a router over
there that has different rules and

124
00:07:33.009 --> 00:07:34.588
不同的匹配模式。
different matching patterns.

125
00:07:34.588 --> 00:07:37.122
这些也可以相互独立工作。
And those can work independently
of each other as well.

126
00:07:37.122 --> 00:07:42.463
所以它非常灵活，它是一个非常强大的技术。
So it's quite flexible, it's a really
powerful piece of technology.

127
00:07:42.463 --> 00:07:44.024
我们只是擦伤表面
And we are just gonna scratch the surface,

128
00:07:44.024 --> 00:07:46.331
我不认为这会比这更重要对吧
I don't think it's gonna do very
much more than this, right?

129
00:07:46.331 --> 00:07:48.973
我们会用这个和链接从 Reach 路由器里
We're gonna use this and links and
that's about it from Reach router.

130
00:07:48.973 --> 00:07:51.768
所以你知道吗这不是关于 Reach 路由器的课程
So just so you know,
this is not a course on Reach router,

131
00:07:51.768 --> 00:07:53.528
我只是选择一个给你看
I'm just choosing one to show you.

132
00:07:56.307 --> 00:07:58.271
> > Brian Holt: 好的，现在我有了这个，
&gt;&gt; Brian Holt: Okay, so,
now that I have that,

133
00:07:58.271 --> 00:08:00.733
我们再看一下我们的网页
let's go take a look at our page, again.

134
00:08:03.432 --> 00:08:08.110
>> Brian Holt: 所以我有这个，注意，在斜杠上，主页，
&gt;&gt; Brian Holt: So I have this,
notice that on the slash, the home page,

135
00:08:08.110 --> 00:08:13.184
它会到 params 页面上但如果我去 /details/1
it's going to the params page,
but if I go to /details/1.

136
00:08:13.184 --> 00:08:14.935
看看上面写着什么，你好，对吧 ?
Look what it says, hi lol, right?

137
00:08:14.935 --> 00:08:17.343
这就是我们预期的工作方式。
So this is working the way that we expect.

138
00:08:17.343 --> 00:08:18.954
我们可以后退和前进
We can go backwards and forwards.
