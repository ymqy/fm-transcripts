WEBVTT

1
00:00:00.000 --> 00:00:04.070
>> Brian Holt: 现在让我们来修正该错误， React 不知道这是什么。
&gt;&gt; Brian Holt: Now let's go fix this error
that React doesn't know what this is.

2
00:00:05.259 --> 00:00:11.800
如果你不知道，我们要做的是停止给 Ctrl-C 的服务。
What we're going to do, if you don't know,
to stop the serve you hit Ctrl-C.

3
00:00:11.800 --> 00:00:15.550
我觉得在任何平台上都是有用的
I think that works on any platform.

4
00:00:15.550 --> 00:00:18.059
你向它发送中断命令并说停止这事，对吧 ?
You send an interrupt command to it and
say stop this, right?

5
00:00:20.600 --> 00:00:24.795
>> Brian Holt: 因此，我现在会说，现在 npm 安装没有 D ，因为这些
&gt;&gt; Brian Holt: So here I'm gonna say now
npm install without the D because these

6
00:00:24.795 --> 00:00:29.004
是生产依赖性，反应的反应，就像这样。
are production dependencies,
react react-dom, like that.

7
00:00:32.119 --> 00:00:36.494
>> Brian Holt: 因此，这将从 npm 注册表中安装两个软件包。
&gt;&gt; Brian Holt: So this is gonna go install
our two packages off of the npm registry.

8
00:00:41.896 --> 00:00:46.585
>> Brian Holt: 第二次
&gt;&gt; Brian Holt: Take a second

9
00:00:46.585 --> 00:00:50.850
去做这个
to do that.

10
00:00:55.299 --> 00:00:57.808
>> Brian Holt: 好，现在不是回我的 index.html，
&gt;&gt; Brian Holt: Okay, now instead
of going back in my index.html,

11
00:00:57.808 --> 00:00:59.869
我要删除这两个剧本文件
I'm gonna delete these two script files.

12
00:00:59.869 --> 00:01:02.347
我不想再把这些装在 CD 上了
Cuz I don't wanna load
these off the CD anymore,

13
00:01:02.347 --> 00:01:05.379
我想把他们从我的电脑上删除
I wanna load them off of my
local computer, so delete that.

14
00:01:06.430 --> 00:01:08.170
所以我们只有 root 和 app.js。
So all we have is the root and our app.js.

15
00:01:16.480 --> 00:01:20.100
>> Brian Holt: 好，现在我们要回到 app.js。
&gt;&gt; Brian Holt: Okay,
now we're gonna go back into app.js.

16
00:01:21.876 --> 00:01:25.712
布莱恩 - 霍尔特: 我们会在这里说
&gt;&gt; Brian Holt: And
we're gonna say up here,

17
00:01:25.712 --> 00:01:29.710
从 "反应" 导入反应。
import React from 'react'.

18
00:01:29.710 --> 00:01:36.740
因此，这将从 React 包中导入缺省导出，好吗 ?
So this is going to import the default
export from the React package, okay?

19
00:01:36.740 --> 00:01:41.615
然后我们会说进口和
And we're going to say import and

20
00:01:41.615 --> 00:01:48.240
我要从反应界说 {render} 。
I'm gonna say {render} from react-dom.

21
00:01:48.240 --> 00:01:51.939
现在，你们中的一些人可能不会在这里看到这个自动完成的情况。
Now, some of you might not be
seeing this autocompletion here.

22
00:01:51.939 --> 00:01:56.314
该扩展称为 NPM Intelisense，它再次在此处。
That extension is called NPM Intellisense,
which again is here.

23
00:01:56.314 --> 00:02:01.317
NPM Intelisense 就在那儿
NPM Intellisense, right there,

24
00:02:02.774 --> 00:02:05.540
>> Brian Holt: 非常有用。
&gt;&gt; Brian Holt: Quite useful.

25
00:02:05.540 --> 00:02:08.365
因此，从反应中导入呈现 -DOM 是我们希望从中得到的位置。
So import render from react-DOM is
where we want that one to come from.

26
00:02:16.139 --> 00:02:19.955
>> Brian Holt: 我给你看这个，我可以不用
&gt;&gt; Brian Holt: So I show you this,
I could've just done import without

27
00:02:19.955 --> 00:02:23.620
这里的花括号和反应会像这样
the curly braces here and
said react-DOM like this.

28
00:02:23.620 --> 00:02:27.681
现在这将会起作用，因为这在这里被称为 " rehetDOM " ，但是
And now this would work because this
is called reactDOM down right here, but

29
00:02:27.681 --> 00:02:30.408
我想告诉你怎么输入特定东西
I wanna show you how to
input the specific thing, so

30
00:02:30.408 --> 00:02:32.719
我想从反动 DOM中输入
I wanna import just render from reactDOM.

31
00:02:32.719 --> 00:02:36.156
因此，这表示 reattDOM 具有称为呈示的特定导出，并且
So this is saying reactDOM has
a specific export called render and

32
00:02:36.156 --> 00:02:38.102
我希望你能输入好吗
I want you to input just that, okay?

33
00:02:38.102 --> 00:02:44.009
然后在这里擦掉渲染，就像这样。
And then down here just erase the render,
so it's just render like that.

34
00:02:45.560 --> 00:02:49.030
所以我想说这和破坏是相似的
So I wanna say this is
similar to destructuring.

35
00:02:49.030 --> 00:02:52.530
技术上没有破坏，这就是模块的工作方式。
It's technically not destructuring,
this is just how modules work.

36
00:02:54.000 --> 00:02:57.417
但这只是说 " 反应 " 有一个特定的例子
But this is just saying react-dom
has a specific instance,

37
00:02:57.417 --> 00:03:00.439
导出渲染等于什么， heah，问题?
export render equals something,
heah, question?

38
00:03:00.439 --> 00:03:03.825
>> 演讲者 2: 当您使用 import 语句时，您如何知道是还是
&gt;&gt; Speaker 2: When you're using an import
statement, how do you know whether or

39
00:03:03.825 --> 00:03:05.709
你不应该用花括号吗
not you should use the curly braces?

40
00:03:07.479 --> 00:03:11.466
是否仅用于导入一个特定功能部件 ?
Is that just for if you want to
import one specific feature?

41
00:03:11.466 --> 00:03:12.783
>> Brian Holt: 是。
&gt;&gt; Brian Holt: Yes.

42
00:03:12.783 --> 00:03:15.280
>> 演讲者 2: 好的。
&gt;&gt; Speaker 2: Okay.

43
00:03:15.280 --> 00:03:17.193
>> Brian Holt: 例如，从 React中
&gt;&gt; Brian Holt: For
example here from React,

44
00:03:17.193 --> 00:03:20.170
我其实可以进口具体的东西。
I can actually import specific things.

45
00:03:20.170 --> 00:03:23.951
就像我不能只进口克里德元素
So like, I cannot actually
just import creed element,

46
00:03:23.951 --> 00:03:27.259
因为它是专门出口的对吧
because it specifically exports that,
right?

47
00:03:27.259 --> 00:03:33.199
然后我就不使用了，我只是用这样的创作元素。
And then I wouldn't be using, I would
just be using create element like that.

48
00:03:33.199 --> 00:03:37.853
一般来说，我鼓励你做一些具体的出口。
In general, I would encourage you
to do specific exports most of

49
00:03:37.853 --> 00:03:43.389
因为包裹会为你做点什么
the time because parcel will do
a thing for you called tree shaking.

50
00:03:43.389 --> 00:03:48.288
它实际上是在无视树木颤抖的真实情况
It actually uglifies the actual
thing that does the tree shaking,

51
00:03:48.288 --> 00:03:51.879
但这才是生活密码的包容
but what that does is
it's live code inclusion.

52
00:03:51.879 --> 00:03:55.990
因此，它将只包含可能运行的代码。
So it will only include code
that could ever potentially run.

53
00:03:57.259 --> 00:04:02.064
所以在这个特殊情况下，让我们说 " 反应 " 有 1000 种方法
So in this particular case,
let's say react-dom had 1,000 methods and

54
00:04:02.064 --> 00:04:06.669
我们只进口 1个，对，不包括另外 999个。
we're only importing 1, right,
it would not include the other 999.

55
00:04:06.669 --> 00:04:10.590
如果他们的包装是正确的，如果因为大多数人都不这样做的话。
If they packaged it correctly which is
a big if because most of them don't.

56
00:04:12.759 --> 00:04:14.930
但就像一个像低破折号一样的好例子吗 ?
But like a good example that
would be like low dash right?

57
00:04:14.930 --> 00:04:18.350
低破折号是一个巨大的库，有 200 种方法吗?
Low dash is a huge library
has like 200 methods right?

58
00:04:18.350 --> 00:04:20.240
你没有，从来没有人使用过 200 种方法吗 ?
And you don't,
no one ever uses all 200 methods right?

59
00:04:20.240 --> 00:04:24.036
所以你想做的就是想进口几种方法
So what you wanna do with that is you
wanna import just a few methods that you

60
00:04:24.036 --> 00:04:26.870
然后就不包括其他的了吧
use and then it won't include
the other ones, right?

61
00:04:26.870 --> 00:04:28.021
就像那里的好处
That is like the benefit there,

62
00:04:28.021 --> 00:04:29.949
可能并不总是那样的
potentially, it doesn't
always work out that way.

63
00:04:32.590 --> 00:04:35.904
>> Brian Holt: 对于我，它仅帮助我明确表示我知道这仅使用
&gt;&gt; Brian Holt: For me it just helps me to
be explicit that I know this only uses

64
00:04:35.904 --> 00:04:37.340
做出反应的人
render from react-dom.

65
00:04:37.340 --> 00:04:40.627
所以我想说的是这对我毫无帮助
So what I wanted to get to is,
this actually isn't helpful,

66
00:04:40.627 --> 00:04:43.848
因为如果你把你的反应也包括在你的反应中
because if you include react-dom
you get the whole thing,

67
00:04:43.848 --> 00:04:46.370
因为它没有被包装在树上
because it's not packaged for
tree shaking.

68
00:04:46.370 --> 00:04:50.384
然后另一件事就是里面没有太多浪费的东西
And then the other thing is that there's
not a lot of wasteful stuff inside

69
00:04:50.384 --> 00:04:53.709
会有多难的反应所以也不会有太多的树木晃动
react-dom, so there's not a lot
to tree shake out anyway.

70
00:04:53.709 --> 00:05:00.089
所以现在如果我们把这个保存，再回到我们的项目上，它还是应该工作的，对吧 ?
So now if we save this and go back over to
our project, it should still work, right?

71
00:05:00.089 --> 00:05:05.420
现在，你必须运行项目， npm 运行 dev，就像这样。
So now, you have to run the project
of course, npm run dev, like that.

72
00:05:13.319 --> 00:05:17.978
>> Brian Holt: 一旦完成构建，您可以看到此外观类似于 JS
&gt;&gt; Brian Holt: Once it's finished
building, you can see this looks like a JS

73
00:05:17.978 --> 00:05:22.742
文件正在装入，仅装入此 app.js 文件。
file that's loading,
it's only loading this app.js file.

74
00:05:25.648 --> 00:05:27.096
> > 布莱恩 - 霍特:
&gt;&gt; Brian Holt: And
it's not loading anything else,

75
00:05:27.096 --> 00:05:29.720
它没有像其他文件那样装载
it's not loading like those
other files from the repo.

76
00:05:29.720 --> 00:05:33.713
因此，你可以看到，这种反应现在被包括在我们的 app.js 中，而不是
So you can see that that reacts now being
included inside of our app.js instead of

77
00:05:33.713 --> 00:05:35.427
正在从其他 CDN 装入。
being loaded from some other CDN.

78
00:05:35.427 --> 00:05:39.826
你可以看到它比这里要大得多
And you can see that it's much
larger than it used to be here,

79
00:05:39.826 --> 00:05:42.588
现在是 965 KB 而不是
now it's 965 KB instead of being,

80
00:05:42.588 --> 00:05:47.100
就像之前的五个一样因为它包括了雷法
like the probably 5 it was before
because it includes React.

81
00:05:48.519 --> 00:05:52.990
现在记住，这是发展环境，意味着它是巨大的。
Now keep in mind this is the development
environment which means it's massive.

82
00:05:52.990 --> 00:05:56.470
如果我把它打成这样产量就会小得多
If I patched this for
production it would be much, much smaller.

83
00:05:56.470 --> 00:06:00.495
因此，在实际执行生产构建之前，不要担心文件大小。
So don't worry about file sizes until
you actually do the production builds,

84
00:06:00.495 --> 00:06:01.845
所以记住这一点
so just keep that in mind.

85
00:06:05.220 --> 00:06:10.367
>> Brian Holt: 现在，这个项目大概是 35 KB，
&gt;&gt; Brian Holt: Right now,
this project would probably be 35 KB,

86
00:06:10.367 --> 00:06:13.768
我猜库兹约 32岁了
I guess, cuz React is about 32.
