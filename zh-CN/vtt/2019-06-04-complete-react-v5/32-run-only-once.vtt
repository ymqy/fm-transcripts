WEBVTT

1
00:00:00.000 --> 00:00:02.549
> > 布莱恩: 现在，我想给你们看几件事情。
&gt;&gt; Brian: Now, I wanna show you
a couple more things about this.

2
00:00:02.549 --> 00:00:06.902
如果我希望此操作在安装时运行，那么会发生什么情况，因此当它首次呈示时
What happens if I want this to run when
it mounts, so when it first renders and

3
00:00:06.902 --> 00:00:07.990
那就再也不去了
then Never again?

4
00:00:09.630 --> 00:00:12.223
> > 布莱恩: 你刚才给出了一个空的数组。
&gt;&gt; Brian: Well,
you just given an empty array.

5
00:00:12.223 --> 00:00:15.919
这是它的一系列依赖性，它说，我什么都不依赖，对吗 ?
This is an array of its dependencies and
it's saying, I depend on nothing, right?

6
00:00:18.091 --> 00:00:21.699
>> Brian: 那么它将运行一次，然后这将不会再次更新。
&gt;&gt; Brian: So then it's gonna run once,
and then this will never update again.

7
00:00:24.443 --> 00:00:26.310
> > 布莱恩: 对吧 ?
&gt;&gt; Brian: Right?

8
00:00:26.310 --> 00:00:29.922
因此，如果您希望它在第一次创建时运行一次，就会产生这样的结果。
So if you want it run once on what it
first creates that's how you do that.

9
00:00:29.922 --> 00:00:33.771
如果需要与 J 查询插件进行集成，那么这将非常有用。
This will be useful for things like if you
need to integrate with a J query plug in.

10
00:00:33.771 --> 00:00:37.691
比如当我对你和 D3感到抱歉的时候
Like when I'm sorry that's
happening to you and, or like D3,

11
00:00:37.691 --> 00:00:40.241
也许是个更好的例子吧
that's maybe a better example, right?

12
00:00:40.241 --> 00:00:43.720
如果你要和 D3 集成，你就需要设置所有这些东西，对吗 ?
If you have to integrate with D3 and
you need to set up all that stuff, right?

13
00:00:43.720 --> 00:00:44.780
这就是你要做的
This is where you would do it.

14
00:00:46.823 --> 00:00:49.345
> > 布莱恩: 然后你可以给它一个空的数组，就像，好吧，
&gt;&gt; Brian: And then you could give
it an empty array, it's like, okay,

15
00:00:49.345 --> 00:00:52.075
一旦集成了，就不要再更新了，对吧 ?
once this is integrated then
don't update this anymore, right?

16
00:00:52.075 --> 00:00:56.918
如果你想让它每次都更新一些东西
And then if you want it to run every
single time something updates,

17
00:00:56.918 --> 00:00:58.140
把那个扔了
get rid of that.

18
00:00:58.140 --> 00:01:00.543
所以现在如果我来这里
So now, if I come over here,

19
00:01:05.599 --> 00:01:09.367
> > 布莱恩: 应该，
&gt;&gt; Brian: It should,

20
00:01:14.489 --> 00:01:15.466
> > 布莱恩: 这里发生了什么 ?
&gt;&gt; Brian: What is going on here?

21
00:01:15.466 --> 00:01:16.859
好了好了
There we go.

22
00:01:24.742 --> 00:01:27.454
> > 布莱恩: 是的，我的意思是你可以看到我创造了无限循环，
&gt;&gt; Brian: Yeah, I mean you can see
here I've created an infinite loop,

23
00:01:27.454 --> 00:01:31.784
你可以看到我有， >> 布莱恩: 事实上我要阻止
you can see that I have,
&gt;&gt; Brian: In fact I'm gonna stop that so

24
00:01:31.784 --> 00:01:32.712
我不喜欢我的 API
I don't crush my API.

25
00:01:35.337 --> 00:01:37.403
> > Brian: 所以请不要这样做。
&gt;&gt; Brian: So don't do that please.

26
00:01:37.403 --> 00:01:39.076
我要付那个账单
Cuz I'm paying that bill.

27
00:01:39.076 --> 00:01:44.484
所以现在发生的事情就像
[LAUGH] So
what what was happening there is like it's

28
00:01:44.484 --> 00:01:49.651
每次更新都要运行对吧
running every time something updates,
right?

29
00:01:49.651 --> 00:01:52.887
这意味着每次我呼叫分离的时候都在引起更新对吧
Which means that every time that I call
separates, it's causing an update, right?

30
00:01:52.887 --> 00:01:55.320
这意味着它会再次达到预期的效果。
Which means that it caught it's
scheduled that effect again.

31
00:01:55.320 --> 00:01:57.108
然后再更新它们的品种
Which is then going to
update their breeds again,

32
00:01:57.108 --> 00:01:58.903
这会安排另一个效果的对吧
which is gonna schedule another effect,
right?

33
00:01:58.903 --> 00:02:01.069
这个无限循环的记号
Sick of this infinite loop.

34
00:02:01.069 --> 00:02:07.347
所以这就是为什么他们强制执行这个， >> 布莱恩: 附属物，
So that's why actually they enforce this,
&gt;&gt; Brian: Dependencies thing,

35
00:02:07.347 --> 00:02:09.751
这样你就不会陷入这种境地了对吧
so you don't get yourself
into these situations, right?

36
00:02:09.751 --> 00:02:15.031
因为如果看动物，你就得看动物在那里，
Because if it depends on animal then you
should depend on animal being there and

37
00:02:15.031 --> 00:02:20.151
反之亦然，您不希望导致这些无限的更新循环，
via vice-versa, you don't want to
cause these infinite loops of update,

38
00:02:20.151 --> 00:02:23.045
然后这个计划又产生了另一种影响
and then that schedule in another effect.
