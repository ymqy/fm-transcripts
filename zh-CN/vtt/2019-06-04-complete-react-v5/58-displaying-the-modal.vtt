WEBVTT

1
00:00:00.024 --> 00:00:03.410
>> Brian Holt: 转至 details.js，我们要这样做
&gt;&gt; Brian Holt: Go to details.js,
and we want to make it so

2
00:00:03.410 --> 00:00:06.610
只要你点击这个好的按钮就可以打开一个模块
whenever you click on this nice button
here, that it pops open a module.

3
00:00:08.900 --> 00:00:14.602
所以我们要做的就是进口
So what we're gonna do here
is we're going to import

4
00:00:14.602 --> 00:00:21.202
从 @reach/router > > Brian Holt : And
navigate from @reach/router
&gt;&gt; Brian Holt: And

5
00:00:21.202 --> 00:00:25.582
我们也要进口我们的交通工具
we're going to import our modal as well.

6
00:00:25.582 --> 00:00:28.495
模态的模态。
Modal from ./modal.

7
00:00:34.109 --> 00:00:37.978
>> Brian Holt: 对不起， @reach，不反应， @reach/router。
&gt;&gt; Brian Holt: Sorry, @reach,
not react, @reach/router.

8
00:00:42.250 --> 00:00:43.253
>> Brian Holt: 好吗 ?
&gt;&gt; Brian Holt: Okay?

9
00:00:43.253 --> 00:00:47.965
我们会在这里添加一个新的国家，叫做 showModal 和
We'll add a new piece of state here,
and it's gonna be called showModal and

10
00:00:47.965 --> 00:00:50.256
我们就不能开始了
we're not gonna initially show it.

11
00:00:58.551 --> 00:01:02.049
> > Brian Holt: 好的，我们现在需要更多的动物状态。
&gt;&gt; Brian Holt: Okay, we need one
more piece of state from animal now.

12
00:01:02.049 --> 00:01:07.799
我的意思是，它的 URL ，所以我要说 URL ，然后去把它从动物的 URL上拿掉。
I mean, its URL, so I'm gonna say URL and
get to grab that off of animal type URL.

13
00:01:07.799 --> 00:01:10.390
这其实是你要去领养宠物的 URL 。
This is actually the URL that
you will go to to adopt the pet.

14
00:01:17.519 --> 00:01:21.647
好的，在这里，我们将会推出一种新的方法，叫做肘式模式。
Okay, above the render here, we're going
to put a new method called toggle modal.

15
00:01:26.658 --> 00:01:33.658
> > Brian Holt: 我们只做一个非常快捷的 showModal 的 this.setState ，
&gt;&gt; Brian Holt: And we'll just make this
a very quick this.setState of showModal,

16
00:01:33.658 --> 00:01:38.365
你就想和任何一个
and you just want to be
the opposite of whatever

17
00:01:38.365 --> 00:01:43.430
showModal 是， this.state.showModal。
showModal was, so this.state.showModal.

18
00:01:43.430 --> 00:01:45.579
所以如果它是假的，让它成为事实，如果它是真的，就会使它成为错误。
So if it's false, make it true,
and if it's true, make it false.

19
00:01:48.442 --> 00:01:49.510
> > 布莱恩 - 霍尔特:
&gt;&gt; Brian Holt: And then underneath that,

20
00:01:49.510 --> 00:01:51.840
我们也要发挥作用了
we're gonna make an adopt
function as well.

21
00:01:51.840 --> 00:01:53.960
这只是一支箭的功能
It's just gonna be an arrow function.

22
00:01:53.960 --> 00:01:59.299
所有要做的都是导航到 this.state.url。
And all it's gonna do is
navigate to this.state.url.

23
00:02:06.862 --> 00:02:09.222
>> Brian Holt: 我们也可以使用重定向组件完成此操作，
&gt;&gt; Brian Holt: We could have done this
with the redirect component as well,

24
00:02:09.222 --> 00:02:10.248
我想带你们两个
I wanted to show you both.

25
00:02:11.777 --> 00:02:14.310
>> Brian Holt: 我不认为真的有优势。
&gt;&gt; Brian Holt: I don't think
there is really an advantage.

26
00:02:14.310 --> 00:02:18.224
React 路由器和 Reach 路由器人员鼓励您使用重定向
The React router and the Reach router
people encourage you to use a redirect

27
00:02:18.224 --> 00:02:21.490
组件，这就是他们喜欢的内容。
component, that's what
they say they prefer.

28
00:02:21.490 --> 00:02:26.950
但我认为这是一个非常好的决定
But I think it's a perfectly good
decision to decide either way.

29
00:02:30.012 --> 00:02:33.210
> > Brian Holt: 好的，在这里，这里，在媒体里，
&gt;&gt; Brian Holt: Okay, down here,
here, inside of media,

30
00:02:33.210 --> 00:02:37.978
我们要把 showModal 也放了我们要把它拿掉
we're gonna put showModal as well,
cuz we're gonna grab that out.

31
00:02:40.709 --> 00:02:42.343
> > Brian Holt: 因此，我只在那里加上 41 。
&gt;&gt; Brian Holt: So I just add 41 there.

32
00:02:44.858 --> 00:02:51.025
>> Brian Holt: 在描述下，我们会把它放在这里。
&gt;&gt; Brian Holt: And then below
the description, we're gonna put this.

33
00:02:54.091 --> 00:02:55.739
>> Brian Holt: 在此选择花括号，然后
&gt;&gt; Brian Holt: So
pick up your curly braces here, and

34
00:02:55.739 --> 00:02:57.134
然后我们要做一个三元的工作
then we're gonna do a ternary.

35
00:02:57.134 --> 00:03:02.460
所以如果我要洗澡
So if I should showModal,

36
00:03:02.460 --> 00:03:06.574
然后再显示这个
then display this,

37
00:03:06.574 --> 00:03:10.937
抱歉莫代尔
I'm sorry, modal.

38
00:03:10.937 --> 00:03:15.824
在这里面我们要把自己的标记
And inside of that,
we're going to put our own mark

39
00:03:15.824 --> 00:03:20.381
是否 &lt;h1&gt; 要采用名称?
up of like &lt;h1&gt; Would
you like to adopt name?

40
00:03:24.360 --> 00:03:27.377
>> Brian Holt: 然后将 div 和 className="按钮"放置。
&gt;&gt; Brian Holt: Then put a div and
className="buttons".

41
00:03:30.229 --> 00:03:34.841
> > Brian Holt: 接下来，我们会说，
&gt;&gt; Brian Holt: And
then here, we're gonna say,

42
00:03:34.841 --> 00:03:39.295
按钮 onClick= this.收养。
button onClick= this.adopt.

43
00:03:41.944 --> 00:03:45.971
> > Brian Holt: 你会说，是的。
&gt;&gt; Brian Holt: And you say, yes.

44
00:03:45.971 --> 00:03:53.473
然后你会说，不，我是个怪物，你只会把模型 toggle 。
And then you're gonna say, no, I'm
a monster, and you just toggle the model.

45
00:03:57.014 --> 00:04:00.680
>> Brian Holt: 我的目标是让别人去买宠物。
&gt;&gt; Brian Holt: My goal is to
shame someone into buying a pet.

46
00:04:00.680 --> 00:04:05.615
开个玩笑就买只宠物
Just kidding,
only buy a pet if you are ready for

47
00:04:05.615 --> 00:04:09.450
一，但请收养所有宠物。
one, but please adopt all the pets.

48
00:04:14.270 --> 00:04:19.172
> > Brian Holt: 接下来，在此括号后面，
&gt;&gt; Brian Holt: And then afterwards,
after this parenthesis right here,

49
00:04:19.172 --> 00:04:21.449
我放了 :null，对吧 ?
I put :null, right?

50
00:04:21.449 --> 00:04:26.019
因此，如果您告诉 " React " 可以根据您的猜测来呈现空值，那么它将不呈现任何内容。
So if you tell React to render null,
as you may guess, it renders nothing.

51
00:04:26.019 --> 00:04:28.319
因此，如果您正在显示模态，那么将显示模态。
So if you're showing the modal,
then show the modal.

52
00:04:28.319 --> 00:04:30.399
如果没有，那么显示模态，然后不显示任何内容。
If not, show modal then show nothing.

53
00:04:34.579 --> 00:04:35.851
>> Brian Holt: 为什么不喜欢呢?
&gt;&gt; Brian Holt: Why don't you like that?

54
00:04:47.300 --> 00:04:50.406
>> Brian Holt: Fine，我是一个怪物。
&gt;&gt; Brian Holt: Fine, I am a monster.

55
00:04:50.406 --> 00:04:51.860
我不知道为什么会这样
I don't know why it's doing that.

56
00:04:53.879 --> 00:05:00.399
然后我们要把它放在这里，当你点击这里的时候，在这个按钮上。
Then we have to put it so that when you
click on Adopt, here, on this button.

57
00:05:00.399 --> 00:05:07.120
所以，在这里，你会说 " this.toggleModal " ，对吧 ?
So the onClick here,
you're gonna say this.toggleModal, right?

58
00:05:07.120 --> 00:05:09.728
所以每当有人单击 " 采用 " 按钮时，它就会显示模态。
So whenever someone clicks on
the Adopt button, it shows the modal.

59
00:05:15.048 --> 00:05:16.935
> > Brian Holt: 在这里，第 53 行，我添加的内容。
&gt;&gt; Brian Holt: So line 53 here,
it's what I added.

60
00:05:16.935 --> 00:05:21.105
我们去看看现在的情况。
Let's go take a look at
what looks like now.

61
00:05:21.105 --> 00:05:24.295
所以我们在这里得到了最美好的孩子胖小子 Slim
So we got the goodest boy here,
Fat Boy Slim.

62
00:05:24.295 --> 00:05:29.182
如果我点击胖子 Slim ，你愿意领养 Fatboy Slim吗 ?
If I click on Adopt Fat Boy Slim,
Would you like to adopt Fatboy Slim?

63
00:05:29.182 --> 00:05:32.533
你说 " 是 " 或 " 否" 我是个怪物
And you say Yes or No, I'm a monster.

64
00:05:32.533 --> 00:05:37.297
[ LAUGH] 所以如果你点击了 " 是 " ，它就会导航到
[LAUGH] So if you clicked yes,
it'll navigate to

65
00:05:37.297 --> 00:05:42.172
胖男孩 Slim的 >> Brian Holt: 页面。
Fat Boy Slim's
&gt;&gt; Brian Holt: Page.

66
00:05:47.507 --> 00:05:51.194
>> Brian Holt: 但如果您单击 " 否" ，我是一个怪兽，它会关闭模态。
&gt;&gt; Brian Holt: But if you click on No,
I'm a monster, it closes the modal.

67
00:05:57.507 --> 00:05:59.584
>> Brian Holt: 很酷，对吧 ?
&gt;&gt; Brian Holt: Pretty cool, right?

68
00:05:59.584 --> 00:06:03.081
只要重新调整我的想法就好了
So just to remphasize what
I think is cool about this,

69
00:06:03.081 --> 00:06:05.579
此模态现在是 100% 的灵活性。
this modal is now 100% flexible.

70
00:06:05.579 --> 00:06:09.680
任何时候我需要展示一个模态的时候，我就把它拉上来，就可以了。
Any time that I need to show a modal,
I just pull this in and it just works.

71
00:06:09.680 --> 00:06:11.673
为了向你证明我的意思
And just to prove my point to you,

72
00:06:11.673 --> 00:06:16.862
如果我在此处检查元素， >> Brian Holt: 通知
if I inspect element here,
&gt;&gt; Brian Holt: Notice

73
00:06:16.862 --> 00:06:21.860
我有模态和根这些是两个完全不同的地方
that I have modal and root, and
these are two totally different places.

74
00:06:21.860 --> 00:06:26.350
但这一切都发生在根部外面，这真的很酷。
But this is all happening in here
outside of root, which is really cool.

75
00:06:28.589 --> 00:06:33.000
但因为这就是 React ，就像我使用这个组件的功能一样，
But because this is on React, like I'm
using functions from this component,

76
00:06:33.000 --> 00:06:35.170
我用的是作为成分出来的名字
I'm using the name,
which is coming out as components,

77
00:06:35.170 --> 00:06:38.090
我在用它里面的所有东西但它却在另一个地方
I'm using all this stuff inside of it but
it's rendering somewhere else.

78
00:06:38.090 --> 00:06:41.500
这真的很酷，因为如果你在做活动的听众，
It's actually really cool because
if you're doing event listeners, so

79
00:06:42.759 --> 00:06:49.557
就说我有个关于 div 的事件听众在峰上
let's say I have an event listener
here on div, which is above the modal,

80
00:06:49.557 --> 00:06:54.819
并单击 " onClick" 。
and say onClick.

81
00:06:54.819 --> 00:06:59.312
它的所有内容都是 console.log 。
And all it does is console.log it.

82
00:07:02.608 --> 00:07:08.699
> > Brian Holt: 现在，它还应该在这里工作，让我们确保我不会在这里发疯。
&gt;&gt; Brian Holt: Now, it should still work
where, let's make sure I'm not crazy here.

83
00:07:13.168 --> 00:07:15.310
>> Brian Holt: 好，因此单击侦听器正在工作。
&gt;&gt; Brian Holt: Okay, so
the click listener is working.

84
00:07:15.310 --> 00:07:19.100
在我点击 div 的地方，它会展示这些事件。
Anywhere I click on the div,
it's gonna show these events.

85
00:07:19.100 --> 00:07:24.810
但如果我点击这个，让我把这个垃圾给你看。
But if I click into this,
let me just trash this so you can see.

86
00:07:24.810 --> 00:07:28.812
我在点击这个 div 之外的 DOM 元素
I'm clicking on DOM elements
outside of this div, but

87
00:07:28.812 --> 00:07:32.120
它仍然被正确地分派了
it's still getting dispatched correctly.

88
00:07:32.120 --> 00:07:36.040
因此，事件代表团实际上仍将经历相同的 React 树。
So the event delegation actually will
still go through the same React tree.

89
00:07:36.040 --> 00:07:38.120
Cuz React 有自己的事件系统。
Cuz React has its own event system.

90
00:07:38.120 --> 00:07:41.930
它看起来和它完全一样但它的特点是这样的
It looks exactly and it acts exactly the
same but it has nice features like this

91
00:07:41.930 --> 00:07:45.610
我可以在那个 DOM 以外的地方处理事件代表团
where I can actually handle event
delegation outside of that DOM.

92
00:07:45.610 --> 00:07:46.990
这也太酷了
That's really cool too.

93
00:07:46.990 --> 00:07:49.545
我不知道为什么这应该有用，我只是对它着迷。
I don't know why this should be useful,
I'm just fascinated by it.

94
00:07:53.353 --> 00:07:56.720
>> Brian Holt: Great，任何有关门户网站的问题 ?
&gt;&gt; Brian Holt: Great,
any questions about portals?

95
00:07:59.459 --> 00:08:02.410
这对像莫达斯这样的东西很有用，但也很有用
So this is useful for things like
modals but it also could be useful for

96
00:08:02.410 --> 00:08:06.529
也许你又像个情境导航
like, maybe you have, again,
like a contextual navigation or

97
00:08:06.529 --> 00:08:09.250
就像这样你可以用一个入口来处理
something like that,
you could handle that with a portal.

98
00:08:09.250 --> 00:08:10.819
您可以处理特殊标题或
You could handle a special header or

99
00:08:10.819 --> 00:08:14.740
一个特别的页脚或类似的东西
a special footer or
lots of things like that.

100
00:08:15.990 --> 00:08:21.129
在 Netflix 上，我们使用入口向玩家渲染，因为玩家是
At Netflix, we used portals to render
into the player because the player was

101
00:08:21.129 --> 00:08:26.206
另外还有一些很酷的东西你可以和他们一起做
a separate thing, so there's a bunch
of cool stuff you could do with them.

102
00:08:26.206 --> 00:08:27.274
这曾经是不可能的
This used to be impossible,

103
00:08:27.274 --> 00:08:29.415
用它来处理这些事情是不可能的
it used to be impossible to
handle these kinds of things.

104
00:08:29.415 --> 00:08:33.227
实际上我们得用 Netflix 做这个疯狂的特殊的渲染
We actually had to build this crazy
special render that Netflix only used for

105
00:08:33.227 --> 00:08:34.605
花了很长时间来处理这个问题
a long time to handle that.
