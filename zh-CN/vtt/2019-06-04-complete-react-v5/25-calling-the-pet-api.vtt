WEBVTT

1
00:00:00.054 --> 00:00:02.529
>> Brian Holt: 实际上要给你看一个很酷的魔术，这个包裹可以为你做。
&gt;&gt; Brian Holt: Actually gonna show you
a cool trick that parcel can do for you.

2
00:00:03.930 --> 00:00:10.074
因此，我们需要安装新的客户机库以针对 API 发出请求。
So, we need to install a new client
library to make requests against an API.

3
00:00:11.632 --> 00:00:14.128
> > Brian Holt: 那么，我要在这里做什么，我要说，
&gt;&gt; Brian Holt: So,
what I'm gonna do here, I'm gonna say,

4
00:00:14.128 --> 00:00:19.216
导入， >> Brian Holt: 如下所示的 ANIMALS
import,
&gt;&gt; Brian Holt: ANIMALS like this from

5
00:00:19.216 --> 00:00:26.135
@frontendmasters， >> Brian Holt: /pet 类似。
@frontendmasters,
&gt;&gt; Brian Holt: /pet like that.

6
00:00:27.361 --> 00:00:30.550
>> Brian Holt: 现在，你和我没有安装这个，对吧 ?
&gt;&gt; Brian Holt: Now, you and
I have not installed this, right?

7
00:00:30.550 --> 00:00:34.755
这不在我们的包里，但是包裹够聪明的说，哎，
This was not in our package.json, but
parcel is smart enough to say, hey,

8
00:00:34.755 --> 00:00:38.087
就在 NPM 注册中心我去帮你拿
this is out on the NPM registry,
I'll just go grab it for you.

9
00:00:38.087 --> 00:00:41.590
所以你不需要在 NPM 上安装它，它会为你做。
So you don't have to NPM install it,
it'll just do it for you.

10
00:00:41.590 --> 00:00:43.493
如果你看这里我说省省吧
So if you see here, if I say save,

11
00:00:43.493 --> 00:00:47.240
它会说在那里安装前面的主人/宠物
it's gonna say Installing
frontendmasters/pet right there.

12
00:00:51.402 --> 00:00:56.351
>> Brian Holt: 在安装时，它将重建项目，并且
&gt;&gt; Brian Holt: And, while it's installing,
it will rebuild the project, and

13
00:00:56.351 --> 00:00:59.340
现在我们可以在一个项目上找到它
now it's available to us on a project.

14
00:00:59.340 --> 00:01:01.159
好了我们安装了这个主子/宠物
Okay, so
we installed this frontendmasters/pet.

15
00:01:01.159 --> 00:01:05.983
如果您感到更舒适，那么只能说 npm install @frontendmasters/pet。
If you feel more comfortable, you can just
say npm install @frontendmasters/pet.

16
00:01:08.298 --> 00:01:09.896
>> Brian Holt: 但您也可以为
&gt;&gt; Brian Holt: But
you can also have parcel just do it for

17
00:01:09.896 --> 00:01:12.013
他是你的一个有趣的特征
him which is kind of a fun
feature that it does for you.

18
00:01:13.283 --> 00:01:13.962
> > Brian Holt: 再次，
&gt;&gt; Brian Holt: And, again,

19
00:01:13.962 --> 00:01:16.942
如果您查看 package.json ，您可以看到它已安装它。
if you look in package.json you
can see that it installed it.

20
00:01:16.942 --> 00:01:22.085
这里，前面的主人/宠物，在他们的森林里保存。
Here, frontrendmasters/pet and
save that in their forest.

21
00:01:23.349 --> 00:01:24.334
>> Brian Holt: Magical.
&gt;&gt; Brian Holt: Magical.

22
00:01:26.478 --> 00:01:27.102
>> Brian Holt: 好的
&gt;&gt; Brian Holt: Okay, so

23
00:01:27.102 --> 00:01:32.097
现在我们有了这个 ANIMAL 的阵列，它只是我相信的一系列的字符串。
now we have this ANIMAL's array which
is just an array of strings I believe.

24
00:01:34.616 --> 00:01:41.281
布莱恩 - 霍尔特: 在这里，我们会说动物，
&gt;&gt; Brian Holt: And here,
we're gonna say const animal,

25
00:01:41.281 --> 00:01:45.354
设置动物 = useState 和
set animal = useState and

26
00:01:45.354 --> 00:01:53.969
我们要从一只狗开始， >> Brian Holt: 好吗 ?
we're gonna start with a dog,
&gt;&gt; Brian Holt: Okay?

27
00:01:55.603 --> 00:01:57.835
> > 布莱恩 - 霍尔特:
&gt;&gt; Brian Holt: Then
we're gonna go down and

28
00:01:57.835 --> 00:02:03.328
然后我们就会在我们的输入下面还有一个标签
then we are going to make underneath
our input there, another label,

29
00:02:05.953 --> 00:02:09.728
>> Brian Holt: htmlFor = 动物。
&gt;&gt; Brian Holt: htmlFor = animal.

30
00:02:14.300 --> 00:02:18.103
> > Brian Holt: 在这个过程中，我们将选择动物。
&gt;&gt; Brian Holt: And inside of that,
we're going to select Animal.

31
00:02:21.030 --> 00:02:24.538
> > Brian Holt: 我们将在其中进行选择。
&gt;&gt; Brian Holt: And,
we're gonna put a select inside of that.

32
00:02:24.538 --> 00:02:30.352
所以选择， >> Brian Holt: id="动物"，
So select,
&gt;&gt; Brian Holt: id="animal",

33
00:02:34.021 --> 00:02:38.240
>> Brian Holt: value= 动物。
&gt;&gt; Brian Holt: value= animal.

34
00:02:42.152 --> 00:02:45.122
>> Brian Holt: onChange = e，
&gt;&gt; Brian Holt: onChange = e, and

35
00:02:45.122 --> 00:02:50.884
then setAnimal e.target.value。
then setAnimal e.target.value.

36
00:02:54.348 --> 00:02:56.276
> > 布莱恩 - 霍尔特: 所以我要给你看一些很酷的东西
&gt;&gt; Brian Holt: So I'm gonna show you
something pretty cool that we've

37
00:02:56.276 --> 00:02:57.449
已经完成了
done already.

38
00:02:57.449 --> 00:03:00.789
所以说，嘿，如果你要做 " onChange" ，
So it's saying, hey,
if you're gonna do onChange,

39
00:03:00.789 --> 00:03:02.689
我需要你也有伦布卢
I need you to have onBlur as well.

40
00:03:02.689 --> 00:03:06.312
因为一些屏幕阅读器，当你在做东西的时候，
Because some screen readers,
when you're tabbing across things,

41
00:03:06.312 --> 00:03:08.127
不触发 onChange 事件。
don't trigger onChange events.

42
00:03:08.127 --> 00:03:13.193
这意味着当与屏幕朗读器一起使用时，代码将无法工作，
Which means that your code would not work
when being used with a screen reader,

43
00:03:13.193 --> 00:03:16.120
这显然是个大派对对吧
which is obviously a big party foul,
right?

44
00:03:16.120 --> 00:03:18.188
我喜欢 jsx 的盟友只为你和你
And I love the jsx ally,
just catches up for you and

45
00:03:18.188 --> 00:03:21.110
说我不会让你前进直到你解决这个问题的对吧
says like I'm not gonna let you go
forward until you fix this, right?

46
00:03:21.110 --> 00:03:23.990
很明显这让人分心来看这么多红线
Obviously like, this is so
distracting to see so many red lines,

47
00:03:23.990 --> 00:03:26.520
我自己都应付不来对吧
I just can't even handle myself, right?

48
00:03:26.520 --> 00:03:31.723
所以，我们可以通过说 onblur = e 来解决，
So, we can fix that by saying onBlur = e,

49
00:03:31.723 --> 00:03:37.367
setAnimal， >> Brian Holt: e.target.value，
setAnimal,
&gt;&gt; Brian Holt: e.target.value,

50
00:03:37.367 --> 00:03:39.209
啊，对吧 ?
as well, right?

51
00:03:39.209 --> 00:03:42.608
现在一切都很开心我们已经确定了我们的无障碍环境
And now, it's all happy again
cuz we fixed our accessibility

52
00:03:42.608 --> 00:03:46.034
问题， >> Brian Holt: 好吗 ?
issue,
&gt;&gt; Brian Holt: Okay?

53
00:03:46.034 --> 00:03:50.192
然后我们会在这里放一堆不同类型的
And then we're gonna put a bunch of
options in here of different types of

54
00:03:50.192 --> 00:03:52.074
我们可以寻找的动物
animals that we can search for.

55
00:03:52.074 --> 00:03:55.280
第一个，我们放在这里，只是一个空白的选项。
So the first one, we put in here,
is just a blank option.

56
00:03:55.280 --> 00:04:00.423
这意味着当我们搜索所有动物的时候，对吗 ?
This is gonna represent when we search for
all animals, right?

57
00:04:03.020 --> 00:04:04.634
> > 布莱恩 - 霍尔特: 我想你也可以放进来
&gt;&gt; Brian Holt: I guess you
could put in here as well,

58
00:04:06.268 --> 00:04:07.300
> > 布莱恩 - 霍尔特:
&gt;&gt; Brian Holt: Something like this,

59
00:04:09.681 --> 00:04:12.169
>> 布莱恩 - 霍尔特:
&gt;&gt; Brian Holt: And put All as well.

60
00:04:12.169 --> 00:04:13.370
这可能不是个坏主意
That's probably not a bad idea.

61
00:04:19.795 --> 00:04:23.355
> > Brian Holt: 然后在这里，我们要做花括号
&gt;&gt; Brian Holt: And then here,
we're gonna do curly braces and

62
00:04:23.355 --> 00:04:26.470
我们这里有一组动物对吧
we have an array of animals here, right?

63
00:04:26.470 --> 00:04:29.317
我们要对每个动物都有一个选择
And we wanna have one option for
every animal in there.

64
00:04:30.470 --> 00:04:32.812
>> Brian Holt: 我们有一个字符串列表，
&gt;&gt; Brian Holt: So
what we have is a list of strings, and

65
00:04:32.812 --> 00:04:36.680
我们需要的是一份组件清单对吧
what we need back from it is
a list of components, right?

66
00:04:36.680 --> 00:04:37.269
有道理吗
It makes sense?

67
00:04:37.269 --> 00:04:39.415
我们有一系列的字符串和
Like, we have a list of strings and

68
00:04:39.415 --> 00:04:44.259
我们想把这些字符串的清单变成一个选项列表
we wanna turn those list of strings
into a list of option components.

69
00:04:44.259 --> 00:04:45.978
也可以选择选项卡或任何您要调用的选项卡。
Or option tabs or
whatever you want to call them.

70
00:04:47.047 --> 00:04:49.737
> > Brian Holt: 好，幸运的是，有些东西直接构建成 JavaScript
&gt;&gt; Brian Holt: Well, luckily, there’s
something built directly into JavaScript

71
00:04:49.737 --> 00:04:52.656
将一系列事物转化为另一种事物，对，
that translates one array of things to
another array of things, right, and

72
00:04:52.656 --> 00:04:54.345
这叫做地图
it’s called map.

73
00:04:54.345 --> 00:04:58.846
> > Brian Holt: 因此，如果我说动画 . 映射，对， cut 它是一个数组，
&gt;&gt; Brian Holt: So if I say animas.map,
right, cuz it’s an array,

74
00:04:58.846 --> 00:05:03.946
然后你给它一个在这个阵列中的一个项目
then you give it a function that
takes an item in that array and

75
00:05:03.946 --> 00:05:07.060
把它变成别的东西
transforms it into something else.

76
00:05:07.060 --> 00:05:10.480
所以我要拿这个串好吗
So I'm gonna take this string, right?

77
00:05:10.480 --> 00:05:14.064
或者，我们只称它为动物，因为它就是这样。
Or, we'll just call it animal
because that's what it is.

78
00:05:14.064 --> 00:05:17.716
>> Brian Holt: 然后，我们将在选项中选择该退货
&gt;&gt; Brian Holt: And then we're
gonna have that return in option

79
00:05:17.716 --> 00:05:22.444
组件， >> Brian Holt: 使用值
component,
&gt;&gt; Brian Holt: With the value of

80
00:05:22.444 --> 00:05:26.050
这个选择成分将会成为动物
that option component is
going to be the animal.

81
00:05:26.050 --> 00:05:29.935
而且，它也会展示动物。
And, also that it's
going to display animal.

82
00:05:35.197 --> 00:05:37.829
> > Brian Holt: 好的，这里会有一条红线
&gt;&gt; Brian Holt: Okay,
it'll get a red line here for

83
00:05:37.829 --> 00:05:41.523
只要一会儿我们就能解决了
just a second which we'll
fix in just one moment.

84
00:05:45.338 --> 00:05:47.389
>> Brian Holt: 这是否有意义 ?
&gt;&gt; Brian Holt: So does this make sense?

85
00:05:47.389 --> 00:05:50.867
首先， >> Brian Holt: 通过箭头函数，
First of all,
&gt;&gt; Brian Holt: With arrow functions,

86
00:05:50.867 --> 00:05:53.449
你可以让他们含蓄的对吧
you could have them implicit returned,
right?

87
00:05:53.449 --> 00:05:58.069
所以在这个特殊的情况下，我有箭的功能，没有花括号，
So in this particular case, I had the
arrow function and I have no curly braces,

88
00:05:58.069 --> 00:06:00.629
这就意味着它隐含地回归了
which means it’s implicitly returned.

89
00:06:00.629 --> 00:06:06.612
因此，如果我删除了此括号并删除了此括号，那么这将是等价的。
So this would be equivalent if I deleted
this parentheses and deleted this one.

90
00:06:07.963 --> 00:06:12.903
> > Brian Holt: 我说了回来， >> Brian Holt: 就像这样。
&gt;&gt; Brian Holt: And I said return,
&gt;&gt; Brian Holt: Like that.

91
00:06:17.548 --> 00:06:18.817
>> Brian Holt: 这两种情况相同，但
&gt;&gt; Brian Holt: Those two
things are the same, but

92
00:06:18.817 --> 00:06:21.706
因为我有个括号在下一行继续，对，
because I have the parenthesis which
means continue on the next line, right,

93
00:06:21.706 --> 00:06:22.949
那是隐含的回报
it's an implicit return.

94
00:06:22.949 --> 00:06:23.889
有道理吗
Does that make sense?

95
00:06:30.774 --> 00:06:33.418
>> Brian Holt: 我给你们看的这两件事情完全一样。
&gt;&gt; Brian Holt: So those two things that
I showed you are exactly the same.

96
00:06:36.514 --> 00:06:40.699
> > Brian Holt: 现在我要为每一个动物都有一个选择。
&gt;&gt; Brian Holt: So now I'm gonna
have one option for every animal.

97
00:06:44.185 --> 00:06:47.701
> > Brian Holt: 当然，如果你回去看这里，
&gt;&gt; Brian Holt: And indeed hopefully,
if you go back and look over here,

98
00:06:47.701 --> 00:06:52.598
还不高兴，但是你可以看到， >> Brian Holt: 我有一份各种各样的
it's still upset but you can see,
&gt;&gt; Brian Holt: I have a list of various

99
00:06:52.598 --> 00:06:53.840
不同的选择
different options.

100
00:06:53.840 --> 00:06:56.406
这只是个小一点
It's just a tiny bit bigger.

101
00:06:56.406 --> 00:07:00.776
这里有个酒庄，鸟，猫，狗，马，兔子，鱼鳞翅，其他
So there's a barnyard, bird, cat, dog,
horse, rabbit, scales fins, other and

102
00:07:00.776 --> 00:07:04.418
小火，就是可以搜寻的动物的类型
small furry, which are the type of
animals that can be able to search for

103
00:07:04.418 --> 00:07:05.228
一个交叉 API。
a crosses API.
