WEBVTT

1
00:00:00.250 --> 00:00:05.785
>> Brian Holt: 在下面我们会说 npm install -D
&gt;&gt; Brian Holt: So
down here we're gonna say npm install -D

2
00:00:05.785 --> 00:00:11.779
就像那样的漂亮的
eslint eslint-config-prettier like that.

3
00:00:14.369 --> 00:00:16.199
这将为我们安装两种不同的东西。
This is going to install two
different things for us.

4
00:00:16.199 --> 00:00:19.586
很明显的是埃斯皮林特，这是一个代码 linter。
It's gonna obviously eslint,
which is a code linter.

5
00:00:19.586 --> 00:00:23.675
现在我们来谈谈普雷蒂埃和埃林特之间的区别。
Let's talk about what the difference
between prettier and eslint now.

6
00:00:23.675 --> 00:00:28.100
因为人们混淆了两者，这是可以理解的，因此有重叠。
Because people kind of confuse the two and
understandably so, there's overlap.

7
00:00:31.129 --> 00:00:34.658
Prettier 纯粹是担心这里有空间吗 ?
Prettier is purely concerned
with is there a space here?

8
00:00:34.658 --> 00:00:36.920
这里有吗
Is there return here?

9
00:00:36.920 --> 00:00:40.322
这颗文件是怎样的，它是非常机械的，对吧 ?
How does this file star,
it's very mechanical, right?

10
00:00:40.322 --> 00:00:42.526
这很有格式，但是
It's very much, how is this formatted, but

11
00:00:42.526 --> 00:00:45.491
它不关心密码的实际情况，对吧 ?
it doesn't care about what
the code actually does, right?

12
00:00:45.491 --> 00:00:48.753
所以它看起来不存在这个变量吗 ?
So it doesn't look like
does this variable exist?

13
00:00:48.753 --> 00:00:51.290
你知道吗我们是用错误的方法吗
Does this you know,
are we using the wrong method here?

14
00:00:51.290 --> 00:00:53.409
我们是用旧的 JavaScript 吗
Are we using old JavaScript here?

15
00:00:53.409 --> 00:00:57.335
只要它像 prettier 一样不在乎
As long as it parses like
prettier doesn't care.

16
00:00:57.335 --> 00:01:01.511
埃斯特林特更关心风格，对。
Eslint is much more concerned with style,
right.

17
00:01:01.511 --> 00:01:03.719
它跟你用什么方法有关 ?
It's concerned with what
methods are you using?

18
00:01:05.349 --> 00:01:06.950
你知道，交通便利，对吧 ?
You know, accessibility friendly, right?

19
00:01:06.950 --> 00:01:08.700
它可以检查这些东西的种类。
It can check kind of those things.

20
00:01:09.780 --> 00:01:11.269
有道理吗
Does that make sense?

21
00:01:11.269 --> 00:01:14.500
你可以让埃皮林特检查一些机械类的东西。
So you can have eslint check
some of the mechanical stuff.

22
00:01:14.500 --> 00:01:17.641
但它没有那种对那种东西有预力的力量。
But it doesn't have the power that
prettier does for that kind of stuff.

23
00:01:17.641 --> 00:01:20.379
这就是为什么我们要安装漂亮的配置
So that's why we're going to
install the prettier config,

24
00:01:20.379 --> 00:01:21.730
我想说的是 ...
to basically say hey eslint.

25
00:01:21.730 --> 00:01:24.819
那些你有时会担心的事情
That stuff that you sometimes
worry about like spacing,

26
00:01:24.819 --> 00:01:27.852
别担心因为有漂亮的东西对吧
don't worry about it because
prettier has it, right?

27
00:01:27.852 --> 00:01:29.418
所以，安装这两个部件。
So install both of those.

28
00:01:39.597 --> 00:01:41.631
>> Brian Holt: 好的，现在我们都有了。
&gt;&gt; Brian Holt: Okay, and
now we have both of these.

29
00:01:41.631 --> 00:01:47.213
Esrint-config prettier， eslint和
Eslint-config prettier, eslint, and

30
00:01:47.213 --> 00:01:54.640
现在我们要去创建一个 eslint-rc
now we're going to go
create A eslint-rc as well.

31
00:01:54.640 --> 00:01:56.659
所以，制作一个新文件，保存它。
So make a new file, save it.

32
00:01:58.210 --> 00:02:04.501
打电话给这个 .eslint-c.Json
And call this .eslint-c.Json.

33
00:02:06.064 --> 00:02:08.901
>> Brian Holt: 他们要求您将其扩展，
&gt;&gt; Brian Holt: They require
you give it the extension,

34
00:02:08.901 --> 00:02:11.242
而 .prettierrc 不存在。
whereas .prettierrc does not.

35
00:02:11.242 --> 00:02:16.026
因为您还可以在 YAML 中以及在 JavaScript 中进行配置。
Because you can also configure this in
YAML, as well as in JavaScript as well.

36
00:02:16.026 --> 00:02:18.098
但我们现在要做的是 JSON 方式
But we're gonna do the JSON
way of doing it right now.

37
00:02:20.983 --> 00:02:23.110
>> Brian Holt: 是的，我用了一段时间。
&gt;&gt; Brian Holt: And yes, I use a period.

38
00:02:23.110 --> 00:02:25.329
你有问题吗
Did you have a question?

39
00:02:25.329 --> 00:02:27.795
>> 扬声器 2: 在终端中运行命令时，
&gt;&gt; Speaker 2: When I ran
the command in the terminal,

40
00:02:27.795 --> 00:02:31.539
它创建了一个名为包装行走的新文件，是 JSON吗 ?
it created a new file called package walk,
is that JSON?

41
00:02:31.539 --> 00:02:33.585
> > Brian Holt: 是，应该这样做。
&gt;&gt; Brian Holt: Yep, it should do that.

42
00:02:33.585 --> 00:02:36.539
好吧让我们先简单谈谈吧
All right, so
let's let's just address that briefly.

43
00:02:36.539 --> 00:02:45.920
如果我回到这里，它就创造了一个新的文件叫做 " 包装锁" 。
If I go back over here, it created
a new file here called package Lock.

44
00:02:45.920 --> 00:02:50.920
所以，包锁是一个锁文件。
So package lock is a lock file.

45
00:02:50.920 --> 00:02:55.643
[ LAUGH] 所以当你将代码部署到生产时
[LAUGH] So what it actually does is
when you deploy your code to production,

46
00:02:55.643 --> 00:02:58.395
实际上它锁定了版本
it's actually locked down the versions.

47
00:02:58.395 --> 00:03:02.847
如果你看看这个你可以看到它有完整性检查
If you look at this you can see
that it has integrity checks, and

48
00:03:02.847 --> 00:03:08.819
比如从哪里下载的，什么版本的，之类的。
like where to download it from and
what version it's on and stuff like that.

49
00:03:08.819 --> 00:03:10.099
你想让它有这个
And you want it to have this,

50
00:03:10.099 --> 00:03:14.129
因为现在我可以在制作过程中安装正确的版本
because now I can install exactly
the correct versions in productions.

51
00:03:14.129 --> 00:03:17.110
所以，我在我的电脑里运行的，正是生产过程中的运行。
So, what I'm running in my computer,
is exactly what's running on production.

52
00:03:18.939 --> 00:03:23.355
你这样做的方式是当你在生产过程中
So, the way that you do that when
you're running in production,

53
00:03:23.355 --> 00:03:28.270
不要在你的本地电脑上做这个但如果我做了晚上我就可以了
don't do this on your local computer,
but if I do it npm, oops, npm ci.

54
00:03:28.270 --> 00:03:30.300
它会用这个包裹锁
It'll actually use the package lock and

55
00:03:30.300 --> 00:03:33.954
要安装正确版本的 JSON 包，对吗 ?
sort of package of JSON to install
exactly the correct version, right?

56
00:03:33.954 --> 00:03:38.009
而如果您执行 NPM 安装，请参阅此处的 JSON 包。
Whereas if you do NPM install see
if I got a package of JSON here.

57
00:03:39.310 --> 00:03:45.469
假设你下周就会释放 1.17.1，对吧 ?
Let's say you know next week
they release 1.17.1, right?

58
00:03:45.469 --> 00:03:47.599
如果我的文件看起来像这样
If my file looks like this.

59
00:03:47.599 --> 00:03:49.009
它实际安装在 1.17.1。
It'll actually install at 1.17.1.

60
00:03:49.009 --> 00:03:52.629
原因在于这是补丁版本，所以
Reason being it's because
that's a patch version, so

61
00:03:52.629 --> 00:03:53.960
应该是兼容的吧
it should be compatible, right?

62
00:03:53.960 --> 00:03:55.420
有道理吗
Does that make sense?

63
00:03:55.420 --> 00:04:00.009
而如果我做 MPMCI ，它会真正安装我所使用的版本。
Whereas if I do MPMCI, it'll actually
install exactly the versions I was using.

64
00:04:00.009 --> 00:04:02.099
因此，它仍将安装 MPM 1.17.0。
So it'll still install MPM 1.17.0.

65
00:04:02.099 --> 00:04:04.340
这能回答你的问题吗
Does that answer your question?

66
00:04:04.340 --> 00:04:05.520
>> 扬声器 2: 是。 谢谢。
&gt;&gt; Speaker 2: Yeah.
Thank you.

67
00:04:05.520 --> 00:04:06.599
> > Brian Holt: Cool.
&gt;&gt; Brian Holt: Cool.

68
00:04:06.599 --> 00:04:08.780
是的和耶恩日志文件是一样的
Yep, it's the same thing
as a Yarn log file.

69
00:04:08.780 --> 00:04:13.479
据我所知，打包日志和 Yarn 日志完全相同。
The packaged log and Yarn log accomplish,
as far as I know, exactly the same thing.
