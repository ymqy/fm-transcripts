WEBVTT

1
00:00:00.050 --> 00:00:03.290
> > Brian Holt: 现在，我们有一个宠物组件，非常空。
&gt;&gt; Brian Holt: So right now, we have this
pet component, it's pretty much empty.

2
00:00:03.290 --> 00:00:06.110
我把里面的所有内容都删掉了
I deleted all the content inside of it so
you and

3
00:00:06.110 --> 00:00:08.759
我要重写这一点让它看起来更棒
I are gonna rewrite this a little bit so
it looks a little bit nicer.

4
00:00:08.759 --> 00:00:13.362
这就是宠物组件在搜索结果页面中显示的内容
So this is the pet component's gonna
show in the search results page,

5
00:00:13.362 --> 00:00:16.881
将会在结果组件中使用。
which is gonna be used here
in the results component.

6
00:00:16.881 --> 00:00:20.981
所以在名字动物品种
So at name, animal, breed, and

7
00:00:20.981 --> 00:00:24.795
执行介质，位置和标识。
do media, location, and id.

8
00:00:24.795 --> 00:00:28.519
我们会把它们从道具中拔出来
We'll pull those out of the props,
so they're gonna be passed down.

9
00:00:28.519 --> 00:00:31.312
首先我们想做的是一个占位符图像
First thing we wanna have is a placeholder
image just in case, cuz some of these

10
00:00:31.312 --> 00:00:36.840
动物实际上没有 >> Brian Holt: Images.
animals don't actually have
&gt;&gt; Brian Holt: Images.

11
00:00:36.840 --> 00:00:41.119
所以我们要用我最喜欢的地方
So we're going to use place corgi
which is my favorite place to grab

12
00:00:41.119 --> 00:00:45.689
占位符图像，我们将抓取 300 像素的像素图像，并且
placeholder images, and
we'll grab a 300 by 300 pixel image, and

13
00:00:45.689 --> 00:00:51.049
那么我们就会说如果 ( 冥想长的话)
then we'll say if(media.length).

14
00:00:51.049 --> 00:00:53.609
所以如果媒体是照片来的
So if media,
which is the photos coming in here,

15
00:00:53.609 --> 00:00:58.520
对它有任何长度我们会说
has any length to it, and we'll say, yeah.

16
00:00:58.520 --> 00:01:05.430
如果是平庸的话我们就会说英雄 = 媒体，
If media.length,
then we'll say hero = media,

17
00:01:05.430 --> 00:01:10.409
0 是此处的第一个图像，是其中的小图像。
0 is the first image in here and
the small image inside of it.

18
00:01:11.590 --> 00:01:17.063
这样我们就能找到第一幅图像
So that'll give us either the first
image that we can find or

19
00:01:17.063 --> 00:01:19.364
看看这里的科尔吉
look at the place corgi.

20
00:01:19.364 --> 00:01:22.224
然后我们要回来了一个 href
And then here,
we're going to return, a href, so

21
00:01:22.224 --> 00:01:24.751
这将成为详细信息页面的链接
this is going to be a link
to the details page,

22
00:01:24.751 --> 00:01:28.694
我想这将是我们共同编码的下一个问题
which will I think will be the next
thing that we'll code up together.

23
00:01:28.694 --> 00:01:37.302
因此 /details/$ {id} 和
So /details/$ {id} and

24
00:01:37.302 --> 00:01:44.479
className="pet"。
className="pet".

25
00:01:44.479 --> 00:01:49.819
在这种情况下，我们将使用类名为 "图像容器"的 div 。
Inside of that, we'll put a div
with className="image-container".

26
00:01:53.109 --> 00:01:56.960
>> Brian Holt: 在此，源与英雄相等的图像
&gt;&gt; Brian Holt: And inside of that,
an image where the source is equal to hero

27
00:01:56.960 --> 00:01:59.611
而高音等于宠物的名字。
and the alt is equal to
the name of the pet.

28
00:02:02.125 --> 00:02:06.724
>> Brian Holt: 好，下面我们将有 div className="info"。
&gt;&gt; Brian Holt: Okay, beneath that
we'll have div className="info".

29
00:02:10.286 --> 00:02:12.816
>> Brian Holt: 在其中，我们将有一个带有名称的 h1 。
&gt;&gt; Brian Holt: And inside of that,
we'll have an h1 with a name.

30
00:02:15.640 --> 00:02:19.829
>> Brian Holt: 和 h2 ，此处我将使用模板字符串。
&gt;&gt; Brian Holt: And h2, and
here I'm gonna use a template string.

31
00:02:19.829 --> 00:02:21.430
您也可以在没有模板字符串的情况下执行此操作。
You also can do this
without template strings.

32
00:02:21.430 --> 00:02:25.240
这对你很有影响我发现这跟模板弦比较容易
It's kinda up to you, I found this
easier to do with template strings.

33
00:02:25.240 --> 00:02:33.531
所以我们要把动物 > Brian Holt:
So we're gonna put animal
&gt;&gt; Brian Holt: And

34
00:02:33.531 --> 00:02:39.081
然后破折号然后繁殖 > > Brian Holt: Then
then dash and then breed
&gt;&gt; Brian Holt: Then

35
00:02:39.081 --> 00:02:43.799
一个破折号和位置好吗
a dash and location, okay?

36
00:02:45.579 --> 00:02:47.563
>> Brian Holt: 所以很多 React 程序都是这样的，
&gt;&gt; Brian Holt: So
a lot of React program looks like this,

37
00:02:47.563 --> 00:02:50.270
它只是在构造标记，对吧 ?
where it's just constructing markup,
right?

38
00:02:50.270 --> 00:02:54.450
一般的前端开发，一般都是这样的。
A lot of just front end development
in general kinda looks like this.

39
00:02:54.450 --> 00:02:58.050
但现在如果我们回去看看我们的宠物组件
But now, if we go back over and
look at our pet component,

40
00:02:58.050 --> 00:03:00.450
这应该看起来更宜人了
this should look a lot more pleasant.

41
00:03:00.450 --> 00:03:02.931
我们去看看 " 收养我"
Let's go take a look at the Adopt Me.

42
00:03:02.931 --> 00:03:05.707
我们会搜到一些东西你可以在这里看到
We'll search for something,
and you can see here,

43
00:03:05.707 --> 00:03:07.806
我们要回各种宠物了
we're getting back all sorts of pets.

44
00:03:11.193 --> 00:03:13.378
> > Brian Holt: 你可以在这里看到这些
&gt;&gt; Brian Holt: And
you can see here that these corgi ones,

45
00:03:13.378 --> 00:03:15.639
这些都是没有图象的
these are the ones that don't have images.

46
00:03:21.783 --> 00:03:23.889
>> Brian Holt: 因此，请继续跳至此处的落实。
&gt;&gt; Brian Holt: So go ahead and
jump up to the commit here.

47
00:03:23.889 --> 00:03:29.198
如果你落后，这个承诺是， >> Brian Holt:
If you're behind, this commit was,
&gt;&gt; Brian Holt: This one here,

48
00:03:29.198 --> 00:03:32.629
异步调用 petfinder API，更新 Pet 组件。
async calls to Petfinder API,
update Pet component.

49
00:03:32.629 --> 00:03:35.829
所以如果你能跳下去你就会被抓起来
So if you can jump forward to that commit,
you'll be caught up with me.
