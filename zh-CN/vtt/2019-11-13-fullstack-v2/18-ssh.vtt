WEBVTT

1
00:00:00.050 --> 00:00:05.000
>> Jem Young: 现在我们在 DigitalOcean 的部分谈论 SSH
&gt;&gt; Jem Young: Let's talk about SSH by
now we're in the portion of DigitalOcean

2
00:00:05.000 --> 00:00:09.810
其中说，您要如何登录，可以使用 SSH 密钥或
where it says hey how do you wanna
log in you can use SSH keys or

3
00:00:09.810 --> 00:00:11.970
您可以使用一次性密码。
you can use a one time password.

4
00:00:11.970 --> 00:00:15.529
使用密码很容易，因为更简单的是向您发送电子邮件，
And it's tempting to use a password
because it's simpler that is email to you,

5
00:00:15.529 --> 00:00:19.250
你登录你会很高兴你只会好好想想
you log in you're good to
go you only think about it.

6
00:00:19.250 --> 00:00:20.714
但是我们要使用 SSH 密钥。
But we want to use an SSH key.

7
00:00:22.606 --> 00:00:24.390
>> Jem Young: 这一点是关于安全的。
&gt;&gt; Jem Young: And
this a whole bit on security.

8
00:00:24.390 --> 00:00:27.399
安全是非常重要的。
And security is really important.

9
00:00:27.399 --> 00:00:30.829
但我要告诉你安全的基本两方面
But what I'll tell you about
security there is basic two ways

10
00:00:30.829 --> 00:00:34.100
如果您正在保护自己的 SSH 密钥，那么将进入服务器。
of getting into a server if you're
securing something their SSH keys.

11
00:00:34.100 --> 00:00:35.899
还有用户名和密码
And there's username and password.

12
00:00:37.039 --> 00:00:42.450
SSH 代表安全套接字 Shell，它是一个，好，我很快就会到达它。
SSH stands for Secure Socket Shell,
it is a, well, I'll get to it in a minute.

13
00:00:42.450 --> 00:00:49.270
但它是一个非常大的关键，现在是不可突破的。
But it's a very large key that
is as of now unbreakable.

14
00:00:49.270 --> 00:00:54.020
因此，它是登录服务器的一种非常安全的方法。
And so it's a much secure way
of logging into your server.

15
00:00:54.020 --> 00:00:58.990
开关是由两部分组成的
The switch is made up of two parts,
that's why it's usually, for

16
00:00:58.990 --> 00:01:00.890
我们都是关键的一对但我只能叫它钥匙
all us, a key pair but
I'll just call it key.

17
00:01:00.890 --> 00:01:02.979
有一个公用钥匙有一个私人钥匙
There's a public key
There's a private key.

18
00:01:02.979 --> 00:01:06.760
而作品的方式是
And the way that works is

19
00:01:06.760 --> 00:01:12.260
私人钥匙在你的手机上留在你的电脑上
the private key stays on your computer on
your phone wherever you wanna keep it.

20
00:01:12.260 --> 00:01:14.219
公用密钥在服务器上。
The public key goes on a server.

21
00:01:14.219 --> 00:01:17.829
一切都是用私人钥匙加密的
And what happens is everything is
encrypted with the private key.

22
00:01:19.480 --> 00:01:22.260
所以当它被加密时它会被传送到
So when it's encrypted,
it goes in transit, and

23
00:01:22.260 --> 00:01:24.250
没人能拦截到底发生了什么
no one can intercept what's happening.

24
00:01:24.250 --> 00:01:28.269
这其实叫隧道或管道，如果你愿意的话，
That's actually called a tunnel or a pipe,
if you will, because everything when you

25
00:01:28.269 --> 00:01:32.799
建立连接，管道中的所有东西都是最不易碎的。
establish that connection, everything in
the pipe is unbreakable for the most part.

26
00:01:32.799 --> 00:01:36.189
我在警告中说一切因为如果国家安全局想来找你
I say everything in caveats because
if the NSA wants to come after you,

27
00:01:36.189 --> 00:01:37.789
他们会找到你的
they're gonna get you.

28
00:01:37.789 --> 00:01:40.819
[ LAUGH] 世界上所有 SSH 密钥都不会保存您。
[LAUGH] All the SSH keys in
the world won't save you.

29
00:01:40.819 --> 00:01:42.870
但是通常， SSH 密钥不是一般的。
But generally, SSH keys are not generally.

30
00:01:42.870 --> 00:01:46.310
SSH 密钥是我们现在可以获得的最强认证。
SSH keys are the strongest
authentication we can get right now.

31
00:01:46.310 --> 00:01:51.210
真的，我喜欢使用 SSH 密钥的想法，因为它只是一个真正的
And it's such a really, I like the idea
of SSH keys because it's just a really

32
00:01:51.210 --> 00:01:55.520
强大的概念，我可以加密一些东西，或者你可以加密一些东西，
powerful concept, where I encrypt
something, or you can encrypt something,

33
00:01:55.520 --> 00:01:59.329
而解密它的唯一方法就是用我的钥匙
and the only way to decrypt it
is with a key that only I have.

34
00:01:59.329 --> 00:02:01.659
因此，您可以使用我的公用密钥向我发送一条消息。
So you can send me a message
using my public key.

35
00:02:03.069 --> 00:02:05.989
任何一个人都能得到的只有你能得到的
And the only way that any and anybody can
get it you can get that you'll just get

36
00:02:05.989 --> 00:02:07.810
就像一个短信的微博什么都没说
like a blob of text that means nothing.

37
00:02:07.810 --> 00:02:10.430
但解密它的唯一方法是我的私人钥匙
But the only way to decrypt
it was my private key.

38
00:02:10.430 --> 00:02:13.930
所以就好像是个好的加密方法
So it's like it's a good
one way encryption where

39
00:02:13.930 --> 00:02:14.590
你不用相信我
you don't have to trust me.

40
00:02:14.590 --> 00:02:15.199
你不需要了解我
You don't have to know me.

41
00:02:15.199 --> 00:02:17.250
你只要加密它我就能解密它了
You just encrypt it, and I can decrypt it.

42
00:02:17.250 --> 00:02:19.650
我是唯一一个能拦截它的人
I'm the only one and
anybody can intercept it in transit and

43
00:02:19.650 --> 00:02:21.229
对他们来说不是什么意思
won't mean anything to them.

44
00:02:21.229 --> 00:02:23.810
这真是一个很有才华的系统
It's really a brilliant system
that we kind of take for

45
00:02:23.810 --> 00:02:29.329
那是很简单的，还是其他的选择呢 ?
granted that's really simple,
versus what are the alternatives?

46
00:02:29.329 --> 00:02:31.620
用户名和密码，其中我需要知道用户名和密码
User name and password,
where I need to know a username and

47
00:02:31.620 --> 00:02:32.439
我需要知道密码
I need to know a password.

48
00:02:32.439 --> 00:02:35.990
如果有人窃取用户名和密码，我必须重置所有内容。
And if someone steals that username and
password I have to reset everything.

49
00:02:35.990 --> 00:02:39.520
在某个时候我需要在管道上传输用户名和密码
And at some point I need the transmit that
username and password over the pipe, and

50
00:02:39.520 --> 00:02:41.810
如果有人坐在中间他们可以拦截
if someone's sitting in the middle,
they can intercept that.

51
00:02:41.810 --> 00:02:42.639
他们是很酷的
And they're like, cool.

52
00:02:42.639 --> 00:02:46.889
您的用户名密码与专用密钥的 SSH 密钥相同
I got your username password versus
SSH key that the private key

53
00:02:46.889 --> 00:02:48.659
永远不会离开我的电脑从不离开网络
never leaves my computer and
never leaves the network.

54
00:02:48.659 --> 00:02:49.979
因此，您可以向我发送您想要的所有数据。
So you can send me all the data you want.

55
00:02:49.979 --> 00:02:53.949
他们可以是中间的人，也可以是中间的人，
They can be a person in the middle,
aka man in the middle,

56
00:02:53.949 --> 00:02:54.920
拦截你的交通
intercepting all your traffic.

57
00:02:54.920 --> 00:02:56.770
这意味着 " 圣战" 。
And it means jibberish.

58
00:02:56.770 --> 00:02:58.420
与使用用户名密码相比。
versus using a username password.

59
00:02:58.420 --> 00:02:59.729
这就是我们使用 SSH 密钥的原因。
That's why we're using SSH keys.
