WEBVTT

1
00:00:00.160 --> 00:00:02.330
>> Jem Young: 我现在想做的下一步是我们成功登录
&gt;&gt; Jem Young: Next thing I wanna do
now that we're successfully logged in

2
00:00:02.330 --> 00:00:06.400
我们的服务器，我们知道我们的服务器有或者我们的新用户具有路由访问权。
our server, we know our server has or
our new user has route access.

3
00:00:06.400 --> 00:00:09.730
我们要禁用路线卡兹还记得那些试图进入的人
We're gonna disable route, cuz remember
all those people trying to get in,

4
00:00:09.730 --> 00:00:12.070
这对他们是没有好处的
it's never beneficial for
them to get in as route.

5
00:00:12.070 --> 00:00:14.150
而路由是更常见的用户名之一，因此
And route is one of the more
common username, so

6
00:00:14.150 --> 00:00:15.878
他们也会把它弄坏的
they're gonna try to break it as well.

7
00:00:17.971 --> 00:00:19.661
>> Jem Young: 我们首先要做的是
&gt;&gt; Jem Young: First
thing we need to do is,

8
00:00:19.661 --> 00:00:23.289
实际上不需要此更改许可权。
actually don't need this
change the permissions.

9
00:00:23.289 --> 00:00:25.000
但现在我们要换权限了
But for
now we're gonna change permissions, so

10
00:00:25.000 --> 00:00:28.660
它是我们的用户阅读和阅读的
that it's read and readable by our users.

11
00:00:28.660 --> 00:00:35.884
所以你可能要 sudo chmod 644 和那个授权的密钥文件。
So you're gonna probably sudo chmod
644 and that authorized key file.

12
00:00:35.884 --> 00:00:40.768
所以我要在这里做这个，在我的服务器上。 所以我们会知道我是否需要起诉
So I'm gonna do that here, in my server.
So, we'll see if I need sudo.

13
00:00:40.768 --> 00:00:48.920
chmod 644 -/ .ssh/authorized_keys。
chmod 644 -/ .ssh/authorized_keys.

14
00:00:48.920 --> 00:00:50.240
太酷了这只需要苏多
Cool, didn't need sudo for that one.

15
00:00:51.909 --> 00:00:53.359
我们确实需要做这一步
And we actually did need to do this step,

16
00:00:53.359 --> 00:00:57.259
但根据您的服务器设置，您可能需要执行该操作。
but depending on what your server is
set up as, you may need to do it.

17
00:00:57.259 --> 00:00:58.908
所以我把它加到了未来
So I just added it in there for
the future,

18
00:00:58.908 --> 00:01:00.524
就能为自己打发子弹
just kinda bullet proofing ourselves.

19
00:01:00.524 --> 00:01:01.240
我们现在所做的就是改变这个文件的权限
And all we're doing is changing
that the permissions that file so

20
00:01:01.240 --> 00:01:01.750
都不是人人都能读读的
they're not reading readable by everybody.

21
00:01:01.750 --> 00:01:06.561
他们只会让我自己去读读
They're only readable and
rattled by sudo, myself, and

22
00:01:06.561 --> 00:01:10.599
某些文件系统守护程序，如 SSH 守护程序。
certain file system daemons,
like SSH daemon.

23
00:01:12.805 --> 00:01:15.576
>> Jem Young: 下一步，我们将禁用 root 用户登录。
&gt;&gt; Jem Young: Next thing we're gonna do,
now we're gonna disable root login.

24
00:01:15.576 --> 00:01:16.299
所以我们要修改我们的 SSH 配置
So we're gonna modify our SSH config, or

25
00:01:16.299 --> 00:01:17.073
服务器本身的 SSH 守护程序配置。
the SSH daemon config
on our server itself.

26
00:01:17.073 --> 00:01:19.498
苏多维
So sudo vi

27
00:01:19.498 --> 00:01:27.385
/etc/ssh/sshd_config 。
/etc/ssh/sshd_config.

28
00:01:27.385 --> 00:01:31.343
记住，你总是可以选择完成的，大部分都是这样。
And remember, you can always
tab complete and most of this.

29
00:01:31.343 --> 00:01:34.765
让我们说
Let'say sudo

30
00:01:34.765 --> 00:01:42.752
vi /etc/ssh/sshd_config，
vi /etc/ssh/sshd_config,

31
00:01:42.752 --> 00:01:46.177
我的密码
my password.

32
00:01:46.177 --> 00:01:49.349
现在我们在 SSH 守护程序配置中。 守护程序是一个程序
And now we're in the SSH daemon config.
The daemon is a program that's always

33
00:01:49.349 --> 00:01:51.382
在后台运行。
running in the background.

34
00:01:51.382 --> 00:01:52.813
这就是我们的 SSH ，我们不需要做任何事情来启动它。
And that's what allows us the SSH and
we don't need to do anything to start it.

35
00:01:52.813 --> 00:01:53.661
我们不需要做任何事情来阻止它。 它一直在不停地运转
We don't need to do anything to stop it.
It's just constantly running and

36
00:01:53.661 --> 00:02:01.031
听我说 我们会禁用 RootLogin
listening.
And we're gonna disable RootLogin.

37
00:02:03.415 --> 00:02:07.043
> > Jem Young: 所以我要编辑，把它转换成一个不。
&gt;&gt; Jem Young: So I'm just gonna edit and
switch that to a no.

38
00:02:07.043 --> 00:02:08.530
这里还有什么我想改变的吗
Is there anything else
I wanna change in here?

39
00:02:10.409 --> 00:02:12.280
PubkeyAuthentication ，这就行了。
PubkeyAuthentication, that's fine.

40
00:02:13.449 --> 00:02:17.039
StrictMode，我现在就离开它。
StrictMode, I'll leave it as is for now.

41
00:02:17.039 --> 00:02:18.544
我不想搞得太乱了
I don't wanna mess too much with it.

42
00:02:18.544 --> 00:02:23.602
但是通过 SSH 守护程序，您可以执行大量的操作，例如启用密码登录，
But with SSH daemon, you can do lots
of things like enable password login,

43
00:02:23.602 --> 00:02:25.382
禁用密码登录。
disable password login.

44
00:02:25.382 --> 00:02:29.543
具有最大重试次数，因此用户只能重试特定时间
Have max retry, so someone can only
retry a certain amount of time for

45
00:02:29.543 --> 00:02:33.009
把它们完全地带在一段时间里
just bands them completely for
a certain amount of time.

46
00:02:33.009 --> 00:02:36.930
您可以作为一个用户登录的最大次数，例如。
Maximum number of times you can be
logged in as one user, things like that.

47
00:02:36.930 --> 00:02:39.969
我们现在就走吧
We're gonna leave that alone for now.

48
00:02:39.969 --> 00:02:42.909
要谨慎，任何时候使用 sudo 意味着你能做点什么
A word of caution, anytime you're using
sudo means you can do something really

49
00:02:42.909 --> 00:02:46.060
危险用于修改 SSH 守护程序配置。
dangerous for
modifying SSH daemon configuration.

50
00:02:46.060 --> 00:02:48.770
您可以通过将自己锁定在自己的服务器之外的方式对其进行修改，
You can modify it in such a way that you
can lock yourself out of your own server,

51
00:02:48.770 --> 00:02:50.400
那就太尴尬了
which would be pretty embarrassing.

52
00:02:50.400 --> 00:02:54.329
但如果再次发生这种情况，你很快就会赶上。
But if that happens to start over again,
you'll catch up pretty quickly.

53
00:02:54.329 --> 00:02:55.849
这不是世界末日。
It's not the end of the world.

54
00:02:55.849 --> 00:02:58.680
如果您有生产服务器，那么这些都成为真正的大交易
These all become a real big deal if
you have a production server and

55
00:02:58.680 --> 00:03:01.818
你把自己关在生产服务里
you lock yourself out of production
serve,r known to get in and

56
00:03:01.818 --> 00:03:05.560
好的好的
yeah [LAUGH]
Yes.

57
00:03:05.560 --> 00:03:06.400
>> 扬声器 2: 您已更改端口。
&gt;&gt; Speaker 2: You've changed the port.

58
00:03:07.780 --> 00:03:11.039
>> Jem Young: 我不，这类的情况，
&gt;&gt; Jem Young: I don't, for
the case of this class,

59
00:03:11.039 --> 00:03:14.300
但他们发现改变港口的很多人都是很有帮助的
but a lot of people they find
changing the port is helpful support.

60
00:03:14.300 --> 00:03:16.622
缺省情况下， SSH 始终位于端口 22 上。
SSH is always on port 22 by default.

61
00:03:16.622 --> 00:03:18.210
您可以将端口更改为其他内容。
You can change the port to something else.

62
00:03:18.210 --> 00:03:19.090
你想做什么都行
Anything else you want.

63
00:03:19.090 --> 00:03:20.370
那还没在用呢
Well, that's not already being used.

64
00:03:21.670 --> 00:03:25.961
这有助于人们不断地攻击你的服务器
Which it helps a little bit with people
constantly attacking your server cuz they

65
00:03:25.961 --> 00:03:27.169
在端口 22 上了解 SSH 。
know SSH on port 22.

66
00:03:27.169 --> 00:03:31.460
但我们认为安全高于安全
But we call that security above security.

67
00:03:31.460 --> 00:03:35.789
你觉得你更安全是因为我的门在下面
You think you're more safe because you're
like, my door's actually down here.

68
00:03:35.789 --> 00:03:36.909
你觉得更安全
And you feel safer.

69
00:03:36.909 --> 00:03:37.752
但这并不是一件真实的事情。
But that's not a real thing.

70
00:03:37.752 --> 00:03:42.468
在安全和计算史上有一些教训
There are lessons in the history
of security and computing,

71
00:03:42.468 --> 00:03:48.139
安全性高于安全性，这将使您长期处于安全状态。
security above security is the one
that will get you in the long run.

72
00:03:48.139 --> 00:03:52.889
试图模糊事物，人们不知道 SSH 的任何内容，因此
Trying to obscure things,
people don't know SSH anything, so

73
00:03:52.889 --> 00:03:54.759
他们必须知道选择一个不同的港口
they have to know to
choose a different port.

74
00:03:54.759 --> 00:03:56.447
还有你可能会忘了港口是什么
And also,
you'll probably forget what the port is.

75
00:03:56.447 --> 00:03:59.875
老实说你应该更安全吗
And honestly you should just be
more secure in general, yes?

76
00:03:59.875 --> 00:04:01.957
>> 演讲者 2: 这与更改用户名如何不同 ?
&gt;&gt; Speaker 2: How is that different
than changing the user name, though?

77
00:04:01.957 --> 00:04:05.318
>> Jem Young: 从?
&gt;&gt; Jem Young: From?

78
00:04:05.318 --> 00:04:06.076
>> 演讲者 2: 从 root 到您所选择的任何内容，我的意思是，
&gt;&gt; Speaker 2: From root to whatever you
chose, I mean you're making it more

79
00:04:06.076 --> 00:04:14.152
默默无闻 怎么样啊
obscure.
How was it?

80
00:04:14.152 --> 00:04:19.410
为什么要同时更改用户和端口号 ?
Why wouldn't it be good to change
both the user and the port number?

81
00:04:19.410 --> 00:04:20.029
>> Jem Young: 你可以
&gt;&gt; Jem Young: You could and

82
00:04:20.029 --> 00:04:25.930
通常当人们把电脑设置为很多时候都是这样做的
generally when people set up computers
a lot of times thet do that.

83
00:04:25.930 --> 00:04:28.069
更改用户名不太适用于安全性，
Changing the username was not so
much for security,

84
00:04:28.069 --> 00:04:29.529
就像我们不想无礼的一样
so much as we don't wanna be rude.

85
00:04:29.529 --> 00:04:33.329
这只是个危险的地方我们得换个用户
It's just a dangerous place to be and
we're gonna have to switch users.

86
00:04:33.329 --> 00:04:36.029
是啊它能帮助很小很小的一点
Yeah, it helps a tiny, tiny bit.

87
00:04:36.029 --> 00:04:39.019
但我不会说那是为了安全
But again,
I would not ever say that's for security.

88
00:04:39.019 --> 00:04:41.449
只是因为这是个好的做法
It's just because it's
a good practice to do.

89
00:04:41.449 --> 00:04:43.000
问得好
But good question.

90
00:04:43.000 --> 00:04:46.470
但是，愚昧的安全从来就不是一个很好的例子。
But yeah, security by obscurity is never,
never good example.

91
00:04:46.470 --> 00:04:48.250
你甚至会说我要把我的服务器
You might even say like I'm
gonna set up my server and

92
00:04:48.250 --> 00:04:50.980
没把保安放在它的库上谁会找到它
not put any security on it cuz it's like,
who's gonna find it?

93
00:04:50.980 --> 00:04:52.574
有人会找到的他们会明白的
Someone will find it and they will get it.

94
00:04:52.574 --> 00:04:55.622
我向你保证他们会的
[LAUGH] I promise you, they will.

95
00:04:55.622 --> 00:04:57.446
所以我们就得离开这里
So we're just gonna wq out of here.

96
00:05:01.389 --> 00:05:03.653
>> Jem Young: 我们接下来要做的是更改配置，但是
&gt;&gt; Jem Young: And the next thing we wanna
do is we change the configuration but

97
00:05:03.653 --> 00:05:06.574
因为该守护程序总是在运行，所以并不总是检查配置。
because that daemon's always running,
it's not always checking the config.

98
00:05:06.574 --> 00:05:08.654
因此，我们希望重新启动该服务。
So we wanna restart that service.

99
00:05:08.654 --> 00:05:15.766
因此，要执行该操作，我们会说 sudo 服务 sshd SSH 守护程序并仅添加重新启动。
So to do that we say sudo service
sshd SSH daemon and just add restart.

100
00:05:15.766 --> 00:05:17.790
你得登录两次没问题
You have to login twice, it's okay.

101
00:05:20.276 --> 00:05:26.391
>> Jem Young: 因此 sudo 服务 sshd 重新启动。
&gt;&gt; Jem Young: So
sudo service sshd restart.

102
00:05:34.512 --> 00:05:39.228
>> Jem Young: 现在，如果我做了一切，我将尝试登录
&gt;&gt; Jem Young: And now if I did everything
correctly I'm gonna try to log in as

103
00:05:39.228 --> 00:05:41.959
它不会再让我失望了
roots and it won't let me anymore.

104
00:05:42.959 --> 00:05:45.240
这意味着我们把它做好了
That means we configured it properly.

105
00:05:45.240 --> 00:05:47.819
好了，我们在，禁止 root 用户登录。
All right, we're in,
we disable the root login.

106
00:05:47.819 --> 00:05:49.240
我感觉好多了
I'm feeling better about that.

107
00:05:49.240 --> 00:05:54.389
如果我们需要和 sudo 一起的话，我们就有了根。
We have root if we ever need to with sudo.

108
00:05:54.389 --> 00:05:57.769
但是，我们不想在根上做任何事情，除非你真的很懒。
But again, we don't wanna do things on
root, unless you're just really lazy.

109
00:05:57.769 --> 00:05:59.449
你不想一直这样做但是
You don't wanna type
sudo all the time but.

110
00:05:59.449 --> 00:06:00.245
嗯。
Yes.

111
00:06:00.245 --> 00:06:03.995
>> 扬声器 2: 因此，我们都需要重新启动系统。
&gt;&gt; Speaker 2: So
we both have System restart required.

112
00:06:03.995 --> 00:06:05.220
你觉得那是什么
What do you think that is?

113
00:06:05.220 --> 00:06:08.290
>> Jem Young: 每当您运行大型更新或升级时，
&gt;&gt; Jem Young: It does that every time
you run a large update or upgrade,

114
00:06:08.290 --> 00:06:10.139
它会说重启你的系统
it's gonna say restart your system.

115
00:06:10.139 --> 00:06:13.466
我们能做的是把盒子关掉，而我们实际上并没有把盒子关掉，
What we can do is turn the box off, while
we're not actually turned the box off,

116
00:06:13.466 --> 00:06:15.713
我们把小部分的盒子都关掉了
we're turning our tiny little
fraction of a box off.

117
00:06:15.713 --> 00:06:17.981
把它重新打开我会解决的
And turn it back on and I'll fix that.

118
00:06:17.981 --> 00:06:18.574
但现在，这并不是现在的重要问题。
But for now,
it's not that important for now.

119
00:06:18.574 --> 00:06:22.879
一会儿就会了
Later it will be.

120
00:06:22.879 --> 00:06:25.266
稍后我们将讨论流程管理器，
And later we'll talk
about process managers,

121
00:06:25.266 --> 00:06:29.084
这意味着当你处于某种程度的时候，如何得到你需要的一切
which means how to get everything you
need up and running when you're sort of

122
00:06:29.084 --> 00:06:32.920
与必须手动启动并保持其正常运行的研究。
research versus having to start it
manually and then keep it up and running.

123
00:06:32.920 --> 00:06:34.310
但那一会儿就会好了
But that'll be a little bit later.

124
00:06:34.310 --> 00:06:35.509
问得好
But good question.

125
00:06:35.509 --> 00:06:38.639
但现在别出汗了
But for now, don't sweat that too much.

126
00:06:38.639 --> 00:06:40.069
我们有根
We have root.

127
00:06:40.069 --> 00:06:41.709
如果你真的想要的话，你可以继续以 root用户的方式做事。
If you really want,
you can keep doing things as root.

128
00:06:41.709 --> 00:06:43.889
我不推荐它 [ LAUGH]。
I don't recommend it [LAUGH].

129
00:06:43.889 --> 00:06:45.019
如果你这么做你会有自己的
You are on your own if you do that.
