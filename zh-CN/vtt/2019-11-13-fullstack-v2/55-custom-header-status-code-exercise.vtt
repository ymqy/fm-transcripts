WEBVTT

1
00:00:00.000 --> 00:00:01.492
>> Jem Young: 我在这里指的是什么箭头 ?
&gt;&gt; Jem Young: What's this arrow
that I'm pointing to here?

2
00:00:01.492 --> 00:00:02.987
有人能告诉我那是什么吗
Can anybody tell me what that is?

3
00:00:02.987 --> 00:00:04.583
嗯。
Yes.

4
00:00:04.583 --> 00:00:05.392
>> 扬声器 2: 这是响应代码吗 ?
&gt;&gt; Speaker 2: It's the response code?

5
00:00:05.392 --> 00:00:06.796
>> Jem Young: 是的，这是一个状态码。
&gt;&gt; Jem Young: Yeah, it's a status code.

6
00:00:06.796 --> 00:00:10.422
而地位码是我们理所当然要做的事
And status codes are another thing
that we take for granted, but

7
00:00:10.422 --> 00:00:12.179
我们可能知道其中的一些
we probably know some of them.

8
00:00:12.179 --> 00:00:14.227
有人知道任何有趣的状态码吗
Does anybody know any funny status codes?

9
00:00:14.227 --> 00:00:18.303
>> 演讲者 3: 我喜欢 HTTP 状态猫， 405。
&gt;&gt; Speaker 3: I like the HTTP status cats,
the 405.

10
00:00:18.303 --> 00:00:19.245
>> Jem Young: 这些都不错。
&gt;&gt; Jem Young: Those are pretty good.

11
00:00:19.245 --> 00:00:21.496
外面有很多类似的状态码
There's a lot of like status
code memes out there.

12
00:00:21.496 --> 00:00:22.190
是吗 ?
Yeah?

13
00:00:22.190 --> 00:00:23.344
>> 演讲者 2: 我是茶壶。
&gt;&gt; Speaker 2: I am a teapot.

14
00:00:23.344 --> 00:00:24.733
> > Jem Young: 是的，这是一个好的。
&gt;&gt; Jem Young: Yeah, that one's a good one.

15
00:00:24.733 --> 00:00:25.670
状态码 418.
Status code 418.

16
00:00:25.670 --> 00:00:26.646
我喜欢这个
I love that one.

17
00:00:26.646 --> 00:00:27.910
这不是什么意思
It doesn't mean anything.

18
00:00:27.910 --> 00:00:30.213
但它确实存在而且它是官方标准的一部分。
But it exists and
it's part of the official standard.

19
00:00:30.213 --> 00:00:32.328
这背后可能有个有趣的故事
There's probably a funny story behind it.

20
00:00:32.328 --> 00:00:33.295
但我不知道是什么
But I don't know what it is.

21
00:00:33.295 --> 00:00:34.283
>> 扬声器 2: 增强您的冷静。
&gt;&gt; Speaker 2: Enhance your calm.

22
00:00:34.283 --> 00:00:35.570
>> Jem Young: Hm?
&gt;&gt; Jem Young: Hm?

23
00:00:35.570 --> 00:00:37.539
>> 扬声器 2: 增强您的冷静， 420。
&gt;&gt; Speaker 2: Enhance your calm, 420.

24
00:00:37.539 --> 00:00:39.746
>> Jem Young: 这是实际的状态码吗 ?
&gt;&gt; Jem Young: Is that
an actual status code?

25
00:00:39.746 --> 00:00:41.131
> 演讲者 2: 这是一个推特，是的。
&gt;&gt; Speaker 2: It's a Twitter one, yeah.

26
00:00:41.131 --> 00:00:41.881
>> Jem Young: [LAUGH] 如果您有自己的状态码，我想人们可以组成自己的状态码。
&gt;&gt; Jem Young: [LAUGH] I guess people can
make up their own status code if you have

27
00:00:41.881 --> 00:00:48.451
足够的影响力了 我不知道我不知道
enough clout.
I don't know.

28
00:00:48.451 --> 00:00:52.493
>> 扬声器 2: 我听到 [COUGH] 有一个 IoT 设备茶壶，用于返回茶壶
&gt;&gt; Speaker 2: I heard [COUGH] there's an
IoT device teapot that returns the teapot

29
00:00:52.493 --> 00:00:53.731
实际上是密码
code now actually.

30
00:00:53.731 --> 00:00:56.234
>> Jem Young: 现在你可以为所欲为
&gt;&gt; Jem Young: You can do whatever
you want now with the status,

31
00:00:56.234 --> 00:00:57.526
那就太好了
that would be a good one.

32
00:00:57.526 --> 00:00:58.262
事实上，我们应该这样做。
Actually, we should do that.

33
00:00:58.262 --> 00:00:59.097
>> 扬声器 2: 我认为它存在。
&gt;&gt; Speaker 2: I think it exists.

34
00:00:59.097 --> 00:01:00.435
[ LAUGH] >> Jem Young: 也许我们会
[LAUGH]
&gt;&gt; Jem Young: Maybe we'll make

35
00:01:00.435 --> 00:01:01.107
就是这样做的
an exercise that does that.

36
00:01:01.107 --> 00:01:02.121
你坚持这个想法
You hold that thought.

37
00:01:02.121 --> 00:01:04.557
>> [LAUGH] >> Jem Young: 让我们谈谈
&gt;&gt; [LAUGH]
&gt;&gt; Jem Young: Let's talk a little bit

38
00:01:04.557 --> 00:01:05.399
关于状态码的信息。
about status code.

39
00:01:05.399 --> 00:01:08.243
状态码将指示 HTTP 请求的状态。
What a status code does is it indicates
the status of the HTTP request.

40
00:01:08.243 --> 00:01:11.207
因为如果你提出请求和回应
Because there if you make a request and
response,

41
00:01:11.207 --> 00:01:13.900
就会有回应的
there's always going
to be a response back.

42
00:01:13.900 --> 00:01:16.914
但在没有状态码的情况下，您不知道该如何处理该响应。
But you don't know what to do with
that response without the status code.

43
00:01:16.914 --> 00:01:21.673
例如，状态码 401 表示您无权使用。
For instance, a status code of
401 means you're not authorized.

44
00:01:21.673 --> 00:01:23.757
这通常意味着您尚未登录。
That generally means you're not logged in.

45
00:01:23.757 --> 00:01:27.757
但真正的状态码就是帮助 Web 应用程序
But really what a status code does
is it helps the web application in

46
00:01:27.757 --> 00:01:30.625
浏览器知道如何处理该响应。
the browser know what to
do with that response.

47
00:01:30.625 --> 00:01:33.134
因为没有这些状态码，它就像，一切都还好。
Because without all of these status codes,
it would just be like, everything's okay.

48
00:01:33.134 --> 00:01:34.295
没事的没事的
Everything's okay.

49
00:01:34.295 --> 00:01:35.165
没事的没事的
Everything's okay.

50
00:01:35.165 --> 00:01:39.103
但是一个 401 的浏览器能够专门处理，甚至更好。
But a 401 the browser can handle
specifically and even better,

51
00:01:39.103 --> 00:01:41.778
您的应用程序可以专门处理。
your application can handle specifically.

52
00:01:41.778 --> 00:01:42.807
404是什么意思
So what's a 404?

53
00:01:42.807 --> 00:01:44.444
我是说我们一直说 404 页
I mean, we say 404 page all the time.

54
00:01:44.444 --> 00:01:45.503
那是什么意思
What does that mean?

55
00:01:45.503 --> 00:01:46.165
>> 扬声器 3: 找不到。
&gt;&gt; Speaker 3: Not found.

56
00:01:46.165 --> 00:01:46.843
>> 扬声器 2: 找不到。
&gt;&gt; Speaker 2: Not found.

57
00:01:46.843 --> 00:01:47.837
>> Jem Young: 找不到。
&gt;&gt; Jem Young: Not found, exactly.

58
00:01:47.837 --> 00:01:52.539
因此，所有这些前缀，所以 1， 2， 3， 4， 5，都是非常具体的。
And so all these prefixes, so the 1, 2, 3,
4, 5, all mean something very specific.

59
00:01:52.539 --> 00:01:56.200
1 ，以 1 开头的任何内容都只是一个信息。
1, anything starting with
a 1 is just an information.

60
00:01:56.200 --> 00:01:58.311
你不想再这么做了
There's not much you wanna do with it.

61
00:01:58.311 --> 00:02:02.323
例如，状态码 101 意味着继续。
For example,
status code 101 just means continue.

62
00:02:02.323 --> 00:02:05.792
这意味着可能有更多的数据即将到来，仅能保持每秒的数据。
It means there's probably more data
coming, and just hold on for a second.

63
00:02:05.792 --> 00:02:08.175
200s 意味着成功。
200s means success.

64
00:02:08.175 --> 00:02:13.355
因此，不同类型的 200s 表示它成功取决于它是什么。
So different types of 200s mean it was
successful depending on what it is.

65
00:02:13.355 --> 00:02:18.588
如此普遍的成功，就像一份漂亮的工作，这个反应是有效的，是 200。
So general success, like nice job,
this response is valid, is 200.

66
00:02:18.588 --> 00:02:21.701
如果这个帖子成功的话，应该是 201，或者
If the post was successful,
it'd be something like 201, or

67
00:02:21.701 --> 00:02:22.805
就像这样
something like that.

68
00:02:22.805 --> 00:02:24.425
依依依时
And so on and so forth.

69
00:02:24.425 --> 00:02:27.435
您不需要了解每个状态码，但了解什么
You don't really need to know every single
status code, but it's good to know what

70
00:02:27.435 --> 00:02:29.800
这些前缀就意味着你马上就知道发生了什么
these prefixes mean, so
you know immediately what's going on.

71
00:02:29.800 --> 00:02:35.956
我们讨论的 3 个问题， 301 个永久移动， 302 个临时重定向。
The threes we talked about, 301 moved
permanently, 302 temporary redirects.

72
00:02:35.956 --> 00:02:37.644
300 个状态码始终重定向。
300 status codes are always redirects.

73
00:02:37.644 --> 00:02:40.729
400 是某种客户机错误。
The 400 are some sort of client error.

74
00:02:40.729 --> 00:02:45.122
所以说你做错了事就像你发出了格式不正确的要求一样
So it means you did something wrong,
as in you've sent a malformed request,

75
00:02:45.122 --> 00:02:47.162
你根本没记错
you weren't logged in correctly.

76
00:02:47.162 --> 00:02:50.079
您正在尝试请求一个不存在的页面，因此是 404 页面。
You're trying to request a page
that doesn't exist, so a 404 page.

77
00:02:50.079 --> 00:02:52.704
这些都是客户机错误。
Those are always client errors.

78
00:02:52.704 --> 00:02:54.487
如果你看到 404 ，那就意味着你做错了什么。
So if you see a 404,
that means you did something wrong.

79
00:02:54.487 --> 00:02:57.198
如果您看到 500 ，这意味着服务器上的错误。
If you see a 500, that means
something on the server's wrong.

80
00:02:57.198 --> 00:02:59.152
500s 是你不想去的
500s are the ones you don't wanna get.

81
00:02:59.152 --> 00:03:02.616
因为你永远不应该回到 500 人的状态
Because you should never be in
a state where you're returning 500s,

82
00:03:02.616 --> 00:03:06.137
因为这意味着你的申请要么不好要么就是路不好
because that means either your
application is bad or the route's bad, or

83
00:03:06.137 --> 00:03:07.758
服务器就在火灾的某个地方
the server is on fire somewhere.

84
00:03:07.758 --> 00:03:11.639
但这意味着存在服务器错误，我们不知道如何处理。
But it just means there's a server error
and we didn't know how to handle it.

85
00:03:11.639 --> 00:03:13.474
服务器应该始终处理自己的错误和
And servers should always
handle their own errors and

86
00:03:13.474 --> 00:03:14.956
然后将其他内容返回给客户机。
then return something else to the client.

87
00:03:14.956 --> 00:03:15.794
怎么了
Yes?

88
00:03:15.794 --> 00:03:18.216
> > 演讲者 2: 我要说，如果你是一个前人，
&gt;&gt; Speaker 2: I was gonna say,
if you're a front ender,

89
00:03:18.216 --> 00:03:22.811
那其实 500 是个很好的答案因为你知道你没弄坏
then actually 500 is a good answer because
you know that you didn't break it.

90
00:03:22.811 --> 00:03:25.231
你知道从理论上来说这是别人的问题
You know that it's somebody else's
problem to deal with, theoretically.

91
00:03:25.231 --> 00:03:27.383
>> Jem Young: 这一点不错。
&gt;&gt; Jem Young: That's a good point.

92
00:03:27.383 --> 00:03:29.436
500 是别人的问题
500 is someone else's problem.

93
00:03:29.436 --> 00:03:30.805
400 你的问题
400, your problem.

94
00:03:30.805 --> 00:03:31.850
你这么想吧
Think of it that way.

95
00:03:31.850 --> 00:03:35.512
但这些只是作为网络开发者的好事情，我们可能不知道
But these are just good things to know
as web developers that we probably don't

96
00:03:35.512 --> 00:03:37.741
认为这些东西对他们有意义
think that these things
have meanings to them.

97
00:03:37.741 --> 00:03:38.823
但他们都是什么意思
But they all mean something.

98
00:03:38.823 --> 00:03:44.667
例如， Amazon 具有的内容，如着名的 404 状态页面。
For instance, what does Amazon have,
like a famous 404 status page.

99
00:03:44.667 --> 00:03:46.572
他们就像亚马逊狗一样
You know, they have like Amazon dogs,

100
00:03:46.572 --> 00:03:49.881
当您尝试请求错误路径时，人员会使用 404s 来执行这些操作。
people do fun things with 404s
when you try to request bad paths.

101
00:03:49.881 --> 00:03:53.913
如果你想的话，我们可以写我们的客户申请，而不是
And if you wanted to, we can write our
client application so that instead of

102
00:03:53.913 --> 00:03:58.329
查看服务器错误，这是一件坏事，尤其是如果有人付钱给你
seeing a server error, which is a bad
thing, especially if someone's paying you

103
00:03:58.329 --> 00:04:02.813
你要回来 500s 就意味着你做错事了
money and you're returning 500s,
that means you're doing something wrong.

104
00:04:02.813 --> 00:04:06.247
你可以在客户那边处理然后说我要 500 了就像
You can handle that on the client side and
say like, I'm getting 500, just be like,

105
00:04:06.247 --> 00:04:07.362
出什么事了
hey, something went wrong.

106
00:04:07.362 --> 00:04:11.411
我们现在正在努力，而不是像这张丑陋的 500 页一样。
We're working on right now,
rather than just like that ugly 500 page.

107
00:04:11.411 --> 00:04:14.993
所以了解如何阅读和处理状态码非常好。
So it's good to know how to read and
handle status codes.

108
00:04:14.993 --> 00:04:17.447
所以只需要一个简单的测验
So just a quick quiz.

109
00:04:17.447 --> 00:04:20.298
成功 POST 请求的正确状态码是什么 ?
What's the proper status code for
a successful POST request?

110
00:04:20.298 --> 00:04:23.875
>> 扬声器 2: 200。
&gt;&gt; Speaker 2: 200.

111
00:04:23.875 --> 00:04:25.185
>> 演讲者 3: 创建或。
&gt;&gt; Speaker 3: Created, or.

112
00:04:25.185 --> 00:04:26.660
>> Jem Young: 是的， 200 个作品。
&gt;&gt; Jem Young: Yeah, 200 works.

113
00:04:26.660 --> 00:04:27.949
这就意味着，好吧。
That just means, okay.

114
00:04:27.949 --> 00:04:31.012
或者， 201 表示已创建，表示已成功创建。
Or 201 means created,
it means successfully created.

115
00:04:31.012 --> 00:04:31.959
太棒了
Nice.

116
00:04:31.959 --> 00:04:33.191
现在你可以进入了
Now you kind of get in.

117
00:04:33.191 --> 00:04:36.976
就像你在这个层次开始思考的时候，你就开始想那种
It's like when you start thinking at this
level, you start thinking about that kind

118
00:04:36.976 --> 00:04:40.231
关于如何构造应用程序的高级工程师的想法
of senior engineer thinking about how
to structure your application and

119
00:04:40.231 --> 00:04:43.350
而不是盲目接受和返回状态码之类的。
not just blindly accept and
return status codes, things like that.

120
00:04:43.350 --> 00:04:50.893
因此，让我们在创建定制标题和定制状态码时进行练习。
So let's do an exercise where we create
a custom header and a custom status code.

121
00:04:50.893 --> 00:04:56.137
所以在你的应用程序中，我们昨天创建的应用程序应该已启动并正在运行，
So in your app, that app we created
yesterday which should be up and running,

122
00:04:56.137 --> 00:05:01.639
创建返回 418的路径，即我是茶壶和定制标题。
create a path that returns 418, which
is I'm a teapot, and a custom header.

123
00:05:01.639 --> 00:05:04.124
请记住，定制头以 X 开头。
And remember, custom headers start with X.

124
00:05:07.608 --> 00:05:09.319
>> Jem Young: 如果你看不出真正的小，就会有一个提示。
&gt;&gt; Jem Young: There's a hint at the bottom
if you can't see in really small.

125
00:05:09.319 --> 00:05:11.404
在请求上设置状态码， res.status。
To set a status code on the request,
res.status.

126
00:05:11.404 --> 00:05:12.916
这才是你的责任
That's the response.status.

127
00:05:12.916 --> 00:05:15.069
要设置标题，请重新设置。
To set a header, res.set.
