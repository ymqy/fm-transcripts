WEBVTT

1
00:00:00.544 --> 00:00:02.833
>> Jem Young: 什么是防火墙?
&gt;&gt; Jem Young: What is a firewall?

2
00:00:02.833 --> 00:00:04.602
别再看这个定义了
Don't look at the definition yet.

3
00:00:04.602 --> 00:00:05.168
防火墙是什么 ?
What is a firewall?

4
00:00:05.168 --> 00:00:07.700
你以前可能听过这个词
You've probably heard the term before.

5
00:00:07.700 --> 00:00:08.355
嗯。
Yeah.

6
00:00:08.355 --> 00:00:12.701
>> 扬声器 2: 它是网络安全性基础结构，允许或
&gt;&gt; Speaker 2: It's network security
infrastructure that either allows or

7
00:00:12.701 --> 00:00:14.044
阻止请求。
blocks requests.

8
00:00:14.044 --> 00:00:15.191
>> Jem Young: 是的。
&gt;&gt; Jem Young: Yeah.

9
00:00:15.191 --> 00:00:16.733
你说的萨姆
Sam that you say?

10
00:00:16.733 --> 00:00:20.263
> > Sam: 不，这是外围安全技术，所以
&gt;&gt; Sam: No,
it's a perimeter security technique, so

11
00:00:20.263 --> 00:00:26.003
您可以根据请求的来源和来源
you either allow requests in or out
depending on how they're originating and

12
00:00:26.003 --> 00:00:29.548
他们是什么港口协议是什么
what port they're on and
what the protocol is.

13
00:00:29.548 --> 00:00:31.958
>> Jem Young: 对，她说的更详细。
&gt;&gt; Jem Young: Yeah,
what she said, more verbose.

14
00:00:31.958 --> 00:00:34.909
我喜欢你在定义事物时，永远不会太详细。
I like it, you can never be too
verbose when you're defining things.

15
00:00:34.909 --> 00:00:39.551
防火墙，短语来自称为防火墙的实际物理设备，
A firewall, the phrase comes from the
actual physical device called a firewall,

16
00:00:39.551 --> 00:00:40.970
你的车有防火墙
your car has a firewall.

17
00:00:40.970 --> 00:00:43.396
所以在引擎和你坐在你车里的地方
So between the engine and
where you sit in your car,

18
00:00:43.396 --> 00:00:45.209
这就是所谓的防火墙
that's what's known as a firewall.

19
00:00:45.209 --> 00:00:47.811
所以如果引擎着火了，火就不会蔓延到发动机。
So if the engine gets on fire,
the fire won't spread into the engine.

20
00:00:47.811 --> 00:00:52.816
或者它会减速足够的建筑有防火墙所以如果有防火墙的话
Or it will slow down enough building have
firewalls so that if there is a fire it

21
00:00:52.816 --> 00:00:58.283
它不会完全阻止事情的发生只会让它变慢你就能解决它
doesn't prevent things completely, it just
slows it down enough so you can fix it.

22
00:00:58.283 --> 00:00:59.319
这就是防火墙的功能。
And that's what a firewall does.

23
00:00:59.319 --> 00:01:00.542
他们不是无敌的
They are not invulnerable,

24
00:01:00.542 --> 00:01:03.807
总有办法让所有人都在防火墙上运行
there's always ways around them cuz
everybody's running a firewall now.

25
00:01:03.807 --> 00:01:05.971
但人们还是被黑了
But people still get hacked.

26
00:01:05.971 --> 00:01:09.903
但足够让人慢下来，震慑民众。
But it's enough to slow people down and
deter people.

27
00:01:09.903 --> 00:01:13.692
我要用思科的定义了大家都这么说
I'll use the Cisco definition, and
it's pretty much what everybody said.

28
00:01:13.692 --> 00:01:18.490
它是一个网络安全设备，监控进出的网络流量，
It's a network secure device that monitors
incoming and outgoing network traffic and

29
00:01:18.490 --> 00:01:22.828
根据特定频率决定是否阻塞该流量，
it decides whether or not to block that
traffic based on certain frequencies,

30
00:01:22.828 --> 00:01:24.950
有一套标准的
there's a certain set of standards.

31
00:01:24.950 --> 00:01:28.704
有软件防火墙和硬件防火墙。
There is software firewalls and
there's hardware firewalls.

32
00:01:28.704 --> 00:01:31.531
通常大多数人都在运行我们的消费等级。
Generally most people
are running our consumer grade.

33
00:01:31.531 --> 00:01:34.276
我们都是软件防火墙
We're all running software firewalls.

34
00:01:34.276 --> 00:01:38.870
我们的 Mac OS X 在 Windows 中建立了防火墙，防火墙内置了防火墙。
Our Mac OS X has a firewall built
in Windows has firewall built in.

35
00:01:38.870 --> 00:01:42.099
因为我们不想把所有港口都开放给每个人
It's because we don't wanna open
all of our ports to everybody.

36
00:01:42.099 --> 00:01:46.152
因为如果你这样做，不管你喜欢，我在使用 SSH
Because if you do that, it doesn't
matter if your like, I'm using SSH and

37
00:01:46.152 --> 00:01:48.706
我的系统也没什么值钱的东西
there's nothing else my
system worth stealing.

38
00:01:48.706 --> 00:01:51.578
在那里可能有个漏洞
There could be
a vulnerability in there and

39
00:01:51.578 --> 00:01:54.539
它只是在缩小它的攻击表面
it's just narrowing that attack surface.

40
00:01:54.539 --> 00:01:55.567
以及防火墙的映像。
And an image of a firewall.

41
00:01:55.567 --> 00:01:56.262
我喜欢
I like that.

42
00:02:01.662 --> 00:02:07.256
>> Jem Young: 因此，让我们运行 nmap ，因为我之前谈到过端口。
&gt;&gt; Jem Young: So let's run nmap
because I talked about ports earlier.

43
00:02:07.256 --> 00:02:12.538
nmap 是端口扫描程序，它可以运行整个
An nmap is a port scanner and
what it does is it can run over an entire

44
00:02:12.538 --> 00:02:17.068
IP 地址的范围，它仅检查打开的端口。
range of IP addresses and
it just checks for open ports.

45
00:02:17.068 --> 00:02:19.298
首先我们要做的就是安装 nmap。
So first thing we're gonna do
is we're gonna install nmap.

46
00:02:21.872 --> 00:02:27.084
>> Jem Young: Sudo apt 安装 nmap ( 如果尚未安装) 。
&gt;&gt; Jem Young: Sudo apt install nmap
if it's not already installed.

47
00:02:29.277 --> 00:02:31.475
>> Jem Young: So sudo apt install
&gt;&gt; Jem Young: So sudo apt install

48
00:02:44.942 --> 00:02:48.451
>> Jem Young: 我将抓取服务器的 IP 地址。
&gt;&gt; Jem Young: And I'm gonna grab
the IP address of my server.

49
00:02:48.451 --> 00:02:51.725
所以就在这儿
So, it's here.

50
00:02:51.725 --> 00:02:52.461
收到。
Copy that.

51
00:02:57.350 --> 00:03:01.822
>> Sam: 您打算以远程方式在本地对服务器运行此操作，或者
&gt;&gt; Sam: You intending that we run this
locally against our server remotely or

52
00:03:01.822 --> 00:03:02.985
在服务器上。
from the server.

53
00:03:02.985 --> 00:03:05.867
>> Jem Young: 您可以在服务器上运行，可以从服务器运行。
&gt;&gt; Jem Young: You could run on the server,
you can run it from not your server.

54
00:03:05.867 --> 00:03:07.689
其实这件事不重要
It actually doesn't matter in this case.

55
00:03:07.689 --> 00:03:10.307
但是运行它，在本地运行，您应该知道端口在哪里。
But running it yeah, running it locally
you should know where your ports are.

56
00:03:10.307 --> 00:03:11.688
但这只是一个很好的视觉化。
But it's just a good visualization.

57
00:03:18.963 --> 00:03:21.829
>> Jem Young: 是的， Sam 是正确的，我们的服务器正在与我们的服务器
&gt;&gt; Jem Young: Yes and Sam is right where
we're on our server running against our

58
00:03:21.829 --> 00:03:22.413
自己的服务器。
own server.

59
00:03:22.413 --> 00:03:25.145
您可以从服务器注销并针对您的服务器运行
You can log out of your server and
run against your server and

60
00:03:25.145 --> 00:03:26.516
结果就一样了
the results will be the same.

61
00:03:37.382 --> 00:03:40.248
>> Jem Young: 现在你可能看到了
&gt;&gt; Jem Young: And right now you're
probably seeing something along that

62
00:03:40.248 --> 00:03:42.146
你应该看看这个
you should see actually exactly this.

63
00:03:42.146 --> 00:03:44.234
您已打开端口 22 ，即 SSH。
You have port 22 open, that's SSH.

64
00:03:44.234 --> 00:03:46.481
因此，这允许我们登录和注销我们的服务器。
So, that's allows us to log in and
out our server.

65
00:03:46.481 --> 00:03:49.276
我们端口 80 是我们的 http 服务器。
We port 80 which is our http server.

66
00:03:49.276 --> 00:03:53.935
然后我们就有 3000 口因为它是在我们的默认情况下开放的
And then we have port 3000 because
it's open by default when we

67
00:03:53.935 --> 00:03:56.021
启动了我们的快速服务器。
started our express server.

68
00:03:56.021 --> 00:03:59.737
现在，让我们与 sV 一起运行 nmap ，以获取更多详细信息。
Now let's run nmap with sV to
get a little bit more detail.

69
00:03:59.737 --> 00:04:09.596
所以 nmap >> Jem Young: And
So nmap
&gt;&gt; Jem Young: And

70
00:04:09.596 --> 00:04:10.824
这得花点时间
this is gonna take a little bit more time.

71
00:04:10.824 --> 00:04:15.045
sV 命令会让我们更详细地了解
The sV command is gonna give us more
detail about what exact processes

72
00:04:15.045 --> 00:04:18.850
正在这些端口上运行这些端口和服务。
are running on those and
services are running on those ports.

73
00:04:18.850 --> 00:04:23.579
也许会有
And it might take

74
00:04:23.579 --> 00:04:27.634
就在第二天
a second ago.

75
00:04:27.634 --> 00:04:32.050
所以， 22 号端口几乎都是 SSH的。
So, port 22 is pretty
pretty much always SSH.

76
00:04:32.050 --> 00:04:34.683
这是缺省的 48 个 Windows HTTP。
It's the default 48 windows HTTP.

77
00:04:34.683 --> 00:04:38.682
3000 是一个随机的港口，我们只为我们的中间产品选择了一个。
For 3000 was a random port we chose
just for our express middle ware.

78
00:04:38.682 --> 00:04:45.259
但是，运行此开放式源代码命令允许我端口扫描 IP 地址。
But running this open source command
allows me to port scan an IP address.

79
00:04:45.259 --> 00:04:51.052
但不仅仅是这样，它还告诉我他们正在运行的软件和版本。
But not only that, it tells me the exact
software and version that they're running.

80
00:04:51.052 --> 00:04:52.495
那么为什么有用呢 ?
So why is that useful?

81
00:04:52.495 --> 00:04:55.427
或者为什么这么危险
Or why that dangerous?

82
00:04:55.427 --> 00:04:55.961
嗯。
Yes.

83
00:04:55.961 --> 00:04:59.007
>> 扬声器 2: 非常容易查找已知漏洞和
&gt;&gt; Speaker 2: it's very easy to
look up known vulnerabilities and

84
00:04:59.007 --> 00:05:00.742
开始尝试过
start trying to get through.

85
00:05:00.742 --> 00:05:08.504
>> Jem Young: 如果有已知的利用 NGINX 1.14的话。
&gt;&gt; Jem Young: Precisely, if there
was a known exploit for NGINX 1.14.

86
00:05:08.504 --> 00:05:10.785
我可以很容易地发现这一点
I can find that out really, really easily.

87
00:05:10.785 --> 00:05:15.720
然后你说没人会知道我是否没有拍我的 NGINX 版本
And then you say like, no one will know
if I haven't patched my NGINX version.

88
00:05:15.720 --> 00:05:19.271
都是，人都在港口跑。
They do,
people are running at port all the time.

89
00:05:19.271 --> 00:05:23.326
现在， CPU 资源非常少，无法在整个因特网上运行端口扫描，
It takes very little CPU resources now to
run a port scan over the entire Internet,

90
00:05:23.326 --> 00:05:25.283
人们不断地这样做。
and people are doing this constantly.

91
00:05:25.283 --> 00:05:27.875
所以如果你有一个弱点，最终，人们会发现它，
So if you have a vulnerability,
eventually, people will find it and

92
00:05:27.875 --> 00:05:28.733
他们就会利用它
they will exploit it.

93
00:05:33.680 --> 00:05:36.851
>> Jem Young: 而 nmap 不会显示的是它们不会显示所有关闭的端口。
&gt;&gt; Jem Young: And what nmap won't show
is they won't show all the close ports.

94
00:05:36.851 --> 00:05:39.629
它们只显示打开的端口，但您可以扫描已关闭的端口。
They only gonna show the open ports but
you can scan for closed ports.

95
00:05:39.629 --> 00:05:41.300
这一点也不是什么意义。
It's not really much of a point for
that as well.
