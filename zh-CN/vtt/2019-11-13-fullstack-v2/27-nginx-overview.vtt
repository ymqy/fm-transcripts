WEBVTT

1
00:00:00.476 --> 00:00:04.142
>> Jem Young: 现在我们要谈的是这个奇怪的词
&gt;&gt; Jem Young: Now we get to talk about
this weird word that I ran across

2
00:00:04.142 --> 00:00:06.152
当我还是第一位工程师的时候
when I was first an engineer.

3
00:00:06.152 --> 00:00:11.319
我就像个" nginx"
And I was like nginx?

4
00:00:11.319 --> 00:00:14.486
N-ginx?
N-ginx?

5
00:00:14.486 --> 00:00:16.387
我帮你省得麻烦你读了很多
I'll save you the trouble cuz
you probably read a lot and

6
00:00:16.387 --> 00:00:18.670
不知道它是怎么发音的是引擎
don't know how it's pronounced,
it's pronounced engine-x.

7
00:00:18.670 --> 00:00:22.836
在软件应用程序的历史中诚实的是
Which honestly in the history of software
applications is the coolest name of

8
00:00:22.836 --> 00:00:23.422
都是时候了
all time.

9
00:00:23.422 --> 00:00:24.208
就像你在做什么
It's like, what do you work on?

10
00:00:24.208 --> 00:00:25.397
恩金克斯
Nginx.

11
00:00:25.397 --> 00:00:26.574
它是做什么的
What does it do?

12
00:00:26.574 --> 00:00:27.986
一点都不知道
A little bit of everything.

13
00:00:27.986 --> 00:00:30.129
人们都很喜欢
People are like whoa.

14
00:00:30.129 --> 00:00:36.209
Nginx 是其中最受欢迎的网络服务器之一。
Nginx is one of the most
popular web servers out there.

15
00:00:36.209 --> 00:00:37.703
这就是我们今天要做的
It's what we're gonna run today.

16
00:00:37.703 --> 00:00:41.591
另一个你可能听说过的是阿帕奇，阿帕奇是另一个受欢迎的。
The other one you've probably heard of
is Apache, which is another popular one.

17
00:00:41.591 --> 00:00:45.774
Apache 有点不同，配置了很多不同。
Apache is a little bit different and
it configures a lot different.

18
00:00:45.774 --> 00:00:50.079
但如果我们使用 PHP，我肯定会使用 Apache ，因为 PHP 和
But if we're using PHP, I'd be
definitely using Apache, because PHP and

19
00:00:50.079 --> 00:00:53.371
阿帕奇的手，他们的工作真的非常好。
Apache go hand in hand,
they work really, really well.

20
00:00:53.371 --> 00:00:56.640
它们太好了其实就是 LAMP 堆。
They go so well it's actually
it's known as the LAMP stack.

21
00:00:56.640 --> 00:01:00.353
有人知道 LAMP 的堆栈代表什么吗 ?
Anybody know what the LAMP
stack stands for?

22
00:01:00.353 --> 00:01:03.807
>> 扬声器 2: Linux， Apache， Mongo- >> 扬声器 3: MySQL。
&gt;&gt; Speaker 2: Linux, Apache, Mongo-
&gt;&gt; Speaker 3: MySQL.

23
00:01:03.807 --> 00:01:04.986
>> 扬声器 2: MySQL 和 PHP。
&gt;&gt; Speaker 2: MySQL and PHP.

24
00:01:04.986 --> 00:01:06.159
>> Jem Young: 没错
&gt;&gt; Jem Young: Yep, exactly.

25
00:01:06.159 --> 00:01:10.551
但无论如何阿帕奇是你职业生涯中的另一个
But anyways, Apache is another one you
might run into in your careers as a full

26
00:01:10.551 --> 00:01:12.862
或任何类型的工程师
stack engineer or any sort of engineer.

27
00:01:12.862 --> 00:01:14.959
但今天我们要用牙龈
But today we're gonna use Nginx.

28
00:01:14.959 --> 00:01:21.984
我爱的是它的轻量，速度极快。
I love Nginx cuz it's lightweight,
it is extremely fast.

29
00:01:21.984 --> 00:01:25.218
我想思考的是多快能处理更多的请求
I'm trying to think how fast, it can
handle more requests than you can throw at

30
00:01:25.218 --> 00:01:27.239
它比你的服务器还能处理好
it than your server can handle,
put it that way.

31
00:01:27.239 --> 00:01:28.438
太快了
It's that fast.

32
00:01:28.438 --> 00:01:33.397
它是一个逆向代理，它是一个 Web 服务器，它是一个代理服务器，它是一个文件服务器，
It's a reverse proxy, it's a web server,
it's a proxy server, it's a file server,

33
00:01:33.397 --> 00:01:36.228
它可以进行高速缓存，可以进行性能调整。
it can do caching,
it can do performance tuning.

34
00:01:36.228 --> 00:01:39.627
它可以压缩您的文件，将其发送出去，它可以处理您的加密。
It can compress your file, send it out,
it can handle your encryption.

35
00:01:39.627 --> 00:01:44.365
Nginx 做了一点点的事情，真的是很棒的软件。
Nginx does a little bit of everything and
honestly it's amazing software.

36
00:01:44.365 --> 00:01:46.180
但是我们今天不太深入
But, we're not gonna go
too deep into it today,

37
00:01:46.180 --> 00:01:47.611
我们只能用它了
we're just gonna use it just enough.

38
00:01:47.611 --> 00:01:52.218
因为我们可以非常深入地去压缩我们的 G - 拉链
Because we can go really, really deep
where we're compressing our G-zip

39
00:01:52.218 --> 00:01:56.179
水平达到三级水平，我们正在调整我们的网络套接字。
levels to like level three, and
we're tuning our web sockets.

40
00:01:56.179 --> 00:01:59.445
明天我们也许会这样做取决于我们今天的表现但今天
We might do that tomorrow, depending
on how well we do today, but for today,

41
00:01:59.445 --> 00:02:00.966
我们会把这个配置好的
we're just gonna configure this.

42
00:02:00.966 --> 00:02:03.433
所以我们想做的第一件事是
So the first thing we wanna do is,

43
00:02:03.433 --> 00:02:06.686
实际上，我应该解释 Web 服务器的工作。
actually I should explain
what a web server does.

44
00:02:06.686 --> 00:02:08.716
我们有一个服务器，我们只有一个基本的服务器，
We have a server,
we have just a basic server,

45
00:02:08.716 --> 00:02:10.548
服务器本身什么都不做
the server itself doesn't do anything.

46
00:02:10.548 --> 00:02:13.534
其实现在连请求都没有回应，
In fact it doesn't even
respond to requests right now,

47
00:02:13.534 --> 00:02:15.703
因为它什么都没做
because it's not set up to do anything.

48
00:02:15.703 --> 00:02:20.312
所以请点击您的服务器， >> Jem Young: What do?
So requests hit your server,
&gt;&gt; Jem Young: What do?

49
00:02:20.312 --> 00:02:21.509
我们得想想办法
We have to figure out something,

50
00:02:21.509 --> 00:02:23.361
我们得想想那个请求应该去哪里
we have to figure out where
that request should go.

51
00:02:23.361 --> 00:02:24.487
是否应该转至应用程序?
Should it go to the app?

52
00:02:24.487 --> 00:02:25.181
它应该去数据库吗
Should it go to the database?

53
00:02:25.181 --> 00:02:27.286
是否要完全转至另一个服务器 ?
Should it go to a different
server entirely?

54
00:02:27.286 --> 00:02:29.615
我不知道这就是 Nginx 在那儿的原因
I don't know, that's why Nginx is there.

55
00:02:29.615 --> 00:02:33.215
Nginx 帮助将这些请求路由到正确的东西。
Nginx helps route those
requests to the right thing.

56
00:02:33.215 --> 00:02:35.762
这就是为什么它有时被称为逆向代理
That's why it's called
a reverse proxy sometimes,

57
00:02:35.762 --> 00:02:38.771
因为它需要一个请求，并在其他地方代理它。
because it takes one request and
it proxies it somewhere else.

58
00:02:38.771 --> 00:02:44.104
Versus 是一个常规代理，需要执行一系列请求并将它们代理到一个位置。
Versus a regular proxy which takes a bunch
of requests and proxies them to one place.

59
00:02:44.104 --> 00:02:47.519
大多数时候你会听到它叫逆向代理但是
You'll hear it called reverse
proxy most of the time, but

60
00:02:47.519 --> 00:02:50.521
它真的是一个网络服务器，它做了很多事情。
it's really a web server,
it does a lot of things.

61
00:02:50.521 --> 00:02:54.409
但 Nginx 是我们今天做的一件事的关键之一。
But Nginx is one the crux of one
of the things we're doing today.

62
00:02:54.409 --> 00:02:58.899
我想说的比我们要建的实际应用更重要
I would say it's more important than
the actual application we're building is

63
00:02:58.899 --> 00:03:00.311
正确调整 Nginx 。
tuning Nginx properly.

64
00:03:00.311 --> 00:03:01.721
让我们安装 Nginx。
So let's install Nginx.

65
00:03:04.098 --> 00:03:07.664
>> Jem Young: 因为我们不再是根了，我们一直都要用 sudo
&gt;&gt; Jem Young: Because we're not root
anymore, we have to use sudo all the time

66
00:03:07.664 --> 00:03:10.652
来安装新软件，因此很适合安装 nginx。
to install new software,
so sudo apt install nginx.

67
00:03:10.652 --> 00:03:12.776
我现在就这么做了它可能要花一分钟的时间
And I'll just do that now
cuz it might take a minute.

68
00:03:19.612 --> 00:03:20.451
>> Jem Young: 是。
&gt;&gt; Jem Young: Yes.

69
00:03:24.435 --> 00:03:28.963
>> Jem Young: 在安装随机位的同时，您不需要
&gt;&gt; Jem Young: And while that's installing
random bits of trivia you don't need to

70
00:03:28.963 --> 00:03:33.347
知道，有一个叫 " 是 " 的命令，它的所有类型都是 Y型的。
know, there's a command called yes,
which all it does is type y.

71
00:03:33.347 --> 00:03:35.948
你就知道为什么会有这种事吗
And you're like why does that exist?

72
00:03:35.948 --> 00:03:37.034
我们可以用这个人页面
We can use the man page.

73
00:03:37.034 --> 00:03:39.627
它只输出你想要的东西通常是肯定的
It just outputs anything you want,
usually it's yes.

74
00:03:39.627 --> 00:03:41.965
所以如果你想安装一堆软件
So if you wanted to install
a bunch of software and

75
00:03:41.965 --> 00:03:43.734
你不想继续打字
you didn't want to keep typing yes.

76
00:03:43.734 --> 00:03:48.174
你可以打个合适的装，管它，它会自动做的
You can hit apt install, pipe it to y,
it'll automatically do yes for

77
00:03:48.174 --> 00:03:49.986
一切都结束了
everything until it exits.

78
00:03:49.986 --> 00:03:54.600
你不需要知道的事情，但是你现在做了，你不可能不知道。
Little things you didn't need to know,
but you do now, you can't unknow it.

79
00:03:54.600 --> 00:04:01.474
好了我们要启动 Nginx ，所以 sudo service nginx 启动。
All right, so then we're gonna start
Nginx, so sudo service nginx start.

80
00:04:01.474 --> 00:04:05.740
Sudo 服务 nginx 启动。
Sudo service nginx start.

81
00:04:08.826 --> 00:04:12.725
>> Jem Young: Anginx 已启动并正在运行 >> Jem Young: And
&gt;&gt; Jem Young: And Nginx is up and running
&gt;&gt; Jem Young: And

82
00:04:12.725 --> 00:04:15.704
所以我们来测试这个让我们测试这个坏小子
so let's test this out,
let's test this bad boy out.

83
00:04:15.704 --> 00:04:22.728
如果我的域设置未完成，请允许我复制我的 IP 。
Let me copy my IP just in case my
domain setup did not go through.

84
00:04:22.728 --> 00:04:27.519
说的是最棒的
And say, jemisthebest,

85
00:04:27.519 --> 00:04:32.534
好吧最好的点
whoop, jem I-S dot best.

86
00:04:32.534 --> 00:04:35.100
好了好了
All right, it works.

87
00:04:35.100 --> 00:04:38.417
这看起来很简单，但记住我们要经历的所有步骤
And this seems really simple, but remember
all the steps we had to go through to

88
00:04:38.417 --> 00:04:40.742
配置我们的名称服务器，并获取我们的 DNS 记录。
configure our name servers,
and get our DNS records.

89
00:04:40.742 --> 00:04:45.093
然后启动服务器并安装并使服务器启动并运行， SSH 和
Then start the server and install and get
our server up and running, the SSH, and

90
00:04:45.093 --> 00:04:47.973
我们把它都跑了现在我们拿到了这个 Nginx 的网页
we got it all running, and
now we get this Nginx page.

91
00:04:47.973 --> 00:04:49.425
就是这些小东西
It's the little things,

92
00:04:49.425 --> 00:04:53.259
更重要的是你了解到这里的所有步骤
more importantly is you understand
all the steps it took to get here.

93
00:04:53.259 --> 00:04:56.380
看起来真的很简单但你知道这不是
And it seems really, really simple,
but you know that it's not,

94
00:04:56.380 --> 00:04:58.185
在车篷下面做了很多工作
underneath the hood was a lot of work.

95
00:04:58.185 --> 00:05:00.853
太好了我应该和你分享这个剧本
Awesome, I should have shared
this screenshot with you,

96
00:05:00.853 --> 00:05:02.983
当我买下我的版图时就花了我 1.80 美元
when I bought my domain it cost me $1.80.

97
00:05:02.983 --> 00:05:04.069
看到 ICAN 的费用吗 ?
And see that ICAN fee?

98
00:05:04.069 --> 00:05:07.839
记得我说过有一个司法机构控制所有东西
Remember I talked about there's this
registrar that controls all the stuff, so

99
00:05:07.839 --> 00:05:10.790
我不知道这是什么，所以我只付出了 0.18 美元的费用。
I don't know what this is, and
so I just paid a $0.18 fee.

100
00:05:10.790 --> 00:05:12.072
当你买一个域名的时候，你就会更新它，
Whenever you buy a domain, you renew it,

101
00:05:12.072 --> 00:05:14.619
你总是付这么小的小费帮助保持互联网的运行
you're always paying this little tiny fee
that helps keep the Internet running.

102
00:05:14.619 --> 00:05:16.935
所以如果你想知道那是什么，那就是原因。
So if you're ever wondering what that is,
that's why.

103
00:05:19.269 --> 00:05:21.836
>> Jem Young: 太棒了，每个人都看到 Nginx 页面了吗 ?
&gt;&gt; Jem Young: Awesome,
is everybody seeing the Nginx page?

104
00:05:21.836 --> 00:05:24.995
希望如果您不购买域，请仅输入 IP。
Hopefully, if you didn't buy a domain,
just type in your IP.

105
00:05:24.995 --> 00:05:28.393
所以我也能做到这一点我也会得到同样的东西
So I can also do that and
I'm gonna get the same thing.

106
00:05:31.165 --> 00:05:33.790
>> Jem Young: 如果我真的想获得战术，我就能在港口里
&gt;&gt; Jem Young: And if I really want to
get tactical, I can type in the port

107
00:05:33.790 --> 00:05:37.047
80 号是缺省端口我要再次得到同样的东西
80 which is the default port and
I'm gonna get the same thing again.

108
00:05:37.047 --> 00:05:38.504
Nginx 现在在 80 号口运行
Nginx is now running on port 80,

109
00:05:38.504 --> 00:05:42.096
它会自动打开防火墙给您 80 端口，我们不需要这样做。
it automatically opens the firewall to
port 80 for you, we don't have to do that.

110
00:05:42.096 --> 00:05:45.310
明天我们要讨论防火墙并适当地配置防火墙
And tomorrow we're gonna talk about
firewalls and configuring them properly,

111
00:05:45.310 --> 00:05:45.930
但今天不是
but not today.

112
00:05:48.245 --> 00:05:48.954
>> Jem Young: 好的，每个人都跟我一起吗 ?
&gt;&gt; Jem Young: Okay, is everybody with me?

113
00:05:48.954 --> 00:05:50.182
如果你不在这里
If you're not here,

114
00:05:50.182 --> 00:05:54.079
我要说的一切都不会有任何意义
pretty much everything else I'm
gonna say will not make any sense.

115
00:05:54.079 --> 00:06:00.567
好，现在，我们问了一个问题，网络是怎么工作的 ?
Cool, so now, we asked the causing
question, how does the Internet work?

116
00:06:00.567 --> 00:06:02.916
有一个域，它命中一个名称服务器，名称服务器说，哎，
There's a domain, it hits a name server,
the name server says, hey,

117
00:06:02.916 --> 00:06:04.064
我知道你想去哪儿
I know where you're trying to go.

118
00:06:04.064 --> 00:06:08.516
这里是 IP， IP 被传递给其他路由器和节点和交换机，
Here's the IP, the IP gets passed off to
other routers and nodes and switches,

119
00:06:08.516 --> 00:06:10.250
最终击中了你的服务器
eventually hits your server.

120
00:06:10.250 --> 00:06:12.689
当它点击您的服务器时，它会说我现在做什么吗 ?
When it hits your server,
it says what I do now?

121
00:06:12.689 --> 00:06:17.596
恩金克斯说我知道去哪我要把你转到这个默认页面上
Nginx says, hey, I know where to go,
I'm gonna route you to this default page,

122
00:06:17.596 --> 00:06:19.052
只是一个空白的 HTML 页面。
just a blank HTML page.

123
00:06:19.052 --> 00:06:21.055
现在很多互联网都是这样运作的
That's how a lot of the Internet works so
far, and

124
00:06:21.055 --> 00:06:23.697
我们会慢慢积累起来直到它变得越来越复杂
we're gonna slowly build up until
it gets more and more complex.

125
00:06:23.697 --> 00:06:27.889
在你成为主人之前，有人会说主子。
Until you'll be masters,
some say frontend masters.
