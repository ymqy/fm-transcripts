WEBVTT

1
00:00:00.007 --> 00:00:00.843
> > Jem Young: 但我还有个问题。
&gt;&gt; Jem Young: But I still have a problem.

2
00:00:00.843 --> 00:00:05.671
我不喜欢每次都要运行 node.appjs 。
I don't like that I have to run
node.appjs every single time.

3
00:00:05.671 --> 00:00:07.636
如果重新启动服务器，会发生什么情况 ?
What happens if I restart my server?

4
00:00:07.636 --> 00:00:09.032
如果我杀了它怎么办
What happens if I just kill it?

5
00:00:09.032 --> 00:00:12.057
如果我的电脑在这一点上睡觉而壳出口了怎么办
What happens if my computer goes to
sleep at this point and the shell exits,

6
00:00:12.057 --> 00:00:14.362
这意味着它会杀死所有正在运行的程序
which means it'll kill every
program that's running.

7
00:00:14.362 --> 00:00:18.992
我们需要某种管理者，这样我们就可以使用流程管理器。
We need some sort of manager so
we're going to use a process manager.

8
00:00:18.992 --> 00:00:23.429
流程管理器只是一种保持应用程序正常运行的方法。
And a process manager is just a way of
keeping your application up and running.

9
00:00:23.429 --> 00:00:26.844
它可以处理错误，它将处理重新启动。
It can handle errors, it handles restarts.

10
00:00:26.844 --> 00:00:31.839
假设您的代码中有一个抛出未处理的异常的位置。
Let's say you have a place in your code
that throws a non handled exception.

11
00:00:31.839 --> 00:00:33.220
在节点中执行哪些操作 ?
What does that do in Node?

12
00:00:33.220 --> 00:00:34.704
这会害死人的
That'll just kill the program.

13
00:00:34.704 --> 00:00:38.154
因此，您需要一些处理该问题，然后正常重新启动的服务。
So you need some sort of service that
handles that and then restarts gracefully.

14
00:00:38.154 --> 00:00:42.109
工作就是让过程不断地不断地运行
And it's job is to keep the process up and
running constantly and

15
00:00:42.109 --> 00:00:43.950
它是在后台做的
it does it in the background.

16
00:00:43.950 --> 00:00:49.466
今天我们要用这个练习用 pm2
So today we're gonna use, for
this exercise we're gonna use pm2.

17
00:00:49.466 --> 00:00:53.424
你也可以永远的用一个程序，永远是好的，
You can also use a program called
forever and forever is good,

18
00:00:53.424 --> 00:00:58.235
它是一个完美的流程管理器 pm2 是一个更全面的特点
it's a perfectly fine process manager,
pm2 is a bit more full featured.

19
00:00:58.235 --> 00:01:01.398
而且它的使用更干净。
And it's a little bit cleaner to use.

20
00:01:01.398 --> 00:01:04.646
但是，可以自由使用您想要的任何流程管理器，但在这种情况下，我们将使用 pm2。
But feel free to use any process manager
you want, but in this case we'll use pm2.

21
00:01:04.646 --> 00:01:06.605
我们又要再来一次了
So we're gonna us npm again.

22
00:01:06.605 --> 00:01:10.424
因为我们正在进行全球性的安装，我们必须使用 sudo 命令。
And because we're doing a global install,
we're gonna have to use the sudo command.

23
00:01:10.424 --> 00:01:14.043
因此 sudo npm i -g for global pm2。
So sudo npm i -g for global pm2.

24
00:01:20.653 --> 00:01:21.371
>> Jem Young: 是吗 ?
&gt;&gt; Jem Young: Yes?

25
00:01:21.371 --> 00:01:26.948
>> 演讲者 2: 我被告知的经验法则是避免安装全局。
&gt;&gt; Speaker 2: So rule of thumb I've
been told is avoid installing global.

26
00:01:26.948 --> 00:01:30.472
这是一个例外，其中- >> Jem Young: 是。
This is an exception where-
&gt;&gt; Jem Young: Yes.

27
00:01:30.472 --> 00:01:31.903
>> 演讲者 2: 例外情况是什么 ?
&gt;&gt; Speaker 2: What are the exceptions?

28
00:01:31.903 --> 00:01:34.962
何时安全使用全局安装?
When is it safe to use a global install?

29
00:01:34.962 --> 00:01:38.837
>> Jem Young: 当您需要从任何目录全局运行它时。
&gt;&gt; Jem Young: When you need to run
it globally from any directory.

30
00:01:38.837 --> 00:01:43.158
因为这不是，说我还有四，五个节点应用程序在运行，
Because this isn't, let's say I had four
or five other node applications running,

31
00:01:43.158 --> 00:01:44.850
我想要 pm2 来存取所有这些
I want pm2 to access all of that.

32
00:01:44.850 --> 00:01:48.667
所以，安装和本地都不太有道理，因为我们没有
So installing and locally wouldn't make as
much sense because we didn't then we have

33
00:01:48.667 --> 00:01:51.271
把所有东西都管到节点模块上
to pipe everything into node modules,
things like that.

34
00:01:51.271 --> 00:01:52.584
但这一点非常好。
But that's an excellent point.

35
00:01:52.584 --> 00:01:56.337
你一般都不想在全球做事情，除非你必须这样做。
You generally don't want to do
things globally unless you have to.

36
00:01:56.337 --> 00:01:57.871
如果你想在全球范围内
If you wanna run things globally but

37
00:01:57.871 --> 00:02:00.438
从本地目录中，您可以使用称为 MPX的内容。
from the local directory you
can use something called MPX.

38
00:02:00.438 --> 00:02:03.293
先在你的地方看看然后上去
Which will look at first in your local and
then move up.

39
00:02:03.293 --> 00:02:06.897
但在这种情况下，我们想在全球运行，因为它的流程管理者。
But in this case, we wanna run globally
because its a process manager.

40
00:02:06.897 --> 00:02:09.460
但我的问题很重要，那就是在事情的基础上。
Great question though,
that is staying on top of things.

41
00:02:18.336 --> 00:02:21.518
>> Jem Young: 太棒了，那是个大安装。
&gt;&gt; Jem Young: Awesome,
that was a big install.

42
00:02:21.518 --> 00:02:28.592
这件事还有很多事要做
Man, there's a lot to this thing,
good times.

43
00:02:28.592 --> 00:02:32.252
无论如何，没有人看到正在安装的库。
Anyways, no one ever looks at
the library being installed.

44
00:02:32.252 --> 00:02:34.627
如果你问我晚上的事是什么但现在不是晚上
If you asked me what are my issues
with npm, and it's not npm,

45
00:02:34.627 --> 00:02:37.615
只是包装经理你不知道到底发生了什么
it's just package managers, is you
don't know what's actually going on.

46
00:02:37.615 --> 00:02:40.449
你根本不知道这些包裹里有什么
You have no idea what any
of these packages do.

47
00:02:40.449 --> 00:02:41.319
这也是我们的信任
Again it's trust,

48
00:02:41.319 --> 00:02:44.558
互联网是建立在信任的基础上的，我相信这一点是正确的。
the Internet's built on trust and
I trust that this is working correctly.

49
00:02:44.558 --> 00:02:47.962
明天我们要运行更高版本的节点
Tomorrow we're going to run
a higher version of node,

50
00:02:47.962 --> 00:02:50.706
就因为我喜欢使用现代的功能
just because I like to
use modern features.

51
00:02:50.706 --> 00:02:53.778
但我们使用的是基线安装
But we're using the baseline
install that came with,

52
00:02:53.778 --> 00:02:58.605
因为我们是从适当的爬虫类中安装的，它们总是在后面，我不知道为什么。
because we installed from the apt repo,
they're always behind, I don't know why.

53
00:02:58.605 --> 00:03:00.746
但今天我不想改变这一点
But today I didn't wanna
go into how to change that,

54
00:03:00.746 --> 00:03:02.460
如何指向其他版本。
how to point that to a different version.

55
00:03:02.460 --> 00:03:06.973
但明天我们可能要运行 10或 12 节点，或者 LTS 版本的任何版本。
But tomorrow we're gonna run probably node
10, or 12, or whatever the LTS version is.

56
00:03:06.973 --> 00:03:09.355
但今天我们没事
But for today we're okay.

57
00:03:13.990 --> 00:03:15.685
>> Jem Young: 所以让我们开始吧，开始 pm2。
&gt;&gt; Jem Young: So
let's go ahead and start pm2.

58
00:03:15.685 --> 00:03:21.187
所以 pm2 启动 app.js。
So pm2 start app.js.

59
00:03:24.575 --> 00:03:25.449
>> Jem Young: Cool ， and
&gt;&gt; Jem Young: Cool, and

60
00:03:25.449 --> 00:03:31.370
它现在正在以 0 标识运行，因为它现在只是在运行。
it's now running with id 0 because
it's only thing running right now.

61
00:03:31.370 --> 00:03:33.605
好的现在我可以去做我想做的事
What's nice is now,
I can go do whatever I want and

62
00:03:33.605 --> 00:03:35.376
它只是在后台运行
it's just running in the background.

63
00:03:35.376 --> 00:03:40.784
如果它崩溃，它将尽最大努力保持它的状态，以防它发生。
If it crashes it's going to do its
absolute best to keep it up, just in case.

64
00:03:40.784 --> 00:03:44.180
但要确保它在服务器重新启动时启动，
But to make sure that it starts
when the server restarts,

65
00:03:44.180 --> 00:03:49.091
因为现在，如果服务器重新启动，那么我们仍然必须启动 pm2 启动 app.js。
because right now if the server restarts,
we still have to go pm2 start app.js.

66
00:03:49.091 --> 00:03:53.834
我们可以修改 pm2 启动文件，以便它创建一个始终启动的守护程序
We can modify the pm2 startup file so that
it creates a daemon that will always start

67
00:03:53.834 --> 00:03:56.288
启动服务器时的应用程序。
our application when we start the server.

68
00:03:56.288 --> 00:03:57.751
所以我们会说 pm2 启动
So we'll say pm2 startup.

69
00:04:04.961 --> 00:04:05.562
>> Jem Young: Cool。
&gt;&gt; Jem Young: Cool.

70
00:04:14.260 --> 00:04:15.804
>> Jem Young: 我认为我不需要设置启动脚本。
&gt;&gt; Jem Young: I don't think I
need to set the startup script.

71
00:04:15.804 --> 00:04:19.555
我想它是给我的但我们会检查的
I think it does it for
me, but we'll check.

72
00:04:19.555 --> 00:04:22.286
所以我现在要做的就是控制版本
So what I'm gonna do now,
we get to version control,

73
00:04:22.286 --> 00:04:23.699
确保我做对了
make sure I did that right.

74
00:04:23.699 --> 00:04:25.668
我们可能要把它复制并粘贴在其中。
We may actually have to copy and
paste this in.

75
00:04:25.668 --> 00:04:29.372
但我不认为我最后一次碰到这种情况时就必须这样做。
But I don't think I had to do that
when I ran this through last time.

76
00:04:29.372 --> 00:04:35.206
但我要做的是测试一下我的服务器
But what I'm gonna do to test this out,
is I'm gonna take down my server.

77
00:04:35.206 --> 00:04:38.125
最快的方法是你是否正确的做了
The fastest way to find out
if you did things correctly.

78
00:04:38.125 --> 00:04:42.170
我要把它关掉好吗 ?
And I'm gonna turn it off, yeah, turn off.

79
00:04:42.170 --> 00:04:45.466
它需要第二个很酷的
It takes a second, cool.

80
00:04:45.466 --> 00:04:51.858
服务器关闭，让它重新开启。
The server is off and
let's turn it back on.

81
00:04:51.858 --> 00:04:57.103
给我一分钟好吗
Give it a minute,
is it up and running yet?

82
00:04:57.103 --> 00:04:59.182
我只是用了下扣子
I just used just the off button.

83
00:05:03.105 --> 00:05:05.180
>> Jem Young: 这不太有用，因为你还，
&gt;&gt; Jem Young: Which, it's not terribly
useful because you still, and

84
00:05:05.180 --> 00:05:07.567
数字海洋会告诉你这个，你还在发单。
Digital Ocean will tell you this,
you're still getting billed.

85
00:05:07.567 --> 00:05:08.685
只要你把它关了
Just cuz you turn it off,

86
00:05:08.685 --> 00:05:11.999
并不意味着你被释放了就意味着它没在运行
doesn't mean you deallocated yourself,
just means it's not running.

87
00:05:11.999 --> 00:05:14.708
一个重要的区别是你可以把它关掉然后好好想想
An important distinction,
cuz you might turn it off and think well,

88
00:05:14.708 --> 00:05:16.959
我不需要服务器他们还在给你充电
I won't need the server,
they're still charging you.

89
00:05:16.959 --> 00:05:20.242
所以你的里程可能不同
[LAUGH] So your mileage may vary.

90
00:05:20.242 --> 00:05:21.002
服务器上了吗
Okay is the server up?

91
00:05:21.002 --> 00:05:22.961
可能要花一秒
It might take a second.

92
00:05:22.961 --> 00:05:27.086
So pm2 status， >> Jem Young: And
So pm2 status,
&gt;&gt; Jem Young: And

93
00:05:27.086 --> 00:05:29.120
我们的应用程序正在运行，所以 pm2 保存。
we got the app running, so pm2 save.

94
00:05:32.930 --> 00:05:34.759
>> Jem Young: 酷，现在它被拯救了。
&gt;&gt; Jem Young: Cool, so now it's saved.

95
00:05:34.759 --> 00:05:39.543
当服务器重新启动时， pm2 将像以前一样启动并运行。
When the server restarts, pm2 will
get up and running as it did before.

96
00:05:39.543 --> 00:05:42.800
这其实是个很重要的交易
This is actually a pretty big deal
cuz you'll forget to do it and

97
00:05:42.800 --> 00:05:44.223
你就会杀了你的服务器
you will kill your server.

98
00:05:44.223 --> 00:05:49.012
一切都正常了看看这个妈妈你就像我什么都没看见
Everything is working, check this out mom,
and you're like, I don't see anything,

99
00:05:49.012 --> 00:05:51.423
你是个失败的儿子和工程师
you're a failure as a son and
as a engineer.

100
00:05:51.423 --> 00:05:54.143
不这不重要我妈不管什么都爱我
No, that doesn't matter,
my mom loves me no matter what.

101
00:05:54.143 --> 00:05:56.470
>> [LAUGH] >> Jem Young: [LAUGH] 也这样
&gt;&gt; [LAUGH]
&gt;&gt; Jem Young: [LAUGH] That's way too

102
00:05:56.470 --> 00:05:57.139
很多信息。
much information.
