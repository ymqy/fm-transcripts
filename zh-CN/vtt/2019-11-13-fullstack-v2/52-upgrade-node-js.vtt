WEBVTT

1
00:00:00.558 --> 00:00:04.224
>> Jem Young: 说到升级，现在让我们进入升级节点，
&gt;&gt; Jem Young: And speaking of upgrade,
let's go into upgrading node now,

2
00:00:04.224 --> 00:00:06.705
缺省安装为节点 8。
the default installation is node eight.

3
00:00:06.705 --> 00:00:09.471
据我所知没有任何重要的安全更新
I wouldn't say there's any major
security updates as far as I know,

4
00:00:09.471 --> 00:00:10.961
可能会有 10个节点进入节点
there might be to move into node ten.

5
00:00:10.961 --> 00:00:12.977
但是，让我们来做一下，因为语法比较好一点。
But let's just do it because
the syntax a little better.

6
00:00:12.977 --> 00:00:16.420
MPM 是较新版本的节点的少量清除程序。
MPM is a little bit cleaner
on the newer version of node.

7
00:00:16.420 --> 00:00:19.670
要这样做我们要用这个叫宵禁的命令
And to do this,
we're gonna use this command called curl,

8
00:00:19.670 --> 00:00:21.362
对于客户机 URL 很短。
which is short for client URL.

9
00:00:21.362 --> 00:00:24.307
这可能是你见过的命令
It's probably a command you've seen for
and

10
00:00:24.307 --> 00:00:29.900
它是一个比较常见的读取和写入外部资源的命令。
it's one of the more common commands for
just reading and writing external sources.

11
00:00:29.900 --> 00:00:33.752
在这种情况下，因为我们昨天做应用安装的时候，
And in this case,
because when we did app install yesterday,

12
00:00:33.752 --> 00:00:36.491
我们要用什么应用回购协议
we had to use whatever
the app repo is using,

13
00:00:36.491 --> 00:00:40.808
它始终是较旧版本的节点，我们想升级该版本。
which is always an older version of node,
and we wanna upgrade that.

14
00:00:40.808 --> 00:00:44.813
所以我们会直接连接到 Node Source Debian repo
So we're actually gonna connect directly
to Node Source, the Debian repo,

15
00:00:44.813 --> 00:00:48.091
Debian 是 Linux 的一个特点，它维护这些包。
and Debian is a flavor of Linux
that maintains these packages.

16
00:00:48.091 --> 00:00:54.759
我们在做什么，我想我把它放在这里的笔记里，我做了。
What we're doing, and
I think I put it in the notes here, I did.

17
00:00:54.759 --> 00:00:57.947
如果你好奇我们在做什么
And if you're curious about what
we're doing most of the time,

18
00:00:57.947 --> 00:01:00.378
我要用这个叫 Explainshell的东西
I'm gonna use this thing
called Explainshell.

19
00:01:00.378 --> 00:01:01.689
我在用咒骂
And I'm using curl.

20
00:01:01.689 --> 00:01:03.649
这是我最喜欢的工具之一
And this is one of my favorite tools,

21
00:01:03.649 --> 00:01:08.025
记得我说男人的页面是什么样子的时候就会有一些知识
cuz remember when I said man pages
are kind of like, here's some knowledge.

22
00:01:08.025 --> 00:01:10.057
Explainshell 执行的操作更简单。
Explainshell does it much simpler.

23
00:01:10.057 --> 00:01:13.978
所以如果你想看那个男人的网页
So if you're trying to look at
the man page for what curl-sl does,

24
00:01:13.978 --> 00:01:15.319
是一种不透明的
it's kind of opaque.

25
00:01:15.319 --> 00:01:19.875
但是用 Explainshell ，我们知道它是无声的，
But using Explainshell, it's really
helpful that we know that it's silent and

26
00:01:19.875 --> 00:01:21.283
它就会跑了
it's just going to run.

27
00:01:21.283 --> 00:01:24.260
L 表示会检查 HTTP 是否可用。
The L means it's gonna check
the HTTP is available.

28
00:01:24.260 --> 00:01:27.170
而 O 表示它会输出到一个文件里
And the O means it's
gonna output to a file.

29
00:01:42.545 --> 00:01:44.465
>> Jem Young: 因为我懒，嗯?
&gt;&gt; Jem Young: Because I am lazy, hm?

30
00:01:44.465 --> 00:01:47.576
>> 扬声器 2: [INAUDIBLE] >> Jem Young: 您将看到文件输出。
&gt;&gt; Speaker 2: [INAUDIBLE]
&gt;&gt; Jem Young: You will see a file output.

31
00:01:47.576 --> 00:01:49.527
速度很快就在第二天内
It's pretty fast, within a second so.

32
00:01:52.701 --> 00:01:55.662
>> Jem Young: 如果您执行 ls ，那么会看到节点源设置。
&gt;&gt; Jem Young: And if you do an ls,
you'll see a node source setup.

33
00:01:55.662 --> 00:01:57.218
其实我要去掉那个测试日志
Actually I'm gonna remove that test log.

34
00:01:59.995 --> 00:02:03.453
>> Jem Young: 如果你想看的话，一般情况下，
&gt;&gt; Jem Young: And if you wanna take a look
at it, which, generally if you're running

35
00:02:03.453 --> 00:02:06.350
在因特网上下载脚本，这是一个安全的站点。
downloading scripts on the Internet,
this is a safe site.

36
00:02:06.350 --> 00:02:11.775
众所周知， repo的维护不存在太多的安全问题。
It's well known, the repo's maintained,
it doesn't have too many security issues.

37
00:02:11.775 --> 00:02:14.346
但是一般情况下，您要小心下载运行的脚本
But generally, you wanna be careful
about downloading running scripts on

38
00:02:14.346 --> 00:02:16.283
因为你不知道自己在做什么
the Internet because you
don't know what it's doing.

39
00:02:16.283 --> 00:02:20.513
但让我们来看一看那剧本在做什么。
But let's take a look at
what that script is doing.

40
00:02:20.513 --> 00:02:21.596
而且很多
And it's a lot,

41
00:02:21.596 --> 00:02:26.326
我只是向你展示因为我无法完成所有这些
I'm just showing you this just because
I couldn't go through all of it.

42
00:02:26.326 --> 00:02:28.605
但我相信 Debian repo 和
But I do trust the Debian repo and

43
00:02:28.605 --> 00:02:33.687
我知道这是安装最新版本的节点的已知方法。
I know that this is a known way of
installing the latest version of node.

44
00:02:33.687 --> 00:02:36.824
但一般来说，如果有人给你一个脚本在你的服务器上运行，
But in general, if someone gives
you a script to run on your server,

45
00:02:36.824 --> 00:02:37.768
别这么做 [ LAUGH]
don't do it [LAUGH].

46
00:02:37.768 --> 00:02:40.389
没有什么好理由去做
There's no good reason to do it.

47
00:02:40.389 --> 00:02:41.950
我们只是把这个作为一个巴什的剧本
And we're just gonna run
this as a bash script.

48
00:02:41.950 --> 00:02:44.429
所以我们刚刚创建的那个文件
So sudo bash that file we just created.

49
00:02:48.665 --> 00:02:50.932
>> Jem Young: Clear sudo bash.
&gt;&gt; Jem Young: Clear sudo bash.

50
00:02:57.110 --> 00:03:00.653
>> Jem Young: 那脚本在做什么，实际上不是下载节点，
&gt;&gt; Jem Young: And what that script is
doing, it's not actually downloading node,

51
00:03:00.653 --> 00:03:04.151
只是将应用程序指针设置为不同源的节点。
it's just setting the apps pointer
to nodejs to a different source.

52
00:03:04.151 --> 00:03:07.123
所以说，嘿，我要下载节点。
So it's saying, hey,
I want to download nodejs.

53
00:03:07.123 --> 00:03:09.632
这里有一个更新版本的版本，只是其中的一点。
Here's a newer version of it and
just point to that.

54
00:03:09.632 --> 00:03:17.739
现在我们可以说 sudo 适合安装节点。
So now we can say sudo apt install nodejs.

55
00:03:17.739 --> 00:03:18.683
是的
And yes.

56
00:03:27.538 --> 00:03:31.081
>> Jem Young: Nice，现在当我执行节点时 --版本，
&gt;&gt; Jem Young: Nice, so
now when I do node --version,

57
00:03:31.081 --> 00:03:36.569
看到我在 10 号节点而不是节点 8 上
see I'm on node 10 rather than node 8,
a little friendlier.

58
00:03:36.569 --> 00:03:41.824
如果你想知道， Gem，节点 11 和 12 ，我们为什么不使用这些呢 ?
And if you're wondering, Gem, node 11 and
12 are out, why aren't we using those?

59
00:03:41.824 --> 00:03:43.054
我想 12 个了
I think 12 is out.

60
00:03:43.054 --> 00:03:46.302
10 是 LTS 版本，你还记得我们之前谈到的 LTS，
10 is the LTS version, and
you remember earlier we talked about LTS,

61
00:03:46.302 --> 00:03:47.889
这意味着长期的支持
which means long-term support.

62
00:03:47.889 --> 00:03:52.024
将维护节点 10 ，即安全升级，
Node 10 will be maintained,
that means security upgrades,

63
00:03:52.024 --> 00:03:55.622
固定零天，将小虫子固定到 2021年。
fixing zero days,
fixing minor bugs until 2021.

64
00:03:55.622 --> 00:03:58.873
这就是为什么我们使用 LTS 版本与现代的裁剪边缘版本相比
That's why we use the LTS version versus
the modern cutting edge version is

65
00:03:58.873 --> 00:04:01.776
可能有更多的虫子还没被发现
probably gonna have more bugs
that haven't been discovered yet.

66
00:04:01.776 --> 00:04:03.817
也许有些安全问题我们不知道
Maybe some security
exploits we don't know.

67
00:04:03.817 --> 00:04:07.263
所以，一般来说，如果我们讨论的是服务器，那么运行 LTS。
So we generally, if we're talking
about servers, run the LTS.

68
00:04:07.263 --> 00:04:10.257
您的个人服务器，运行您想要的任何版本的节点，
Your personal server,
you run whatever version of node you want,

69
00:04:10.257 --> 00:04:11.490
任何让你开心的事
whatever makes you happy.

70
00:04:11.490 --> 00:04:13.728
你想用 08 和所有这些好东西
You want to use asynch 08 and
all that good stuff,

71
00:04:13.728 --> 00:04:15.144
运行最新版本的节点。
run the latest version of node.

72
00:04:18.266 --> 00:04:19.884
>> Jem Young: 我们可以更新过期的套餐。
&gt;&gt; Jem Young: And
we can update our outdated packages.

73
00:04:19.884 --> 00:04:22.341
我们现在只有一个，那就是 npm2。
We only have one right now and
that was npm2.

74
00:04:22.341 --> 00:04:25.302
所以我们不需要更新它，我们昨天刚刚安装了它。
So we don't actually have to update it
cuz we just installed it yesterday.

75
00:04:25.302 --> 00:04:28.656
但是，如果您想要，可以运行 sudo npm 更新 -g。
But if you wanted to,
you can run sudo npm update -g.

76
00:04:28.656 --> 00:04:31.024
这将更新所有全局包。
That'll update all your global packages.

77
00:04:31.024 --> 00:04:33.470
这包括关于安全的章节。
And that covers the section on security.

78
00:04:33.470 --> 00:04:35.343
我们花了很长时间
We spent a long time on it.

79
00:04:35.343 --> 00:04:38.356
但我们谈到了一些不保护你的申请的后果。
But we talked about some the consequences
of not securing your application.

80
00:04:38.356 --> 00:04:41.629
我们讨论了防火墙和控制端口
We talked about firewalls,
and controlling ports, and

81
00:04:41.629 --> 00:04:46.555
使用最少许可权许可权来控制文件许可权。
controlling file permissions using the
least permissive permissions as possible.

82
00:04:46.555 --> 00:04:49.004
我们还说过要把你的申请保持到目前为止
And we talked about just keeping your
application up to date to prevent

83
00:04:49.004 --> 00:04:49.715
漏洞。
vulnerabilities.
