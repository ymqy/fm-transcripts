WEBVTT

1
00:00:01.066 --> 00:00:02.742
>> Jem Young: 现在我想 SSH 到我的服务器。
&gt;&gt; Jem Young: And
now I want to SSH into my server.

2
00:00:02.742 --> 00:00:06.594
现在，我将创建与服务器的安全连接。
Now that I'm going to create
a secure connection to my server.

3
00:00:06.594 --> 00:00:11.476
缺省情况下，用户为 root用户。
The user that is,
by default is root, the root user.

4
00:00:11.476 --> 00:00:14.199
所以我现在就去试试
So I'm going to try that now.

5
00:00:14.199 --> 00:00:18.724
因此， SSH 根位于我的 IP 地址。
So SSH root at my IP address.

6
00:00:21.728 --> 00:00:22.984
> > Jem Young: 我要打 " 是"
&gt;&gt; Jem Young: And I'm gonna hit Yes.

7
00:00:22.984 --> 00:00:26.949
我只是说我从没见过这台服务器
It's just saying hey,
I've never met this server before.

8
00:00:26.949 --> 00:00:29.024
确定这是要连接到的内容吗 ?
Are you sure this is what
you wanna connect to?

9
00:00:29.024 --> 00:00:32.115
这很有用因为说有人侵入了你的服务器
Which is really useful because let's
say someone hacked your server and

10
00:00:32.115 --> 00:00:32.728
把它拿走
took it over.

11
00:00:32.728 --> 00:00:34.795
签名会有一点不同
The signature is gonna be
a little bit different.

12
00:00:34.795 --> 00:00:39.485
我很想知道，我正尝试在这个服务器上使用 SSH ，但是
And it's really useful to know like hey,
I'm trying to SSH into this server but

13
00:00:39.485 --> 00:00:41.171
它已经不工作了
it's not working anymore.

14
00:00:41.171 --> 00:00:44.296
如果你得到的是 SSHing的话
And if you ever get something
like you're SSHing,

15
00:00:44.296 --> 00:00:48.219
您已连接到服务器，并且 SHA 签名已更改，
you're connected to a server and
the SHA signature is changed,

16
00:00:48.219 --> 00:00:52.597
你应该小心一点因为有些东西有点太 awry了
you should be a little careful
because something's a little bit awry.

17
00:00:52.597 --> 00:00:55.156
通常没什么可只是个头头
Usually it's nothing but
it's just a heads up.

18
00:00:55.156 --> 00:00:56.865
我只是想说 " 是"
I'm just gonna say yes.

19
00:00:56.865 --> 00:01:01.914
拒绝了伙计那里发生了什么
Denied, man what happened there?

20
00:01:01.914 --> 00:01:06.498
那么，缺省密钥对是标识为 SSH 的标识。
Well, what happened is the default
key pair is ID underscore SSH.

21
00:01:06.498 --> 00:01:09.067
然后， SSH 将首先尝试查找。
And SSH is going to try
to look there first.

22
00:01:09.067 --> 00:01:12.522
如果这不起作用的话我就不知道了
If that doesn't work,
it's going to be like, I don't know,

23
00:01:12.522 --> 00:01:16.388
您的密钥与我们在服务器中的公用密钥不匹配。
your key is not matching into the public
key that we have in the server.

24
00:01:16.388 --> 00:01:19.115
所以我们要做的是 SSH 破折号
So what we need to do is SSH dash I, and

25
00:01:19.115 --> 00:01:24.234
我们会把我们通过的那个私人钥匙的名字通过
we're going to pass in the name of
that private key that we passed in.

26
00:01:24.234 --> 00:01:31.275
那么 fsfe2 ，然后我们输入根@
So, fsfe2 and then we type root@

27
00:01:38.533 --> 00:01:40.390
>> Jem Young: 我在我的服务器上
&gt;&gt; Jem Young: And I am on my server,

28
00:01:40.390 --> 00:01:42.567
你就在你的服务器上
you're on your server.

29
00:01:42.567 --> 00:01:45.727
如果你想看看发生了什么
And if you wanna see what's happening, and

30
00:01:45.727 --> 00:01:51.546
我今次不会通过破折号，我只是说根 @ IP 地址。
I won't pass the dash I this time around,
I'm just gonna say root @ IP address.

31
00:01:51.546 --> 00:01:54.323
我要说 " V " 它会给我更多细节
I'm gonna say dash V and
it's gonna give me more details.

32
00:01:54.323 --> 00:01:58.635
如果你想知道，为什么这件事不被接受呢 ?
This is helpful if you try to figure out
hey, why is this thing not being accepted?

33
00:01:58.635 --> 00:02:02.358
为什么这一次的工作，无论如何都不应该起作用。
Why did that work this time,
that should not have worked, anyways.

34
00:02:02.358 --> 00:02:06.959
这比你想知道的细节更详细
And this just more detail than
you want to know but it's used to

35
00:02:06.959 --> 00:02:12.461
如果您感到困惑，那么仪表板命令可用于调试。
the dashboard command is useful for
debugging if you're ever confused.

36
00:02:12.461 --> 00:02:17.724
然后退出我的服务器，我就可以在我的正常计算机上输入一个出口。
And exit my server, I can just type
exit in a back to my normal computer.

37
00:02:17.724 --> 00:02:19.575
你知道那是个痛苦
You know that was, that was a pain.

38
00:02:19.575 --> 00:02:21.862
我不希望每次都这样
I don't want to type
that every single time.

39
00:02:21.862 --> 00:02:25.079
我们要做的就是把它加到钥匙链上
So what we're gonna do is we're
gonna add it to the key chain.

40
00:02:25.079 --> 00:02:29.292
这个关于 OSX 的伟大之处在于它有一个密钥链的概念。
This a great thing about OSX is
it has this concept of keychain.

41
00:02:29.292 --> 00:02:32.668
大多数计算机都这样做，我不确定 Windows 是否会这样做，但我们会添加这个
Most computers do, I'm not sure if
Windows does, but we're gonna add this

42
00:02:32.668 --> 00:02:35.750
锁链所以它是它检查的普通钥匙的一部分
to the keychain so that it's part
of the regular keys that it checks.

43
00:02:35.750 --> 00:02:38.764
所以当你进入服务器的时候，它会说，这个是它。
So when you SSH into a server,
it's gonna say, this one is it.

44
00:02:38.764 --> 00:02:41.382
这个是这个，不是吗 ?
This one is this one, no, yes?

45
00:02:41.382 --> 00:02:44.324
>> 演讲者 2: 我想说，如果你成功了，你就不用这么做了
&gt;&gt; Speaker 2: I was gonna say, you don't
have to do that once you've successfully

46
00:02:44.324 --> 00:02:46.983
它会自动将它添加到您的密钥链中。
connected, it automatically
adds it to your keychain.

47
00:02:46.983 --> 00:02:48.473
>> Jem Young: 真的吗 ? >演讲者 2: 这就是为什么它没有问你
&gt;&gt; Jem Young: Really?
&gt;&gt; Speaker 2: That's why it didn't ask you

48
00:02:48.473 --> 00:02:49.390
第二次了
the second time.

49
00:02:49.390 --> 00:02:53.110
>> Jem Young: 所以我这样说是因为我在另一台计算机上尝试了这个
&gt;&gt; Jem Young: So I will say this because
I tried this on a different computer, not

50
00:02:53.110 --> 00:02:57.836
每个密钥链自动配置为每次将密钥添加到代理程序。
every keychain is automatically configured
to add the keys to the agent every time.

51
00:02:57.836 --> 00:02:59.049
有些电脑是
Some computers are.

52
00:02:59.049 --> 00:03:00.723
但这一点非常好。
But that's a really good point.

53
00:03:00.723 --> 00:03:05.937
我觉得这个版本的 OSX 的现代版本就是这样
I think the modern version of whatever
version of OSX I'm in does that, but

54
00:03:05.937 --> 00:03:11.668
如果没有，您可以说 VI ，我们将修改 SSH 配置。
just in case it doesn't, you can say VI
and we're going to modify the SSH config.

55
00:03:11.668 --> 00:03:19.603
所以我将会说清楚的 vi ) 点 SSH 的配置。
So I'm going to say clear vi
tilde dot SSH slash config.

56
00:03:23.028 --> 00:03:24.992
>> Jem Young: And KeysTo the agent 仅表示，
&gt;&gt; Jem Young: And
the AddKeysTo the agent just means,

57
00:03:24.992 --> 00:03:27.783
每次成功连接到服务器时。
every time you successfully
connect to server.

58
00:03:27.783 --> 00:03:30.432
下次会自动检查的
It's automatically gonna
check that next time.

59
00:03:30.432 --> 00:03:32.881
但它们并非总是真实的。
But they're not always true.

60
00:03:34.774 --> 00:03:36.463
>> Jem Young: 然后我们说用钥匙链，
&gt;&gt; Jem Young: And
then we just say use keychain,

61
00:03:36.463 --> 00:03:38.634
只说 SSH 密钥将会使用该密钥。
just saying the SSH key
is going to use that.

62
00:03:38.634 --> 00:03:40.073
它会先看看锁链
It's gonna look in the keychain first,

63
00:03:40.073 --> 00:03:41.862
而不是你必须手动通过它
rather than you have to
pass it through manually.

64
00:03:41.862 --> 00:03:44.951
别担心其他的事情，因为这是我的工作电脑。
Don't worry about the other stuff,
that's because this is my work computer.

65
00:03:49.944 --> 00:03:51.383
>> Jem Young: 好的。
&gt;&gt; Jem Young: All right.

66
00:04:00.235 --> 00:04:03.187
>> Jem Young: 然后，如果需要，可以使用 ssh-add -k 和
&gt;&gt; Jem Young: And then if you need to,
you can use ssh-add -k and

67
00:04:03.187 --> 00:04:06.417
如果你想把这个加到教学里
that will manually add that
to the teaching if you want,

68
00:04:06.417 --> 00:04:09.729
如果您不想启用自动执行该操作。
if you don't want to enable
the doing it automatically.

69
00:04:09.729 --> 00:04:13.115
但我认为大多数人的电脑都是给家里的人
But I would assume most people's computer
is set up is for people at home who

70
00:04:13.115 --> 00:04:17.060
正在使用不同的配置，可能是完全不同的操作系统。
are using a different configuration, maybe
a different operating system entirely.

71
00:04:20.740 --> 00:04:22.252
>> Jem Young: 只需将 SSH 放入我们的服务器中。
&gt;&gt; Jem Young: Just get
the SSH into our server.

72
00:04:22.252 --> 00:04:23.485
我现在就在这等你
I'm gonna hold here for now.

73
00:04:23.485 --> 00:04:32.534
但是 >> Jem Young: 我们已经开始了。
But
&gt;&gt; Jem Young: And we're on.

74
00:04:32.534 --> 00:04:34.588
我们现在正在服务器上。
We are on a server now.

75
00:04:34.588 --> 00:04:38.917
我们在世界上的某个服务器上，具体取决于您的数据中心所在的位置。
We're on a server somewhere in the world
depending on where your data center is.

76
00:04:38.917 --> 00:04:42.966
重要的是要注意这个哈希，奥托索普
Important things to note,
this hash, octothorpe,

77
00:04:42.966 --> 00:04:48.016
不管你想说什么我们都是超级用户
whatever you want to call it,
that means we're on as a superuser.

78
00:04:48.016 --> 00:04:49.949
我们是小组成员
We're on as the group.

79
00:04:49.949 --> 00:04:54.446
现在，根是危险的，我们要做的第一件事就是
Now, being root is dangerous, and one of
the first things we're gonna do is we're

80
00:04:54.446 --> 00:04:58.706
因为根，它会让你做任何你想做的事情。
gonna switch out of root, because root,
it will let you do anything you want.

81
00:04:58.706 --> 00:05:01.204
你想删除你的整个目录你想把所有东西都移走
You wanna remove your entire directory,
you wanna move everything,

82
00:05:01.204 --> 00:05:01.973
它会让你做的
it'll let you do it.

83
00:05:01.973 --> 00:05:03.305
它不会给你任何警告
It won't give you any warnings.

84
00:05:03.305 --> 00:05:07.550
当我们转换为超级用户时，这意味着如果我们做一些事情，
When we switch out of being a super user,
it means if we do something that is

85
00:05:07.550 --> 00:05:11.942
限制在许可权中，我们必须每次手动覆盖。
restricted in permissions, we have to
manually override that every time.

86
00:05:11.942 --> 00:05:13.076
我们不想再这样了
We don't want to go around that.

87
00:05:13.076 --> 00:05:16.129
真的很容易以 root用户的方式做任何事情。
It's really really tempting to
be to do everything as root.

88
00:05:16.129 --> 00:05:19.629
但是因为没有根护栏，而是假定你知道自己是什么
But because there are no guardrails as
root, it's assuming you know what you're

89
00:05:19.629 --> 00:05:21.874
你可以把自己变成一个糟糕的地方
doing, you can get yourself
into a really bad spot.

90
00:05:21.874 --> 00:05:26.062
但稍后我们将学习如何创建一个新用户，
But a little bit later we're going to
learn how to create a new user that

91
00:05:26.062 --> 00:05:29.119
具有 root 许可权，但缺省情况下不是 root用户。
has root permissions, but
by default is not root.
