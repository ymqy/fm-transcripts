WEBVTT

1
00:00:00.660 --> 00:00:03.439
>> Jem Young: 谁能解释一下包是什么 ?
&gt;&gt; Jem Young: Can anybody
explain what a packet is?

2
00:00:03.439 --> 00:00:04.549
只要你拿着枪就好
Just take it take a shot at that.

3
00:00:04.549 --> 00:00:05.538
你觉得包是什么
What do you think a packet is?

4
00:00:05.538 --> 00:00:07.230
>> 扬声器 2: 信息的位。
&gt;&gt; Speaker 2: A bit of information.

5
00:00:07.230 --> 00:00:08.060
>> Jem Young: 没错，对。
&gt;&gt; Jem Young: Exactly, right.

6
00:00:08.060 --> 00:00:09.230
这是一点点的信息。
It's a little bit of information.

7
00:00:09.230 --> 00:00:13.060
这是你能传输的最小的信息
It's the smallest bit of
information you can transmit.

8
00:00:13.060 --> 00:00:16.699
严格来说，有一点是你能传递的最小的信息。
Well, technically a bit is the smallest
information you can transfer it.

9
00:00:16.699 --> 00:00:21.019
但一个包就像一个信封
But a packet is,
think of it like an envelope.

10
00:00:21.019 --> 00:00:22.111
包含数据的包络。
An envelope with data in it.

11
00:00:22.111 --> 00:00:24.504
如果你想寄东西的话信封上有什么
And what does an envelope have on it,
if you're trying to mail something?

12
00:00:24.504 --> 00:00:27.550
它有一个关于你要去哪儿的地址
It's got an address about
where you're trying to get to.

13
00:00:27.550 --> 00:00:30.460
它得到了关于你从哪里来的信息
It's got information about
where you're coming from,

14
00:00:30.460 --> 00:00:32.549
以防它要回来的时候
just in case and when it has to come back.

15
00:00:32.549 --> 00:00:34.551
在这个包里有信息
And inside that packet
has the information.

16
00:00:34.551 --> 00:00:35.789
这就是包的内容。
And that's what a packet is.

17
00:00:35.789 --> 00:00:39.469
它只是这一基本单元的信息，说明一切都是如何传输的。
It's just this base unit of information
of how everything's transmitting.

18
00:00:39.469 --> 00:00:43.432
事实，我在互联网上跟你说话的方式只是几十亿，万亿，
Fact, the way I'm talking to you on the
internet is just billions, and trillions,

19
00:00:43.432 --> 00:00:46.030
数万亿的信息包正在移动
and trillions of packets
are moving right now.

20
00:00:46.030 --> 00:00:49.280
但包主要包含元数据。
But a packet mainly contains metadata.

21
00:00:49.280 --> 00:00:53.210
人们认为它主要是数据，就像你邮寄一个信封，你在想，
People think it's mainly data, like when
you mail an envelope you're thinking,

22
00:00:53.210 --> 00:00:57.619
我希望有人能收到我的信或者我从网上买的东西
I sure hope someone gets my letter or
this thing I bought off the internet.

23
00:00:57.619 --> 00:01:01.750
但是真正的信息包是什么，关键信息是什么，在哪里，
But really what the packet is, what the
the key information is, where it's going,

24
00:01:01.750 --> 00:01:04.709
它是从哪里来的，然后所有这些元数据都附加到它。
where it came from, and
then all these metadata attached to it.

25
00:01:04.709 --> 00:01:07.310
因此，元数据通常为标题形式。
So that metadata is usually
in the form of headers.

26
00:01:07.310 --> 00:01:10.090
但这个包又不是
But again, the packet is it's not

27
00:01:10.090 --> 00:01:13.230
就像我在网上传的这些视频包一样
just like these video packets I'm
sending out over the internet right now.

28
00:01:13.230 --> 00:01:14.289
这不只是一个包
It's not just one packet.

29
00:01:14.289 --> 00:01:18.069
它是它们的数万亿，并且通常使用 TCP。
It's trillions of them and
often using TCP.

30
00:01:18.069 --> 00:01:20.819
它从一个开始说，嘿，我有一个。
It starts with one and
it says like, hey, I've got one.

31
00:01:20.819 --> 00:01:23.670
还有 50 个我的表妹们也来了
And there's 50 more of my
cousins coming along too.

32
00:01:23.670 --> 00:01:26.859
然后当他们点击服务器时，它会把它们都放在一个校验和中。
And then when they hit the server,
it puts them all together in a checksum.

33
00:01:26.859 --> 00:01:30.960
这就是为什么 TCP 被称为纠错的原因
And that's why TCP is called
error correcting because it has

34
00:01:30.960 --> 00:01:34.329
所有这些信息包都说，嘿，有 50 个包。
all these packets, and it says like,
hey, there's 50 packets.

35
00:01:34.329 --> 00:01:37.729
客户说，嘿，除了两个人我都拿到了
And the client says, hey,
I got all of them except for two.

36
00:01:37.729 --> 00:01:39.890
我少了 49 和 37
I'm missing 49 and 37.

37
00:01:39.890 --> 00:01:42.579
这会把它反馈给服务器，服务器上说，我承认。
And that sends it back to the server and
the server says, I acknowledge that.

38
00:01:42.579 --> 00:01:44.620
让我发最后两包吧
Let me send those last two packets.

39
00:01:44.620 --> 00:01:47.280
这就是为什么因为你保证能拿到这个
That's why it's called error correcting
because you're guaranteed to get this

40
00:01:47.280 --> 00:01:48.780
每单个时间都有包。
packet every single time.

41
00:01:48.780 --> 00:01:54.520
发送刚广播数据的 UDP 包的 Versus UDP 。
Versus UDP which sends UDP packets
which are just broadcasting data.

42
00:01:54.520 --> 00:01:56.509
如果你能拿到剩下的信息就无所谓了
It doesn't matter if you get
the rest of the packets.

43
00:01:56.509 --> 00:01:57.896
最终他们会来的
Eventually they'l come through.

44
00:01:57.896 --> 00:01:59.359
因为它不出错。
Because it doesn't error correct.

45
00:01:59.359 --> 00:02:00.469
这就是为什么 TCP 更快的原因。
That's why TCP is faster.
