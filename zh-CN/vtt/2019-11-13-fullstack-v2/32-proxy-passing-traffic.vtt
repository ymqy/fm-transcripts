WEBVTT

1
00:00:00.030 --> 00:00:02.700
>> Jem Young: 我们刚刚收到了我们的 Express 应用程序。
&gt;&gt; Jem Young: We just got
our Express app written.

2
00:00:02.700 --> 00:00:08.727
有一个丢失的括号，我通过文本编辑巧妙地添加到其中，
There was a missing parentheses which I
have subtly added in there via text edit,

3
00:00:08.727 --> 00:00:10.156
把它扔进去了
threw it in there.

4
00:00:10.156 --> 00:00:13.904
但现在，让我们继续运行，运行该应用程序。
But now, let's go ahead and
run that, run that app.

5
00:00:13.904 --> 00:00:19.954
所以我要切换，我可以说节点 app.js。
So I'm going to switch over and
I can say node app.js.

6
00:00:19.954 --> 00:00:23.149
嘿它在跑凉快
Hey, it's running, cool.

7
00:00:23.149 --> 00:00:23.734
现在怎么办
Now what?

8
00:00:23.734 --> 00:00:25.728
我们去网站吧
Let's go to the website.

9
00:00:25.728 --> 00:00:30.890
jemisbest.com 请刷新该文件，等待第二次。
And jemisbest.com,
refresh that, wait a second.

10
00:00:32.820 --> 00:00:36.250
不执行任何操作，但应用程序正在运行。
Not doing anything, but
the app is running.

11
00:00:36.250 --> 00:00:38.774
发生什么事了
What's going on now?

12
00:00:38.774 --> 00:00:40.896
>> 演讲者 2: 您需要在正确的端口上运行吗 ?
&gt;&gt; Speaker 2: You need to
run it on the correct port?

13
00:00:40.896 --> 00:00:44.911
>> Jem Young: 是，我们有，但缺省端口为端口 80。
&gt;&gt; Jem Young: Yes, we do, but
the default port is port 80.

14
00:00:44.911 --> 00:00:49.298
但我想知道我们能否完成 3000口
But I wonder if we can do port 3000.

15
00:00:49.298 --> 00:00:51.725
现在开始工作了
Now it's working.

16
00:00:51.725 --> 00:00:52.515
但这不方便
But that's not convenient.

17
00:00:52.515 --> 00:00:56.631
我们无法构建应用程序并表示， hey ，转至 jemis.theby 或
We cann't build an app and say,
hey, go to jemis.thebest or

18
00:00:56.631 --> 00:01:00.048
很棒但你得去港口 3000
jemisthebest, but
you gotta go to port 3000.

19
00:01:00.048 --> 00:01:02.264
我妈妈会喜欢的是什么港口
Cuz my mom's gonna be like, what's a port?

20
00:01:02.264 --> 00:01:04.120
这不起作用。
And that doesn't work.

21
00:01:04.120 --> 00:01:08.051
因此，我们需要以某种方式将流量定向到端口 80。
So we need to somehow direct
that traffic to port 80.

22
00:01:08.051 --> 00:01:09.974
我们拿到了域名我们拿到了 IP
Cuz we got the domain, we got the IP,

23
00:01:09.974 --> 00:01:13.900
我们让 Nginx 跑了但是我们还是要把 Nginx 连接到 Express
we've got Nginx running, but
we still need to connect Nginx to Express.

24
00:01:13.900 --> 00:01:16.799
接下来我们要做的就是调 Nginx
So this what we're gonna do next,
we're gonna tune Nginx so

25
00:01:16.799 --> 00:01:18.099
它指向正确的端口。
that it points to the correct port.

26
00:01:19.269 --> 00:01:22.760
我们要用指令那个奇怪的词我之前用过
To that we're gonna use directives,
that weird word I used earlier.

27
00:01:22.760 --> 00:01:25.468
我们要用 proxy_pass 指令
We're gonna use the proxy_pass directive.

28
00:01:25.468 --> 00:01:28.471
这就意味着我们要委托书
And all that means is
we're gonna proxy pass,

29
00:01:28.471 --> 00:01:32.936
我们要去代理所有车辆的流量
we're going to proxy all the traffic
from that's going to / which is

30
00:01:32.936 --> 00:01:37.492
在不同端口上的实际节点服务器的常规根域。
the general root domain to the actual
Node server on a different port.

31
00:01:37.492 --> 00:01:39.272
那就走吧
So let's go and do that.

32
00:01:39.272 --> 00:01:44.292
这一变化很短。
And this change is fairly short.

33
00:01:44.292 --> 00:01:46.438
我们将再次编辑 Nginx 配置。
We're going to edit that
Nginx configuration again.

34
00:01:46.438 --> 00:01:54.037
因此， sudo vi /etc/nginx/sites-available/default。
So sudo vi
/etc/nginx/sites-available/default.

35
00:01:54.037 --> 00:01:57.903
然后我们要向下滚动到那个位置指令
And then we're going to scroll
down to that location directive,

36
00:01:57.903 --> 00:02:01.715
删除其中的所有内容，然后将 proxy_pass 输入到其中。
delete out everything in there,
and then proxy_pass into it.

37
00:02:01.715 --> 00:02:06.858
>> 扬声器 2: 在此处放置专用密钥，还是专用密钥?
&gt;&gt; Speaker 2: You put the private
key here, or the private key?

38
00:02:06.858 --> 00:02:11.275
你放进去，密码，是你给用户的吗 ?
Do you put in, for the password,
is it the one that you, for the user?

39
00:02:11.275 --> 00:02:16.034
>> Jem Young: 这是您创建该用户时设置的任何用户 ( sudo 用户) 。
&gt;&gt; Jem Young: It's whatever you set when
you created that user, that sudo user.

40
00:02:16.034 --> 00:02:18.512
>> 扬声器 3: 对不起，在什么部分下 ?
&gt;&gt; Speaker 3: Sorry, under what section?

41
00:02:18.512 --> 00:02:20.086
>> Jem Young: 在位置伪指令中。
&gt;&gt; Jem Young: In the location directive.

42
00:02:20.086 --> 00:02:25.233
所以，向下滚动，它会有一些类似的东西，让我来。
So scroll down and it'll have
something like, actually, let me.

43
00:02:25.233 --> 00:02:26.385
我就 - > 众议长 3: 文件?
I'll just-
&gt;&gt; Speaker 3: Files?

44
00:02:26.385 --> 00:02:28.411
>> Jem Young: 是的，只是撤销。
&gt;&gt; Jem Young: Yeah, just undo.

45
00:02:28.411 --> 00:02:32.372
因此， " 撤销" ，因此向下滚动到此处。
So Undo, so scroll down to here.

46
00:02:32.372 --> 00:02:33.567
然后删除这些文件。
And then just delete these files.

47
00:02:33.567 --> 00:02:40.484
因此，我将使用双 d 删除，然后切换到插入方式和选项卡。
So I'm going to use double d to delete,
then switch to insert mode and tab in.

48
00:02:40.484 --> 00:02:44.062
我要说 proxy_pass。
I'm going to say proxy_pass.

49
00:02:44.062 --> 00:02:48.796
因此，通过此 proxy_pass 伪指令，我们所讲的是，嘿，
So with this proxy_pass directive,
all we're telling it is, hey,

50
00:02:48.796 --> 00:02:53.466
任何进入 / 或我们现在都只有一个的请求
any request that comes in to / or,
well, we only have one right now.

51
00:02:53.466 --> 00:02:56.667
所以任何提出的要求，我们就提出这个要求，
So any request that comes in,
let's just forward that request and

52
00:02:56.667 --> 00:02:59.650
让我们的 Node 应用程序处理它，在另一个端口上。
let our Node application handle it,
and on a different port.

53
00:02:59.650 --> 00:03:01.259
这样，我们就不用改变港口了。
And this way,
we don't have to change ports.

54
00:03:01.259 --> 00:03:03.472
我们不用在 80 口或任何东西上运行
We don't have to run it on port 80 or
anything like that.

55
00:03:03.472 --> 00:03:07.194
我们可以在无限的港口上运行而不是无限的港口
We can run on infinite ports on,
well, not infinite ports,

56
00:03:07.194 --> 00:03:11.805
不是无限的港口 Nginx 知道它们的处理位置
not infinite ports, and the Nginx
knows exactly where they're handled.

57
00:03:11.805 --> 00:03:14.473
这样做的好处是我能跑 6 个不同的地方
And the benefit of doing something
like this is I can run six different

58
00:03:14.473 --> 00:03:15.163
应用程序和
applications and

59
00:03:15.163 --> 00:03:17.889
它们都在不同的港口运行它们都在同一时间运行
they all run on a different port
they're all running at the same time.

60
00:03:17.889 --> 00:03:22.867
我可以将一个应用程序关闭，再带一个，我可以路由到一个数据库。
And I can take one application down, bring
another one up, I can route to a database.

61
00:03:22.867 --> 00:03:25.953
我们所做的大部分都是通过 proxy_pass 指令
Most of what we're doing is gonna
be with the proxy_pass directive,

62
00:03:25.953 --> 00:03:26.853
至少今天
at least for today.

63
00:03:29.044 --> 00:03:29.778
>> Jem Young: 好的。
&gt;&gt; Jem Young: All right.

64
00:03:32.759 --> 00:03:33.973
>> Jem Young: Oops，我忘了重新启动服务器。
&gt;&gt; Jem Young: Oops, and
I forgot to restart the server.

65
00:03:33.973 --> 00:03:37.768
所以，让我们把它写出来。
So, let's write quit out of here.

66
00:03:37.768 --> 00:03:42.567
我们会说 sudo service nginx reload，或者
And we'll say,
sudo service nginx reload, or

67
00:03:42.567 --> 00:03:47.135
重新启动，我不认为它很重要，很酷。
restart, I don't think it matters, cool.

68
00:03:47.135 --> 00:03:49.951
如果您有错误，那么关于 Nginx 的好处是，如果您在
If you have an error, the good thing about
Nginx is if you have an error in your

69
00:03:49.951 --> 00:03:52.461
配置，它将在它允许您重新启动之前抛出错误。
configuration, it will throw
an error before it lets you restart.

70
00:03:52.461 --> 00:03:56.520
这样，你的 Web 服务器就能保持正常运行，这是非常好的。
So that way your web server keeps up and
running, it's pretty nice.

71
00:03:56.520 --> 00:04:01.062
让我们测试确定我是否正确
And let's test to make
sure I did that correctly.

72
00:04:01.062 --> 00:04:04.524
对不起忘了启动我的应用程序了
Oops, forgot to start my app back up.

73
00:04:11.365 --> 00:04:13.836
>> Jem Young: Nice。
&gt;&gt; Jem Young: Nice.

74
00:04:13.836 --> 00:04:21.574
现在，我的域已连接到在端口 80 上运行的 Express 应用程序。
So now I have my domain connected to my
Express application running on port 80.

75
00:04:21.574 --> 00:04:22.637
还不错
Not bad.

76
00:04:22.637 --> 00:04:25.310
如果您遇到麻烦，请不要忘记重新启动 Nginx。
If you're running into troubles,
don't forget to restart Nginx.

77
00:04:25.310 --> 00:04:27.410
请不要忘记启动节点应用程序备份。
Don't forget to start your
Node application backup.

78
00:04:27.410 --> 00:04:28.910
那是痛苦所以
And that's a pain, so

79
00:04:28.910 --> 00:04:31.670
我们会想办法重新开始你的申请
we're gonna figure out how to get
around restarting your application.

80
00:04:32.949 --> 00:04:35.369
>> 演讲者 3: 您是否提到了什么服务 ?
&gt;&gt; Speaker 3: Did you
mention what service is?

81
00:04:35.369 --> 00:04:38.600
和服务命令一样，那是什么 ?
Like the service command,
what does that do?

82
00:04:38.600 --> 00:04:39.317
>> Jem Young: 不，我没有。
&gt;&gt; Jem Young: No, I didn't.

83
00:04:39.317 --> 00:04:40.529
谢谢你的请求
And thanks for asking.

84
00:04:40.529 --> 00:04:42.778
服务是以下级别的最高级别的命令 :
Service is the highest-level command for

85
00:04:42.778 --> 00:04:45.829
任何在后台运行的守护程序。
any sort of daemon running
in the background.

86
00:04:45.829 --> 00:04:47.329
并非所有内容都在服务上运行。
Not everything runs on a service.

87
00:04:47.329 --> 00:04:50.560
明天我们要用一个叫 systemctl的东西
Tomorrow we're gonna use
something called systemctl,

88
00:04:50.560 --> 00:04:54.079
这是管理您的服务的方法，但在较低层。
which is a way of managing your services,
but at a lower layer.

89
00:04:54.079 --> 00:04:57.398
但服务是一个很好的包装，更清洁。
But services is a nice wrapper,
it's much cleaner.

90
00:04:57.398 --> 00:05:01.865
我们明天会看到的界面更先进
The interface we'll see
tomorrow is more advanced.

91
00:05:01.865 --> 00:05:04.725
总体而言，我试着尽可能地选择最简单的事情。
And generally,
I try to pick the simplest thing possible.

92
00:05:04.725 --> 00:05:07.149
但这才是服务
But that's what services is.

93
00:05:07.149 --> 00:05:09.341
你可以用各种服务做很多事情。
You can do lots of things with services.

94
00:05:09.341 --> 00:05:12.519
我可以将 " 节点 " 应用程序注册为后台运行的服务。
I can register my Node application as a
service that's running in the background.

95
00:05:12.519 --> 00:05:13.970
这可能不是最好的方法
It's probably not the best
way to manage it.

96
00:05:13.970 --> 00:05:16.630
但你一直想跑的 Nginx 之类的
But something like Nginx that
you always want running,

97
00:05:16.630 --> 00:05:18.168
我们只是用一个服务指令
we just use a services command.

98
00:05:18.168 --> 00:05:19.860
但问题是
But, good question.

99
00:05:19.860 --> 00:05:22.565
我很吃惊这是我们第一次在我的命令下
I'm surprised this is the first one we've
gotten on any sort of commands I've

100
00:05:22.565 --> 00:05:23.100
正在运行。
been running.

101
00:05:23.100 --> 00:05:23.810
没事的没事的
It's okay.

102
00:05:23.810 --> 00:05:24.521
怎么了
Yes?

103
00:05:24.521 --> 00:05:30.281
>> 扬声器 3: 在 nginx 文件夹中，也有一个称为站点的文件夹。
&gt;&gt; Speaker 3: In the nginx folder, there
is a folder called sites enabled as well.

104
00:05:30.281 --> 00:05:34.079
已启用站点与可用站点之间有何区别 ?
What's the difference between enabled and
available sites?

105
00:05:34.079 --> 00:05:35.829
>> Jem Young: 实际上，一个 sym 链接到另一个。
&gt;&gt; Jem Young: Actually,
one sym links to the other.

106
00:05:35.829 --> 00:05:40.980
我想说，我认为网站可以链接到已启用的站点。
I want to say, I think sites
available sym links to sites enabled.

107
00:05:40.980 --> 00:05:43.548
您可以管理不同的配置。
You can manage different
configurations that way.

108
00:05:43.548 --> 00:05:47.848
因此，您可以更改 Nginx 配置而不更改实际运行的内容。
So you can change Nginx configurations
without changing what's actually running.

109
00:05:47.848 --> 00:05:50.661
当你想让它有它的时候，你可以复制它。
And then whenever you want it to be
available, you can just copy it over.

110
00:05:50.661 --> 00:05:51.776
这就是一种方法。
And that's one way of doing it.

111
00:05:51.776 --> 00:05:56.086
有一个我要说我要试试这个
There's a, I'm gonna say it,
I'm gonna try this.

112
00:05:56.086 --> 00:06:02.430
nginx -t，是的。
nginx -t, yeah.

113
00:06:02.430 --> 00:06:06.011
因此，您可以运行 nginx -t ，并且可以运行配置和
So you can run the nginx -t, and
that runs over your configuration and

114
00:06:06.011 --> 00:06:08.144
证明一切都有道理
validates that everything makes sense.

115
00:06:08.144 --> 00:06:10.603
事实上我们甚至有一些不符合道理的东西
In fact, we even have some things
in here that don't make sense,

116
00:06:10.603 --> 00:06:13.300
这很奇怪因为这是默认配置
which is weird because it's
the default configuration.

117
00:06:13.300 --> 00:06:16.800
但这就是启用站点与可用站点的功能。
But that's what the sites enabled
versus sites available is.

118
00:06:16.800 --> 00:06:21.300
另一件事是你一般不会修改你的默认值。
And another thing is you generally
don't modify your default.

119
00:06:21.300 --> 00:06:22.250
你把它每个地点都做了
You make it per site.

120
00:06:22.250 --> 00:06:25.307
所以我想说最好的配置
So I'd say,
jemisthe.best configuration, and

121
00:06:25.307 --> 00:06:27.944
然后具有 Nginx 配置。
then have an Nginx configuration for that.

122
00:06:27.944 --> 00:06:29.660
然后我把它们全部融为一体
And then I merge them
all together into one.

123
00:06:29.660 --> 00:06:31.129
但因为我们只做一个网络服务器
But because we're only
doing one web server,

124
00:06:31.129 --> 00:06:34.439
这是最简单的例子这是最好的做法
and it's the simplest example,
that's the best practice.

125
00:06:34.439 --> 00:06:35.480
问得好
Good question, though.

126
00:06:35.480 --> 00:06:37.502
没想到你也没出现
Surprised that didn't come up either.

127
00:06:37.502 --> 00:06:39.677
你们都很犀利
You all are sharp.

128
00:06:39.677 --> 00:06:43.403
好了，每个人的网站上运行，我们都能让节点重新开始运行。
Okay, everybody's website up and running,
we get node back up and running.

129
00:06:43.403 --> 00:06:44.788
你是有联系的
You're connected.

130
00:06:44.788 --> 00:06:48.274
好，现在我们成功地做了一个网页应用。
All right, so now we've successfully
made a web application.

131
00:06:48.274 --> 00:06:49.891
干得好大家
Nice job, everyone.

132
00:06:49.891 --> 00:06:54.130
这是一个到达这里的旅程，但我们一起做了。
It was a journey to get here,
but we did it together.

133
00:06:54.130 --> 00:06:54.670
这才是最重要的
That's what's important.
