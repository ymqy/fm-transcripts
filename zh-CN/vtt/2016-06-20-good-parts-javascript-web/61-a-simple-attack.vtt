WEBVTT

1
00:00:00.000 --> 00:00:03.892
[音乐]
[MUSIC]

2
00:00:03.892 --> 00:00:06.301
&gt；&gt；Douglas Crockford：这是最简单的XSS攻击，并且
&gt;&gt; Douglas Crockford: This is the simplest XSS attack, and

3
00:00:06.301 --> 00:00:10.519
只是为了向你展示野兽的真实面貌。
just to show you what the beast actually looks like.

4
00:00:10.519 --> 00:00:12.339
所以在这次袭击中
So, in this attack,

5
00:00:12.339 --> 00:00:16.739
攻击者欺骗您的用户点击一个看起来像这样的URL。
the attacker tricks your user into clicking on a URL that looks like that.

6
00:00:18.170 --> 00:00:23.030
这是一个看起来很奇怪的URL，里面有尖括号和疯狂的东西，而且
It's a really weird looking URL with angle brackets and crazy stuff in it, and

7
00:00:23.030 --> 00:00:28.949
你可能会想，没有用户会点击它，不幸的是，他们不会。
you might think, no user would ever click on that, and unfortunately, no, they will.

8
00:00:28.949 --> 00:00:33.100
而且，如果他们足够聪明，不会点击看起来像这样的URL，
And, if they're smart enough not to click on a URL that looks like that,

9
00:00:33.100 --> 00:00:35.130
他们可能会点击bit.ly URL。
they'll probably click on a bit.ly URL.

10
00:00:35.130 --> 00:00:40.640
它可能会接受二维码，所以是的，他们会去那里。
It'll probably accept a QR code, so yeah, they're gonna go there.

11
00:00:40.640 --> 00:00:45.240
因此，过去Web服务器在默认情况下只需执行以下操作
And so, it used to be that Web servers, by default, would simply take

12
00:00:45.240 --> 00:00:50.149
文件名，并将其粘贴在404页的正文中，然后将其发送回。
the file name and stick it in the body of a 404 Page and send it back.

13
00:00:51.250 --> 00:00:56.149
在这种情况下，现在HTML上下文中，它变成了一个脚本标记，
In this case, now in the HTML context, that becomes a script tag,

14
00:00:56.149 --> 00:01:02.027
然后执行来自世界上最危险的服务器的加载脚本。
which will then execute a load script from the world's most dangerous server.

15
00:01:02.027 --> 00:01:04.804
他们可以访问你在浏览器上得到的一切。
They get access to everything that you've got on the browser.

16
00:01:04.804 --> 00:01:08.885
他们有你的饼干，他们有你的本地仓库，
They've got your cookies, they've got your local storage,

17
00:01:08.885 --> 00:01:12.352
他们让Chrome说这是一个有效的东西。
they've got the Chrome saying this is a valid thing.

18
00:01:12.352 --> 00:01:17.037
所以，当他们问你密码的时候，一切都很好，而且
So, when they ask for your password, everything's good, and

19
00:01:17.037 --> 00:01:21.983
关于这一点有数千种，也许数百万种变体，而且
there are thousands, maybe millions, of variations on this, and

20
00:01:21.983 --> 00:01:26.789
安全专家可以通过发现另一个主题来获得一些主题。
a security expert can get some theme by discovering another one.

21
00:01:27.789 --> 00:01:33.030
他们总是可以这样做，因为这些东西的供应是无穷无尽的，但是
They can always do that because there is an endless supply of these things, but

22
00:01:33.030 --> 00:01:36.560
所有这些问题的解决方案都是完全相同的。
the solution to all of these is exactly the same.

23
00:01:36.560 --> 00:01:40.950
所有的东西都必须被正确过滤，所有的东西都必须被正确地编码。
Everything has to be filtered correctly, everything has to be encoded correctly.

24
00:01:40.950 --> 00:01:45.780
所以，如果你对这个进行编码，并在放上它之前把它们变成实体，
So, if you encode this and turn those into entities before putting it on,

25
00:01:45.780 --> 00:01:50.490
然后它就会变得惰性，在任何地方都这样做就变得非常重要了。
then it becomes inert, and it becomes really important to do that everywhere.

26
00:01:50.490 --> 00:01:53.338
如果你在任何地方都能正确地做到这一点，
If you do that correctly everywhere,

27
00:01:53.338 --> 00:01:57.439
那么这种注入攻击就不可能发生了。
then these sorts of injection attacks cannot happen.

28
00:01:57.439 --> 00:02:02.280
&gt；&gt；扬声器2：好的，我想我错过了第一部分，所以
&gt;&gt; Speaker 2: All right, okay, I think I'm missing the first part of this, so

29
00:02:02.280 --> 00:02:08.001
你去yoursite.com，所有这些胡说八道，这个脚本都在里面。
you go to yoursite.com, all this nonsense, this script that's in there.

30
00:02:08.001 --> 00:02:08.698
&gt；&gt；Douglas Crockford：是的。
&gt;&gt; Douglas Crockford: Yeah.

31
00:02:08.698 --> 00:02:16.033
&gt；&gt；Speaker 2：服务器以404作为响应，但它会将该内容粘贴在其中吗？
&gt;&gt; Speaker 2: And the server responds with 404, but it sticks that content in it?

32
00:02:16.033 --> 00:02:18.050
&gt；&gt；Douglas Crockford：是的，它接受文件名，放入，
&gt;&gt; Douglas Crockford: Yeah, it takes the filename, puts it in,

33
00:02:18.050 --> 00:02:20.349
说这是我们找不到的文件。
says this is the file we couldn't find.

34
00:02:20.349 --> 00:02:26.789
&gt；&gt；Speaker 2：我明白了，所以好吧，现在这个脚本运行一个表单，
&gt;&gt; Speaker 2: I see, so okay, and now this script runs a form that says,

35
00:02:26.789 --> 00:02:32.969
请提交您的密码，他们会将密码发送给您。
please submit your password, and they send it their password, whatever.

36
00:02:32.969 --> 00:02:33.550
&gt；&gt；Douglas Crockford：是的。
&gt;&gt; Douglas Crockford: Yep.

37
00:02:33.550 --> 00:02:34.610
&gt；&gt；扬声器2：不管是什么。
&gt;&gt; Speaker 2: Whatever it is.

38
00:02:34.610 --> 00:02:36.170
&GT；&GT；道格拉斯·克罗克福德：不管它是什么。
&gt;&gt; Douglas Crockford: Whatever it is.

39
00:02:36.170 --> 00:02:39.939
&gt；&gt；Speaker 2：事实上，这个脚本现在可以与双方对话。
&gt;&gt; Speaker 2: In fact, this script can now talk to both sides.

40
00:02:39.939 --> 00:02:40.439
&gt；&gt；Douglas Crockford：是的。
&gt;&gt; Douglas Crockford: Yep.

41
00:02:41.599 --> 00:02:45.110
&gt；&gt；演讲者3：你是说缓解是在404页你完成的
&gt;&gt; Speaker 3: And you're saying the mitigation is done in the 404 Page you

42
00:02:45.110 --> 00:02:46.550
在你的服务器上。
have on your server.

43
00:02:46.550 --> 00:02:50.699
&gt；&gt；Douglas Crockford：对，所以实际上，服务器可以构建的每个页面
&gt;&gt; Douglas Crockford: Right, so in fact, every page your server can construct

44
00:02:50.699 --> 00:02:55.120
需要为所有输入的所有情况正确地进行此编码。
needs to do this coding correctly for all cases for all inputs.

45
00:02:55.120 --> 00:02:56.930
&GT；&GT；演讲者2：你永远不应该告诉他们提交了什么，
&gt;&gt; Speaker 2: You should never tell them what they submitted,

46
00:02:56.930 --> 00:02:58.860
它应该只是说没有找到那个页面。
it should just say that page isn't found.

47
00:02:58.860 --> 00:03:03.210
&gt；&gt；Douglas Crockford：对，就像另一个例子一样，这是一个没有
&gt;&gt; Douglas Crockford: Right, like another example, this is one that doesn't

48
00:03:03.210 --> 00:03:07.960
需要在雅虎上的第二个网站。
require a second site on Yahoo.

49
00:03:07.960 --> 00:03:11.949
他们以前有个人资料页面，在你的个人资料页面上，
They used to have profile pages, and on your profile page,

50
00:03:11.949 --> 00:03:13.060
有一个性别的盒子。
there's a box for gender.

51
00:03:14.810 --> 00:03:18.840
作为非常好的人，他们允许你在盒子里输入任何你想要的东西，
Being very nice people, they allowed you to type anything you wanted into that box,

52
00:03:18.840 --> 00:03:21.241
所以你不需要选择M或F
so it wasn't like you have to pick M or F.

53
00:03:21.241 --> 00:03:23.753
他们说，不管你想要什么，都可以。
They said, whatever you want, that's okay.

54
00:03:23.753 --> 00:03:28.639
有很多人都想通了，它是从一个尖括号开始的，
There were a lot of people who figured out, it starts with an angle bracket,

55
00:03:28.639 --> 00:03:31.449
然后在那里输入一个脚本标签。
and it's, type a script tag in there.

56
00:03:31.449 --> 00:03:35.979
所以，这意味着每次有人看你的个人资料页面，
And so, it means every time anybody looked at your profile page,

57
00:03:37.069 --> 00:03:37.968
他们可以窃取你的帐户。
they can steal your account.

58
00:03:39.990 --> 00:03:42.112
MySpace也发生了类似的事情。
There was a similar thing that happened in MySpace.

59
00:03:42.112 --> 00:03:45.358
有个叫萨米的人发现了MySpace
There was a guy named Sammy who figured out MySpace,

60
00:03:45.358 --> 00:03:49.129
在那个时候，有点聪明，并且有一些过滤器。
at that time, was a little bit smarter and had some filters.

61
00:03:49.129 --> 00:03:54.161
但是，这个叫萨米的家伙找到了绕过他们的方法，然后
But, this guy named Sammy figured out how to get around them, and

62
00:03:54.161 --> 00:04:00.016
所以他注入了一个脚本，每当有人查看他的个人资料页面时，
so he injected a script that, whenever anybody looked at his profile page,

63
00:04:00.016 --> 00:04:04.520
脚本将运行，然后将他添加到他们的英雄列表中。
the script would run and then add him to their Heroes list.

64
00:04:04.520 --> 00:04:10.302
哪一个是好友列表中最好的位置，并将该脚本放到他们的
Which is the best spot on the friends list and put that script onto their

65
00:04:10.302 --> 00:04:15.497
页面也是如此，所以看过其中一个页面的人的数量也是如此
page as well, and so the number of people who had looked at one of

66
00:04:15.497 --> 00:04:20.701
这些页面每分钟翻一番，或者，不，每小时左右翻一番。
these pages doubled every minute, or, no, every hour or so.

67
00:04:20.701 --> 00:04:24.399
在20小时内，他控制了200万个账户
In 20 hours, he had control of two million accounts and

68
00:04:24.399 --> 00:04:28.110
大约在那个时候，MySpace说，哇，发生什么事了？
about that time MySpace went, whoa, what's going on?

69
00:04:28.110 --> 00:04:32.365
他们关闭了它，但你仍然可以在网上搜索
And they shut it down, but you can still search out on the Web for

70
00:04:32.365 --> 00:04:37.437
Sammy是我的英雄，你可能还会在外面找到一些这样的东西。
Sammy Is My Hero, and you'll probably still find some of these out there.

71
00:04:39.721 --> 00:04:41.891
&gt；&gt；Douglas Crockford：这是这次攻击的一个版本，
&gt;&gt; Douglas Crockford: So that's a version of this attack,

72
00:04:41.891 --> 00:04:43.992
萨米原来是个好人。
and Sammy turns out to be a nice guy.

73
00:04:43.992 --> 00:04:49.384
我不知道他是不是个好人，但他认出了，哎哟，
I don't know if he's a nice guy, but he recognized, whoops,

74
00:04:49.384 --> 00:04:54.369
我没想到我会在一天内接手太多客户，
I didn't expect I'd take over too many accounts in a day,

75
00:04:54.369 --> 00:04:58.981
所以他会自首并被指控犯罪。
so he'd turn himself in and was charged with a crime.

76
00:04:58.981 --> 00:05:01.920
&GT；&GT；演讲者2：可能在白宫某处找到一份甜蜜的工作。
&gt;&gt; Speaker 2: Probably got a sweet job working in the somewhere White House.

77
00:05:01.920 --> 00:05:04.050
&GT；&GT；道格拉斯·克罗克福德：是的，我肯定萨米，我想他做得还不错。
&gt;&gt; Douglas Crockford: Yeah, I'm sure Sammy, I assume he did okay.

78
00:05:05.550 --> 00:05:07.005
他可能是个坏人，对吧？
He could have been a bad guy, right?

79
00:05:07.005 --> 00:05:08.750
他本可以自己留着
He could have just kept it to himself and

80
00:05:08.750 --> 00:05:10.720
找到了如何利用这两百万人。
figured out how to exploit these two million people.

81
00:05:17.110 --> 00:05:19.970
您还需要担心连接，所以
You also need to worry about concatenation, so

82
00:05:19.970 --> 00:05:23.100
JavaScript中的加号运算符是危险的。
the plus sign operator in JavaScript is dangerous.

83
00:05:23.100 --> 00:05:26.850
这取决于你如何使用它，因为你可以取一些字符串和
Depending on how you're using it, because you can be taking bits of string and

84
00:05:26.850 --> 00:05:31.250
把它们放在一起，在某些情况下，如果你只是把文本放在一起，
putting them together, and in some cases, if you're just putting together text,

85
00:05:31.250 --> 00:05:31.949
这不是问题。
it's not a problem.

86
00:05:31.949 --> 00:05:34.740
但是，如果您正在做一些类似于组装JSON或
But, if you're doing something like assembling JSON or

87
00:05:34.740 --> 00:05:39.139
组装HTML，有可能变坏。
assembling HTML, there is a potential for that to go bad.

88
00:05:39.139 --> 00:05:43.951
所以，只要有可能，你应该使用好的编码器和
So, whenever possible, you should be using good encoders and

89
00:05:43.951 --> 00:05:48.055
作家，而不是仅仅试图把东西加在一起。
writers and not just trying to plus things together.

90
00:05:48.055 --> 00:05:52.560
所以，我很高兴地报告，这显然不再是
So, I'm very happy to report that this is no longer apparently

91
00:05:52.560 --> 00:05:54.346
不安全感的来源。
a source of insecurity.

92
00:05:54.346 --> 00:05:59.177
一位经理，当被警告我们需要防范这一点时会问，
A manager, when being warned that we need to protect against this would ask,

93
00:05:59.177 --> 00:06:01.264
为什么会有人这么做？
why would anybody do that?

94
00:06:01.264 --> 00:06:01.980
&gt；&gt；扬声器2：否。&gt；&gt；Douglas Crockford：我们现在知道
&gt;&gt; Speaker 2: No. &gt;&gt; Douglas Crockford: We now know

95
00:06:01.980 --> 00:06:02.649
他为什么要这么做。
why he'll do that.

96
00:06:02.649 --> 00:06:03.600
&gt；&gt；扬声器2：我们仍然听到这个。
&gt;&gt; Speaker 2: We still hear that.

97
00:06:03.600 --> 00:06:04.355
&GT；&GT；道格拉斯·克罗克福德：真的吗？
&gt;&gt; Douglas Crockford: Do you really?

98
00:06:04.355 --> 00:06:06.475
[相声]嗯，这是个问题。
[CROSSTALK] Well, that's a problem.

99
00:06:06.475 --> 00:06:07.173
&gt；&gt；扬声器2：是的。
&gt;&gt; Speaker 2: Yeah.

100
00:06:07.173 --> 00:06:08.999
&gt；&gt；Douglas Crockford：是的，我们现在知道他们为什么会这么做了，
&gt;&gt; Douglas Crockford: Yeah, we now know why they will do that,

101
00:06:08.999 --> 00:06:11.810
他们会这样做，因为我们可以阻止他们这样做。
they will do that because we can prevent them from doing that.

102
00:06:13.290 --> 00:06:18.702
在某些公司的情况下，这些公司会无意中
In the case of some companies, those companies will unintentionally

103
00:06:18.702 --> 00:06:24.399
付钱让他们这样做，在某些情况下，也许付给他们很好的报酬去做那件事。
pay them to do that, in some cases, maybe pay them really well to do that.

104
00:06:24.399 --> 00:06:26.417
这些东西不是安全的，
These are things which are not security,

105
00:06:26.417 --> 00:06:28.899
有时被认为是安全的。
which are sometimes thought of as being security.

106
00:06:28.899 --> 00:06:34.805
例如，不便，我们不能阻止他们，但我们可以减缓他们。
For example, inconvenience, we can't stop them, but we can slow them down.

107
00:06:34.805 --> 00:06:38.970
它将在信息高速公路上设置减速带，从而阻止它们。
It will put speed bumps on the information superhighway where will stop them.

108
00:06:38.970 --> 00:06:43.159
那是行不通的，那些东西往往会给你带来比它们更多的不便。
That doesn't work, those things tend to inconvenience you more than them.

109
00:06:43.159 --> 00:06:45.629
只是，再一次，如果没有效果，
It's just, again, if it's not effective,

110
00:06:45.629 --> 00:06:48.939
这不是有效的，不要在上面浪费时间。
it's not effective and don't waste time on it.

111
00:06:48.939 --> 00:06:50.279
身份不是安全。
Identity is not security.

112
00:06:51.439 --> 00:06:54.500
找出某人是谁并不能回答这个问题，
Finding out who someone is doesn't answer the question of,

113
00:06:54.500 --> 00:06:56.079
应该允许他们对你做什么？
what should they be allowed to do to you?

114
00:06:57.420 --> 00:07:01.560
污染有时被认为是一种不起作用的安全模式。
Tainting is sometimes cited as a model of security that doesn't work.

115
00:07:03.540 --> 00:07:08.470
这是一个你试图追踪数据来源的模型
It's a model where you try to track the source of data and

116
00:07:08.470 --> 00:07:10.750
随着时间的推移，它是如何转变的，以及
how it's transformed over time, and

117
00:07:10.750 --> 00:07:14.790
尝试确定在什么时候它会被污染或损坏，但它不起作用。
try to determine at what point it becomes tainted or corrupted, but it doesn't work.

118
00:07:16.500 --> 00:07:19.415
最后，入侵检测不是安全的。
And then, finally, intrusion detection is not security.

119
00:07:19.415 --> 00:07:22.581
有些系统管理员已经厌倦了被黑客攻击，
There are some system administrators who are so tired of being hacked,

120
00:07:22.581 --> 00:07:24.651
他们已经放弃了阻止它的所有希望。
and they've given up all hope of stopping it.

121
00:07:24.651 --> 00:07:30.334
他们只想知道什么时候发生，但这不是安全问题。
They just want to know when it's happening, but that's that's not security.

122
00:07:30.334 --> 00:07:36.115
最大的可避免的安全来源，我们将在这里结束，是管理不善。
The biggest avoidable source of security, and we'll end here, is mismanagement.

123
00:07:36.115 --> 00:07:37.254
当经理说，
It's when a manager says,

124
00:07:37.254 --> 00:07:40.531
我们会通过保安人员的，因为我们有最后期限。
we're going to get this past the security guys because we've got a deadline.

125
00:07:40.531 --> 00:07:41.884
我们必须面对它，我们必须走出去。
We've got to meet it, we've got to get out there.

126
00:07:41.884 --> 00:07:42.966
我在电话线上得到了奖金。
I got a bonus on the line.

127
00:07:42.966 --> 00:07:47.598
我们要走了，不要让它发生，你要踢它，因为没有
We're going to go, don't let that happen, you gotta kick it up cuz no

128
00:07:47.598 --> 00:07:52.387
公司可以负担得起这样的事情在他们的网站上进行，因为
company can afford to have this kind of stuff going on in their sites, for

129
00:07:52.387 --> 00:07:54.606
任何可能的短期收益。
any possible short-term gain.
