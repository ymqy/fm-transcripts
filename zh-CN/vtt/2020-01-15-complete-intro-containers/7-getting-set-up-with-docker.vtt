WEBVTT

1
00:00:00.090 --> 00:00:03.212
因此，您应该在此点安装 Docker Desktop for MAC 和
So you should have Docker Desktop
installed at this point for MAC and

2
00:00:03.212 --> 00:00:03.714
Windows 。
Windows.

3
00:00:03.714 --> 00:00:05.889
没有 Docker Desktop for Linux，
There is no Docker Desktop for Linux,

4
00:00:05.889 --> 00:00:09.791
在这种情况下，您将需要没有 GUI的 Docker 引擎。
in which case you'll need Docker
engine which doesn't have a GUI.

5
00:00:09.791 --> 00:00:14.849
您可以在此查看此小 Docker 鲸将位于系统托盘中的底部
You can see here this little Docker whale
will be at the bottom in the system tray

6
00:00:14.849 --> 00:00:15.710
如果你在 Windows中
if you're in Windows.

7
00:00:17.570 --> 00:00:19.140
您可以在此处看到 Docker Desktop 正在运行。
You can see here I have
Docker Desktop running.

8
00:00:20.300 --> 00:00:26.030
接下来我想了解的是 Docker Hub。
The next thing I wanna get you more
acquainted with is Docker Hub.

9
00:00:26.030 --> 00:00:30.199
所以你可以去 hub.docker.com。
So you can just go to hub.docker.com.

10
00:00:30.199 --> 00:00:33.159
这可能是 Docker的最佳部分之一，
This is probably one of
the best parts about Docker,

11
00:00:33.159 --> 00:00:38.560
它们基本上是用这些节点的术语，然后是晚上的容器的，对吧 ?
is that they basically made these node
terms and then npm for containers, right?

12
00:00:38.560 --> 00:00:43.390
所以我可以说， Docker，给我一个 MongoDB 容器
So I can just say hey, Docker,
give me a MongoDB container and

13
00:00:43.390 --> 00:00:44.109
你只要把它放下
you just pull it down.

14
00:00:44.109 --> 00:00:46.479
它开始运行它知道它应该做的一切
It starts running it and
it knows everything it's supposed to do.

15
00:00:46.479 --> 00:00:47.740
那是个黑盒对吧
It's a bit of a black box, right?

16
00:00:47.740 --> 00:00:50.369
我不知道它在车篷下面做什么
I don't know exactly what it's
doing underneath the hood,

17
00:00:50.369 --> 00:00:51.719
我只知道它是蒙古人的
I just know that it runs Mongo.

18
00:00:51.719 --> 00:00:52.366
太棒了
And that's great!

19
00:00:52.366 --> 00:00:55.670
我不想知道怎么跑蒙戈如果你知道怎么跑曼戈
Cuz I didn't wanna know how to run Mongo,
if you know how to run Mango,

20
00:00:55.670 --> 00:00:59.090
你真希望你不知道怎么跑蒙戈
you wish you didn't know how to run Mongo,
right, one of those things.

21
00:01:00.689 --> 00:01:06.680
它有，我要说成千上万个容器，对吧 ?
And it has, I'm gonna say thousands and
tenths of thousands of containers, right?

22
00:01:06.680 --> 00:01:10.936
你可以看到这里有来自甲骨文的官员
So you can see here it has
official ones from Oracle,

23
00:01:10.936 --> 00:01:14.825
有正式的 MySQL 库奇库 DB2吗
has an official MySQL one,
Couch Base, DB2?

24
00:01:14.825 --> 00:01:16.539
是否有人使用 DB2?
Does anyone use DB2?

25
00:01:16.539 --> 00:01:18.980
我爸是个 DB2 推销员那是真实的故事
My dad was a DB2 salesman,
that's true story.

26
00:01:18.980 --> 00:01:20.301
这就是为什么我在电脑周围长大的原因。
That's why I grew up around computers.

27
00:01:22.631 --> 00:01:25.692
我不知道为什么我认为有必要分享，但分享时间。
I don't know why I thought that was
necessary to share but it's sharing time.

28
00:01:25.692 --> 00:01:30.364
是的，你可以看到这里有什么东西。
[LAUGH] Yeah, you can see here
there's literally anything.

29
00:01:30.364 --> 00:01:35.872
所以如果我输入蒙戈你会看到蒙哥的正式人来了
So if I type Mongo, you'll see that the
official Mongo one comes up right here and

30
00:01:35.872 --> 00:01:40.829
你可以看到这个已经下载了一千万次了，所以几次。
you can see this has been downloaded
10 million times, so a few times.

31
00:01:43.090 --> 00:01:45.560
如果你愿意的话就可以为账户报名了
So feel free to sign up for
an account if you want to.

32
00:01:45.560 --> 00:01:47.030
它是免费的没有理由不去
It's free, there's no reason not to.

33
00:01:47.030 --> 00:01:47.939
我有一个
I have one.

34
00:01:47.939 --> 00:01:51.700
我已经出版了一个容器，我们今天将在课堂上使用。
And I have published one container which
we will be using during the class today.

35
00:01:53.900 --> 00:01:58.972
但如果我在这里说 " docker mongo : 3 " ，就像这样
But that's when if I go in here and
say docker mongo:3 like this,

36
00:01:58.972 --> 00:02:02.158
这就是我需要摆脱的地方
that's where, I need to get out of this.

37
00:02:02.158 --> 00:02:06.040
所以你现在可以和这个环境做了，所以我们可以安全地退出它。
So you can be done with this environment
now so we can safely exit out of it.

38
00:02:09.009 --> 00:02:09.590
所以就这样
Hence, just so

39
00:02:09.590 --> 00:02:12.514
你知道你是否退出了整个环境对吧
you know if you do exit out of it you've
thrown away the entire environment, right?

40
00:02:12.514 --> 00:02:15.150
因为容器一旦关闭就会消失在醚中
Because containers, once you close them,
disappear into the ether,

41
00:02:15.150 --> 00:02:16.250
他们什么都没救
they don't save anything.

42
00:02:18.479 --> 00:02:19.657
让我们来看看
So let's just see,

43
00:02:19.657 --> 00:02:24.026
如果您输入 Docker ps ，那么它会显示所有正在运行的容器。
if you type docker ps it'll show you
all your containers that are running.

44
00:02:24.026 --> 00:02:26.534
如果 Docker 不工作，您会看到错误消息，
If your Docker is not working,
you'll see an error message,

45
00:02:26.534 --> 00:02:28.382
如果你想跑码头它会解决的
if you try to run docker ps,
it'll fix that.

46
00:02:30.406 --> 00:02:35.346
如果我说码头拉风 3 它就会
And if I say docker
pull mongo:3 it's gonna

47
00:02:35.346 --> 00:02:39.508
可以从 Docker 集线器中获取此信息，对吗 ?
go get this off of Docker hub, right?

48
00:02:39.508 --> 00:02:40.810
会看起来像这样
It'll look something like this.

49
00:02:45.959 --> 00:02:48.112
你可以再看一次我只是提醒你
So you can see, again,
I'm just reminding you,

50
00:02:48.112 --> 00:02:49.870
有些容器挺大的
some of these containers are quite big.

51
00:02:49.870 --> 00:02:52.289
这个是 117 兆字节。
This one is 117 megabytes.

52
00:02:54.409 --> 00:02:57.670
所以让这个在背景中跑出来，好，再，
So let that run in the background for
a little bit, so yeah, again,

53
00:02:57.670 --> 00:03:01.240
有 Docker 容器可以做任何事对吗
there's Docker containers for
just about anything, right?

54
00:03:01.240 --> 00:03:03.930
有个节点，有个给鲁比，还有一个。
There's ones for node, there's ones for
Ruby, there's one for Go.

55
00:03:03.930 --> 00:03:07.566
只有你能想象出的任何东西
There's just about anything you can
imagine someone's probably built

56
00:03:07.566 --> 00:03:09.242
一个 Docker 容器，对吗 ?
a Docker container for, right?

57
00:03:09.242 --> 00:03:12.317
当你需要一个模块时就像节点一样
It's like node when you're writing
something if you need a module,

58
00:03:12.317 --> 00:03:15.719
机会是有人写的模块，你可以在 npm 上安装。
chances are someone's written that
module and you can just npm install it.

59
00:03:15.719 --> 00:03:19.060
在这种情况下，我们可以为此使用 Docker Hub 。
In this case,
we can use Docker Hub for this.

60
00:03:19.060 --> 00:03:23.780
所以在你开始建造自己的个体容器之前
So before you start going and building
your own bespoke artisanal containers,

61
00:03:23.780 --> 00:03:25.849
检查 Docker Hub 是否首先具有此信息。
check out to see if
Docker Hub has it first.
