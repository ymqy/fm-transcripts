WEBVTT

1
00:00:00.074 --> 00:00:01.949
现在我们来试试 Podman 吧
So let's try Podman now.

2
00:00:01.949 --> 00:00:04.317
我们要从 Buildah 搬到波德曼
We're gonna move on from
Buildah into Podman.

3
00:00:07.754 --> 00:00:09.009
下面是下一节
Which is the next section here.

4
00:00:11.210 --> 00:00:15.699
所以现在我想运行这个容器，我想让它把 3000 口暴露在我
So now I want to run this container and
I want it to expose port 3000 just like I

5
00:00:15.699 --> 00:00:19.379
正在执行 Docker run 节点 Web Service，对吗 ?
was doing Docker run node web service,
right?

6
00:00:19.379 --> 00:00:24.859
在这里，你会发现这个容器上也安装了 podman 。
So here, you'll notice that podman is also
installed on this particular container.

7
00:00:24.859 --> 00:00:28.140
但如果你需要安装它，我就会给你说明如何做到这一点。
But if you need to install it, I left you
instructions on how to do that as well.

8
00:00:29.460 --> 00:00:33.560
所以我要做的就是我要说波德曼跑了
So what I'm going to do here is
I'm going to say podman run,

9
00:00:33.560 --> 00:00:36.390
这个你要给它群经理吧
this one you have to give
it a cgroup manager, right?

10
00:00:36.390 --> 00:00:39.320
对于控制组，因为缺省情况下不一定有控制组。
For the control groups because it
doesn't necessarily have one by default.

11
00:00:39.320 --> 00:00:42.064
Docker 是这样做的
Whereas Docker does, so

12
00:00:42.064 --> 00:00:47.164
我要说 cgroup-manager ， cgroupfs。
I'm gonna say cgroup-manager, cgroupfs.

13
00:00:47.164 --> 00:00:53.950
然后我要告诉它 -p 3000:3000，它将为我们展示这个港口。
And then I'm gonna tell it -p 3000:3000,
which is going to expose that port for us.

14
00:00:55.450 --> 00:01:04.040
然后我要告诉它看看 localhost/my-app-buildah。
And then I'm gonna tell it to
look on localhost/my-app-buildah.

15
00:01:04.040 --> 00:01:07.057
要不我不告诉它本地的主机它就出去试试
Otherwise if I don't tell it the local
host part, it's gonna go out and try and

16
00:01:07.057 --> 00:01:08.719
在 Docker Hub 上查找或类似的内容。
find on Docker Hub or something like that.

17
00:01:11.109 --> 00:01:14.786
好吧那波德曼会为我们做这个容器
Okay and then this will have Podman
execute this container for us.

18
00:01:17.492 --> 00:01:18.075
然后你就可以了
And there you go.

19
00:01:18.075 --> 00:01:19.769
您可以看到这一情况现在正在运行。
You can see that this is now running.

20
00:01:19.769 --> 00:01:25.655
如果我点击这里，打开链接就可以了。
If I click here,
Open Link And there you go.

21
00:01:25.655 --> 00:01:29.545
这将在该 Buildah 容器内运行我们的节点服务，
This is running our node service
inside of that Buildah container,

22
00:01:29.545 --> 00:01:31.129
我暴露了这个港口
which I exposed that port.

23
00:01:31.129 --> 00:01:34.808
然后波德曼就是那个在 Docker 里执行的容器
And then Podman is actually the one
executing that container within the Docker

24
00:01:34.808 --> 00:01:35.430
容器。
container.

25
00:01:38.040 --> 00:01:40.365
我知道这事有很多层面的，对吧 ?
I recognize that there's a lot
of levels to this, right?

26
00:01:40.365 --> 00:01:43.259
这就是野兽的本性抱歉
Which is kind of the nature of the beast,
sorry.

27
00:01:43.259 --> 00:01:45.932
我没告诉你 Buildah 和 Podman 比 Docker 好
I'm not telling you that Buildah and
Podman are any better than Docker.

28
00:01:45.932 --> 00:01:49.500
我不告诉你 Docker 比 Buildah 和 Podman 好
I'm not telling you that Docker is
any better than Buildah and Podman.

29
00:01:49.500 --> 00:01:53.364
有各种不同的用例，其中一个可能更适用于您。
There are various different use cases
where one might be better for you.

30
00:01:53.364 --> 00:01:57.033
请记住，不仅仅是 Buildah ， Podman 和 Docker。
And keep in mind that there's more than
just Buildah and Podman and Docker.

31
00:01:57.033 --> 00:01:59.141
还有像火箭一样的东西
There's also things like Rocket, right,

32
00:01:59.141 --> 00:02:01.543
火箭是另一个类似的
Rocket's another one
that does similar things.

33
00:02:01.543 --> 00:02:03.635
它来自 CoreOS ，效果很好。
And it's from CoreOS and
it works really well.

34
00:02:03.635 --> 00:02:07.584
有一堆不同引擎的容器
There's a bunch of different engines for
containers.

35
00:02:09.425 --> 00:02:11.905
如果你要开始的话我猜你是
If you're just getting starting out,
which I'm guessing you are,

36
00:02:11.905 --> 00:02:15.125
如果你在看这个课程我会建议把它贴在 Docker上
if you're watching this course,
I'd recommend sticking to Docker.

37
00:02:15.125 --> 00:02:17.305
Docker 的美好之处在于它已经存在
The nice thing about Docker
is it's been around for so

38
00:02:17.305 --> 00:02:19.872
有那么多人使用它你可以用谷歌
long and there's so many people
using it that you can Google for

39
00:02:19.872 --> 00:02:21.822
任何事情都会发生在网上
anything and
it's going to be on the Internet.

40
00:02:21.822 --> 00:02:25.097
别人会有你的问题就能解决的对吧
Someone else is going to have your problem
and it's gonna be able to be fixed, right?

41
00:02:25.097 --> 00:02:28.044
虽然 Buildah 和 Podman有一个，但它们还是很新的。
Whereas Buildah and Podman,
one, they're still quite new.

42
00:02:28.044 --> 00:02:29.883
所以他们还在改变很多
So they're still changing a lot.

43
00:02:29.883 --> 00:02:35.026
没有那么多文件来支持它。
And there's just not as much
documentation out there for it.

44
00:02:35.026 --> 00:02:37.680
所以当你选择的时候记住这一点
So keep that in mind when you're choosing.

45
00:02:41.896 --> 00:02:46.706
所以其他一些很酷的东西，我认为是很酷的。
So something else that's pretty cool,
that I think is pretty cool.

46
00:02:46.706 --> 00:02:49.586
实际上可以使用 Buildah ，就像
You can actually use Buildah,
so just pretend for

47
00:02:49.586 --> 00:02:54.194
第二个我在 Linux 电脑上，或者我在 WSL 或者类似的地方。
a second that I was on a Linux computer or
I was here in WSL or something like that.

48
00:02:54.194 --> 00:02:59.199
实际上，我可以将 Buildah 推送到我的本地 Docker 注册表。
I can actually have Buildah push into
my Docker registry, my local one.

49
00:02:59.199 --> 00:03:02.754
然后，我可以使用 Docker 来执行 Buildah 容器，
And then I can use Docker to
execute the Buildah container which

50
00:03:02.754 --> 00:03:03.902
真的很酷
is really cool too.

51
00:03:03.902 --> 00:03:08.252
所以，这些事情在我们的共同努力下是非常好的。
So again, those things work really
well together side by side.

52
00:03:08.252 --> 00:03:09.580
所以我就把指挥留在那里了
So I actually left the command in there.

53
00:03:09.580 --> 00:03:13.032
如果你和 Linux 合作，我会在这里展示给你们看。
If you're working with Linux,
and I'll show you here.

54
00:03:16.144 --> 00:03:18.841
在波德曼这里
Down here in Podman.

55
00:03:18.841 --> 00:03:21.984
所以如果你这样做了，在同一层面上就有 Docker ，对，
So if you ran this and
you had Docker on the same level, right,

56
00:03:21.984 --> 00:03:26.051
这在我的 Mac OS 上是不行的因为它在一个容器里
this wouldn't work in my Mac OS one right
now because it's within a container.

57
00:03:26.051 --> 00:03:29.519
所以它实际上看不到 Docker。
So it actually can't see Docker.

58
00:03:29.519 --> 00:03:32.396
如果我说 buildah push localhost/my-app-buildah
If I say buildah push
localhost/my-app-buildah

59
00:03:32.396 --> 00:03:35.151
docker-daemon-my-app-buildah:latest 。
docker-daemon-my-app-buildah:latest.

60
00:03:35.151 --> 00:03:38.355
这实际上会将它推送到我的 Docker 容器中。
This would actually push it
into my Docker container.

61
00:03:38.355 --> 00:03:41.609
我想你需要做的就是
I think what you need to do is you need to

62
00:03:41.609 --> 00:03:46.001
在容器中显示 Docker 守护程序。
expose the Docker daemon
inside of the container.

63
00:03:46.001 --> 00:03:47.552
所以我要退出了
So I'm gonna exit out of this.

64
00:03:51.716 --> 00:03:55.427
我们要把这个变得更复杂
We've gotta make this
even more complicated.

65
00:03:55.427 --> 00:03:59.735
我们会说
We're gonna say

66
00:03:59.735 --> 00:04:08.042
-v /var/run/docker.sock
-v /var/run/docker.sock

67
00:04:08.042 --> 00:04:16.658
:/var/run/docker.sock。
:/var/run/docker.sock.

68
00:04:16.658 --> 00:04:19.733
好了现在我应该可以过来说
Okay, now I should be able
to come here and say,

69
00:04:25.766 --> 00:04:30.468
回到 Buildah 的时候我把它的所有注册表都杀了
Back here in Buildah cuz I killed
all the the registry that it had.

70
00:04:30.468 --> 00:04:33.028
所以我要重建这个内置的容器。
So I have to rebuild
the buildah container.

71
00:04:33.028 --> 00:04:42.627
所以我要说的是 buildah， bud -f ./Dockerfile
So I'm gonna say buildah,
bud -f ./Dockerfile

72
00:04:49.081 --> 00:04:49.999
我在哪儿
Where am I?

73
00:04:49.999 --> 00:04:51.300
我必须在一个消息来源的内部
I have to be inside of a source.

74
00:04:53.040 --> 00:04:58.247
好的， buildah bud -f
Okay, buildah bud -f

75
00:04:58.247 --> 00:05:02.908
./Dockerfile -t
./Dockerfile -t

76
00:05:02.908 --> 00:05:08.394
我的应用程序 - buildah...
my-app-buildah..

77
00:05:08.394 --> 00:05:14.802
好吧那就建
Okay, that'll build

78
00:05:14.802 --> 00:05:21.213
我的 Docker 容器。
my Docker container.

79
00:05:21.213 --> 00:05:23.012
现在，我意识到我给了它一个体积。
And now, I actually realize
that I gave it a volume.

80
00:05:23.012 --> 00:05:25.093
所以它确实在运行之间保持了这种关系。
So it actually did keep this between runs.

81
00:05:29.250 --> 00:05:32.273
但尽管如此，一切都应该起作用。
But nonetheless, okay,
that should all work.

82
00:05:32.273 --> 00:05:34.101
这都是储存的
That's all stored.

83
00:05:34.101 --> 00:05:39.045
然后就在这里，如果我说， buildah push，就应该工作了，
And then here,
it should work if I say, buildah push,

84
00:05:39.045 --> 00:05:43.028
好的我们可以把它推给一个注册中心
right, cuz we can push
it out to a registry.

85
00:05:43.028 --> 00:05:47.665
Localhost/my-app-buildah ，因此
Localhost/my-app-buildah, so

86
00:05:47.665 --> 00:05:51.555
我在推那个集装箱
I'm pushing that container.

87
00:05:51.555 --> 00:05:55.742
我们要把它推到
And we're going to push it to

88
00:05:55.742 --> 00:06:02.730
docker-dae:my app-buildah:latest 。
the docker-dae:my app-buildah:latest.

89
00:06:08.360 --> 00:06:10.954
所以现在我打开了那个连接
So now because I opened that connection,

90
00:06:10.954 --> 00:06:15.420
在 Docker 主机和容器之间进行绑定安装。
that bind mount between my Docker host and
into the container.

91
00:06:15.420 --> 00:06:18.360
现在 Buildah 可以从集装箱里
Now Buildah can actually
push out of the container

92
00:06:18.360 --> 00:06:21.790
Docker 桌面的本地 Docker 注册表运行。
into my local Docker registry
of Docker desktop running.

93
00:06:21.790 --> 00:06:26.598
然后我就能执行这个内置容器
And then I'm going to be able to
execute this buildah container

94
00:06:26.598 --> 00:06:30.148
在 Docker的主机内部。
outside of the inside of
the host with Docker.

95
00:06:34.182 --> 00:06:38.303
所以你在这里看到的是它在复制容器
So what you see here this is
actually it copying the container,

96
00:06:38.303 --> 00:06:40.807
在容器外和 Docker中使用。
out of the container and into Docker.

97
00:06:45.552 --> 00:06:49.576
这不可能是网络，对，就在我的容器里。
This isn't going to the network, right,
this is just staying within my container.

98
00:06:49.576 --> 00:06:56.725
所以现在我该说，码头跑了，注意了
So now I should be able to say,
docker run, and notice

99
00:06:56.725 --> 00:07:01.516
就在我的 MAC里面，对，我现在不在集装箱里面。
this is just inside of my MAC, right,
I'm not inside of the container now.

100
00:07:01.516 --> 00:07:06.454
- it - app-buildah
-it my-app-buildah

101
00:07:06.454 --> 00:07:11.819
巴什和你走
bash and here you go.

102
00:07:11.819 --> 00:07:15.430
我现在正在运行我使用 Buildah 构建的 Docker 容器
I am now inside of the container running
Docker that I built with Buildah

103
00:07:17.720 --> 00:07:18.550
还有同样的事
and same thing here.

104
00:07:18.550 --> 00:07:23.454
如果我说我的 app - app -buildah 和
If I say my-app-buildah and

105
00:07:23.454 --> 00:07:28.757
我说 -p 3000:3000。
I say -p 3000:3000.

106
00:07:28.757 --> 00:07:33.433
这应该执行我的节点。
This should execute my node.

107
00:07:33.433 --> 00:07:36.314
这事已经有点不对劲了
Something's already bound on that.

108
00:07:36.314 --> 00:07:38.639
所以还是说 3001吧。
So let's just say 3001.

109
00:07:46.362 --> 00:07:50.228
所以现在我来这里说当地的主机 3001。
So now if I come over here and
say local host 3001.

110
00:07:53.678 --> 00:07:57.911
现在，我实际上正在运行我使用 Buildah 工具链构建的节点服务器，
Now I'm actually running the node server
that I built with the Buildah tool chain,

111
00:07:57.911 --> 00:07:59.494
但我要用 Docker 来完成它
but I'm using Docker to do it.

112
00:07:59.494 --> 00:08:03.242
因此，这证明了 Buildah 不构建 Docker 的观点
So this is kind of proving my point
that Buildah does not build Docker

113
00:08:03.242 --> 00:08:05.889
容器内置 OCI 容器，对吗 ?
containers it builts OCI containers,
right?

114
00:08:05.889 --> 00:08:07.769
但两者都是交替工作的。
But they both work interchangeably.

115
00:08:07.769 --> 00:08:09.689
我可以构建 Docker 容器。
And I could build a Docker container.

116
00:08:09.689 --> 00:08:12.435
我也可以用波德曼来执行
And I could use Podman
to execute that as well.

117
00:08:14.791 --> 00:08:16.562
所以这很酷
So that's pretty cool.

118
00:08:16.562 --> 00:08:17.957
我没想到会这么做
I did not expect that to work.

119
00:08:17.957 --> 00:08:21.639
我要重新强调一个人可能会问的问题
I'm gonna re-emphasize the point
that someone might ask,

120
00:08:21.639 --> 00:08:25.199
我为什么要立即在 Docker 上使用 Buildah 和 Podman ?
why would I use Buildah and
Podman over a Docker right now?

121
00:08:25.199 --> 00:08:29.759
我认为最真正的原因是不使用 Docker。
And I think the real strongest
reason is to not use Docker.

122
00:08:29.759 --> 00:08:33.830
一些人可能对他们为什么不想使用 Docker表示强烈的意见。
And some people might have strong opinions
of why they would not wanna use Docker.

123
00:08:33.830 --> 00:08:35.769
我不知道他们是什么
I don't necessarily know what they are.

124
00:08:35.769 --> 00:08:39.334
但它确实鼓励良性竞争使用其中一些竞争对手，
But it does encourage healthy competition
to use some of these competitors and

125
00:08:39.334 --> 00:08:40.905
而不是被锁定在一个生态系统里
not be locked into one ecosystem.

126
00:08:40.905 --> 00:08:44.966
所以，不是我觉得 Docker 是坏人，我觉得其实是在做
So,not that I think Docker are bad people,
I think actually they're doing really

127
00:08:44.966 --> 00:08:47.932
他们都是社会的好成员
great things and
they're good members of the community so.
