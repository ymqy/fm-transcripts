WEBVTT

1
00:00:25.660 --> 00:00:28.347
所以，我们首先要做的就是创建一个新的文件。
So the first thing we do is I
will say Create a new file.

2
00:00:28.347 --> 00:00:32.265
在静态资产项目中，我将调用它 Docker 文件。
Here in the static assets project,
I'm gonna call it Docker file.

3
00:00:35.289 --> 00:00:41.164
所以我要在这里说，我们要做一些版本的节点。
So here I'm gonna say FROM and
we're gonna do some version of node.

4
00:00:41.164 --> 00:00:43.957
12 号吧我想我的笔记里有最新的
Let's do 12-stretch,
I think I have latest in my notes, but

5
00:00:43.957 --> 00:00:45.579
你可以为所欲为
you can do it from whatever you want.

6
00:00:46.929 --> 00:00:49.100
让我们从 12 岁开始做我们一直在做的事
Let's do it from 12 stretch,
cuz that's what we've been doing.

7
00:00:50.640 --> 00:00:55.189
给它一个工作目录，让我们称之为 / 应用，或者任何你想说的。
Give it a working directory, let's call
it /app or whatever you wanna call it.

8
00:00:55.189 --> 00:00:58.350
我要和 / 应用
I'm gonna go with /app.

9
00:00:58.350 --> 00:01:01.890
复制所有内容复制点点
Copy everything, copy dot dot,

10
00:01:01.890 --> 00:01:06.319
我们要跑了 NPMCI对吧
and we're gonna do run, NPMCI, right?

11
00:01:06.319 --> 00:01:07.986
要安装我们的依赖关系。
To install of our dependencies.

12
00:01:07.986 --> 00:01:11.537
从技术上来说你可以再在这个下面跑了
And then you could technically
have another run underneath this.

13
00:01:11.537 --> 00:01:16.066
一般情况下，我有多个顺序的东西在运行，对吧 ?
In general when I have multiple
sequential things running, right?

14
00:01:16.066 --> 00:01:20.430
他们都完成了同样的事情，我就做，对吧 ?
And they're all accomplishing relatively
the same thing, I'll just do and, right?

15
00:01:20.430 --> 00:01:23.379
这个还有这个还有这个，对吧 ?
So do this and this and
this and this, right?

16
00:01:23.379 --> 00:01:25.852
这件事对你有多大的帮助，对吧 ?
What's nice about that is that
gets made into one layer, right?

17
00:01:25.852 --> 00:01:28.912
所以它得到了整体的缓存，总体来说，
So it gets cached all together,
which is in general,

18
00:01:28.912 --> 00:01:31.637
你要找的是什么样的行为
what the kind of behavior
you're looking for.

19
00:01:31.637 --> 00:01:37.264
所以我要说恩普，跑，建，对吧 ?
So here I'm going to say nmp,
run, build, right?

20
00:01:37.264 --> 00:01:40.585
库兹我想做最后的项目
Cuz I try like build
out the final project.

21
00:01:40.585 --> 00:01:44.245
所以让我们做个简单的
So let's do this as bulid,

22
00:01:44.245 --> 00:01:48.710
或者类似的东西对吧
or something like that, right?

23
00:01:48.710 --> 00:01:51.634
我们会叫它的建造者来玩
We'll call it builder for fun.

24
00:01:51.634 --> 00:01:56.698
那第二个呢我们就从
So for the second one, we're gonna do FROM

25
00:01:56.698 --> 00:02:01.206
nginx 和我说 1.17是吧
nginx and I said, 1.17, right?

26
00:02:01.206 --> 00:02:03.603
但你完全可以从阿尔派恩来的
But you can totally do this from Alpine,
you can do it from LaTeX,

27
00:02:03.603 --> 00:02:04.569
这对你有多好
that's kind of up to you.

28
00:02:05.870 --> 00:02:08.781
现在我们要做的就是把它从以前的
And now all we need to do is we
need to copy it from the previous

29
00:02:08.781 --> 00:02:11.478
我之前跟你说过的
one into the directory that
I told you before, right?

30
00:02:11.478 --> 00:02:15.360
所以我要说 " COPY"
So I'm gonna say COPY.

31
00:02:15.360 --> 00:02:17.789
我们现在可以创造一个用户和所有这些东西。
And we could create a user and
all that kind of stuff now.

32
00:02:17.789 --> 00:02:20.710
现在让我们忽略一切吧我们都是从根来的
For now let's just ignore,
let's just all do it from root.

33
00:02:20.710 --> 00:02:25.079
所以我要说 FROM =建造者
So I'm gonna say --FROM =builder.

34
00:02:25.079 --> 00:02:28.310
我们会从 /app/build 对吧
And we're gonna do it
from /app/build right?

35
00:02:28.310 --> 00:02:30.420
这就是它能进入的地方对吧
That's where it gets build into, right?

36
00:02:30.420 --> 00:02:38.186
我们会把它复制到 /user/share/nginx/html中。
And we're gonna copy that
into /user/share/nginx/html.

37
00:02:42.235 --> 00:02:45.290
再一次，我告诉过你不要放进一个命令，因为如果你把它放进去，
And again, I told you not to put in
a cmd because if you put in the cmd,

38
00:02:45.290 --> 00:02:47.828
那你就会覆盖些 nginx 的事了
then you're gonna overwrite
what nginx ones is doing.

39
00:02:47.828 --> 00:02:52.326
我们不想这么做我们想让内克斯来处理所有的想法
We don't wanna do that,
we want nginx to handle all the thinks So

40
00:02:52.326 --> 00:02:55.694
就是这样，现在应该是工作了，来试试吧。
that's it, now this should work,
so let's try it.

41
00:02:59.525 --> 00:03:01.329
那我们在哪儿
So where are we?

42
00:03:01.329 --> 00:03:04.234
我们在静态资产项目中。
We are in static-assets-project.

43
00:03:04.234 --> 00:03:09.040
所以我要说码头工人的建筑
So I'm gonna say docker build-t,
let's just

44
00:03:09.040 --> 00:03:14.098
就像静态应用程序之类的
call this like static app or
something like that.

45
00:03:14.098 --> 00:03:20.734
我们应该能够建造，这将会有第二次的反应，要永远做下去。
We should be able to build, this will take
a second cuz react takes forever to build.

46
00:03:20.734 --> 00:03:24.250
我应该说，它是 Web 包， Web 包要永久构建。
I should say, it's web pack,
web pack takes forever to build.

47
00:03:24.250 --> 00:03:26.759
但它会同时运行这两个命令，安装资产。
But it's gonna run both of those commands,
the install the assets.

48
00:03:26.759 --> 00:03:28.471
当它完成后它就会继续
And then as soon as it's done with
that then it's gonna go ahead

49
00:03:28.471 --> 00:03:28.997
并运行我们的建筑
and run our build.

50
00:03:28.997 --> 00:03:33.783
它将输出我们的构建目录。
It's gonna output our build directory.

51
00:03:36.795 --> 00:03:40.201
你知道我在这里做了什么我没意识到
You know what I did in here,
which I didn't realize it,

52
00:03:40.201 --> 00:03:41.805
这还会有效的
this is still gonna work.

53
00:03:41.805 --> 00:03:45.152
你可以在这里看到它现在已经进入了节点 -- 我们走了。
You can see here it's going into
node-sass now, there we go.

54
00:03:45.152 --> 00:03:49.902
现在我们终于进入了建筑过程
Now we're finally into the build process.

55
00:03:49.902 --> 00:03:54.412
但是当它这样做的时候，我从建筑商得到了它的权利。
But while it's doing that,
I got it right from builder.

56
00:03:54.412 --> 00:03:56.906
你也可以从零开始，那是完全可以的。
You can also put from zero here as well,
that would totally work.

57
00:03:56.906 --> 00:03:59.856
这就是我在笔记中所拥有的
And that's what I have in my notes.

58
00:03:59.856 --> 00:04:06.403
好吧那就建了
All right, so that built, And

59
00:04:06.403 --> 00:04:12.212
所以现在要做的是从 nginx 开始下载对吧
so now what's gonna do is,
it's gonna go download from nginx, right?

60
00:04:14.921 --> 00:04:18.230
看来我的电脑上没有它所以它会很快的
Looks like I don't have it on my computer,
so it's gonna go do that really quick.

61
00:04:18.230 --> 00:04:23.173
看起来大概有五十多兆字节
Looks like it's about 50 odd megabytes.

62
00:04:23.173 --> 00:04:27.839
然后把所有东西都复制到那个目录好吗
And then it copied everything from
builder into that directory, okay?

63
00:04:27.839 --> 00:04:30.610
现在我们有了自己的容器。
So now we have our built container.

64
00:04:30.610 --> 00:04:36.855
所以我们要说的是 docker run-P 或者短划线小写 p
So what we're gonna say is, docker run-P,
or dash lower case p rather,

65
00:04:36.855 --> 00:04:42.822
抱歉 8080 您可以在任何要访问的端口上运行此程序。
sorry, 8080, which you can run
this on any port that you want to.

66
00:04:42.822 --> 00:04:46.725
但第一个是主机端口但它会在 80 端口上运行
But the first one's gonna be the host
port, but it is gonna be run on port 80

67
00:04:46.725 --> 00:04:49.593
因为那是 nginx 在默认情况下运行的，对吧 ?
because that's what nginx
runs on by default, right?

68
00:04:49.593 --> 00:04:54.843
我们要从 80 到 80 80 在本地电脑里
So we're gonna go from 80 to 8080
in our local computer, okay?

69
00:04:54.843 --> 00:04:57.461
然后我们要做静态应用
And then we're gonna do static-app.

70
00:04:59.238 --> 00:05:03.302
让我们去看看这是否有用， localhost 8080。
So let's go see if that works,
localhost 8080.

71
00:05:07.153 --> 00:05:11.115
Lo 和 behold，您的应用程序现在正在运行，但这是 nginx 提供的服务，对吗 ?
Lo and behold, your app is now running,
but this is being served by nginx, right?

72
00:05:11.115 --> 00:05:12.387
那么，这又有什么困难呢 ?
So what was hard about that?

73
00:05:12.387 --> 00:05:13.677
你跟什么搏斗了
What did you struggle with?

74
00:05:15.221 --> 00:05:18.773
> > 我们没有忘记需要工作，
&gt;&gt; For us it was not forgetting
that there needs to be working,

75
00:05:18.773 --> 00:05:22.404
以指定工作目录并复制所有文件。
to specify the working directory and
copying all the files.

76
00:05:22.404 --> 00:05:23.024
你懂我的意思吗
You know what I mean?

77
00:05:23.024 --> 00:05:26.132
就像这样一种想法，就像一个空的容器
Like it's kind of like this idea that,
this is basically like an empty container

78
00:05:26.132 --> 00:05:28.062
你得给它带点东西来
you need to bring something in for
it to work with.

79
00:05:28.062 --> 00:05:28.567
> > Mm - m. > 因此
&gt;&gt; Mm-hm.
&gt;&gt; So

80
00:05:28.567 --> 00:05:30.202
有一点断开连接。
there was a little bit of disconnect.

81
00:05:30.202 --> 00:05:33.230
所以其他的都是很清楚的。
So everything else was were very spot on.

82
00:05:33.230 --> 00:05:34.324
只是那个部分
Just that particular part.

83
00:05:34.324 --> 00:05:38.091
因此，当它尝试构建时，我找不到索引文件。
So then as it was trying to build,
I can't find the index file.

84
00:05:38.091 --> 00:05:38.887
我找不到指令
I can't find the directives.

85
00:05:38.887 --> 00:05:40.158
>> 有道理。
&gt;&gt; That makes sense.

86
00:05:40.158 --> 00:05:40.689
嗯。
Yeah.

87
00:05:40.689 --> 00:05:42.343
> > 就好像我什么都没有
&gt;&gt; It's like I don't have anything.

88
00:05:42.343 --> 00:05:44.976
> > ，那肯定是个问题。
&gt;&gt; Yep,
that would definitely be a problem.

89
00:05:44.976 --> 00:05:47.884
希望这一切至少是有道理的如果我们回去再做一次
Hopefully this all at least makes sense,
and if we went back and did it again,

90
00:05:47.884 --> 00:05:48.889
你就能做到了
you would be able to do it.

91
00:05:51.223 --> 00:05:56.036
所以，现在我们只是在使用 nginx 为我们提供的一些缺省配置文件。
So, right now we're just using some
default config file that nginx has for us.

92
00:05:56.036 --> 00:05:58.379
您还可以在 nginx 配置中进行复制，并且
You can also copy in
an nginx configuration, and

93
00:05:58.379 --> 00:06:01.367
然后修改您的 nginx 配置。
then modify your nginx configuration
to however you want to.

94
00:06:01.367 --> 00:06:03.151
它让你也能做到这一点。
It allows you to do that as well.

95
00:06:03.151 --> 00:06:06.365
现在我们不会那么做了，因为我不知道如何配置 nginx 和
Now we're not gonna do that one, because
I don't know how to configure nginx and

96
00:06:06.365 --> 00:06:07.553
我不确定是否有很多人
I'm not sure many people do.

97
00:06:07.553 --> 00:06:09.302
[ LAUGH]. Nginx 很难配置，
[LAUGH].
Nginx is hard to configure,

98
00:06:09.302 --> 00:06:11.375
这就是它的长度和长度
that's the long and the short of it.

99
00:06:11.375 --> 00:06:13.122
[ 笑声 ]
[LAUGH].

100
00:06:13.122 --> 00:06:16.464
所以我们要去做点更多的事情
So we're actually gonna go and
do some more stuff with nginx here in just

101
00:06:16.464 --> 00:06:19.764
第二个，向你们展示我们如何更简单的实现这一点。
a second, to show you how we can
actually even make this even simpler.

102
00:06:19.764 --> 00:06:24.309
我们可以直接运行 nginx 容器而不需要建造它
We can actually run the nginx container
directly without even building it,

103
00:06:24.309 --> 00:06:25.879
也挺有趣的
which is kind of fun as well
