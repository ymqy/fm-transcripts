WEBVTT

1
00:00:00.110 --> 00:00:01.290
&gt；&gt；steve kinney：这里有一个问题，对吗？
&gt;&gt; Steve Kinney: There is a issue here,
right?

2
00:00:02.509 --> 00:00:08.929
我只需要解决这个问题，因为我在保持我的状态在领域，对吗？
I only had to solve this problem because
I was keeping my state in the dom, right?

3
00:00:08.929 --> 00:00:12.230
在我可以变异之前，我必须去测量它。
I had to go measure stuff
before I could mutate it.

4
00:00:12.230 --> 00:00:17.910
我不再将我的数据保存在dom中，我写的是棱角或余烬或反应。
I don't keep my data in the dom anymore,
I write angular or ember or react.

5
00:00:17.910 --> 00:00:21.838
我把东西保持在状态，对吧？
I keep things in state, right?

6
00:00:21.838 --> 00:00:27.221
例如，你可以把一些像这样的组件放在一起
So you could for instance put together
some kind of component like this which

7
00:00:27.221 --> 00:00:32.740
保持跟踪，这是一半的组件，这是我可以放在屏幕上的东西。
keeps track and this is a half component,
it's what I could fit on a screen.

8
00:00:32.740 --> 00:00:35.570
我将保留我所有宽度的数组。
I'm gonna keep an array
of all of my width.

9
00:00:35.570 --> 00:00:38.369
我要在这里的页面下面拍摄他们
I'm gonna shoot them under
the page over here and

10
00:00:38.369 --> 00:00:40.549
然后我只需将这些数字翻倍并重新渲染。
then I will just double those numbers and
re-render.

11
00:00:40.549 --> 00:00:43.298
在此之前，您将不必阅读dom和
Before you would not have
to read from the dom and

12
00:00:43.298 --> 00:00:46.747
如果不从dom中阅读，你可以想写多少就写多少。
if don't read from the dom you
can write as much as you want.

13
00:00:46.747 --> 00:00:50.073
你永远不会有布局垃圾的问题，
You're never gonna have
a layout trashing issue,

14
00:00:50.073 --> 00:00:54.865
从来不是一个强有力的词，因为我给你看了一个，它是在反应中，但通常
never is a strong word cuz I showed you
one, it was in react, but generally

15
00:00:54.865 --> 00:01:00.457
说这个非常孤立的事件，应该可以解决我们所有的问题，对吧？
speaking this very isolated incident that
should solve all of our problems, right?

16
00:01:00.457 --> 00:01:05.228
所以让我们看看会发生什么，结果是我用这个React应用程序运行了一个React
So lets see what happens, it turns out I
have a React running with this React app

17
00:01:05.228 --> 00:01:07.701
跑步，还有同样的事情在进行。
running, with the same thing going on.

18
00:01:16.329 --> 00:01:19.888
&gt；&gt；steve kinney：我们可以测量它，我们可以比较差异。
&gt;&gt; Steve Kinney: And we can measure it,
we can compare the differences.

19
00:01:21.492 --> 00:01:28.421
&gt；&gt；steve kinney：那就去录制吧。
&gt;&gt; Steve Kinney: So
go ahead, do a recording.

20
00:01:36.353 --> 00:01:40.390
&gt；&gt；steve kinney：你可以看到，哇，这有点奇怪。
&gt;&gt; Steve Kinney: And you can see that,
wow, this is kinda weird.

21
00:01:40.390 --> 00:01:43.150
这里发生了很多事情。
There's a lot of stuff happening in here.

22
00:01:43.150 --> 00:01:43.890
那可不好。
That's not great.

23
00:01:43.890 --> 00:01:48.329
我告诉过你可以在用户计时API中获得反应信息。
I told you you can get React
information in the user timing API.

24
00:01:48.329 --> 00:01:53.150
所以你可以看到，这是协调反应树和应用程序更新，
So you can see, this is reconciling
the React tree and an app update,

25
00:01:53.150 --> 00:01:54.539
等等，对吧？
so on and so forth, right?

26
00:01:54.539 --> 00:01:57.930
这里发生了很多事情，57毫秒不是很好
There's a lot of stuff happening here and
57 milliseconds isn't great for

27
00:01:57.930 --> 00:01:59.189
换了一堆酒吧。
changing a bunch of bars.

28
00:02:00.840 --> 00:02:06.219
但事实证明我做的是最糟糕的事之一
But it turns out that I am
committing one of the worst

29
00:02:06.219 --> 00:02:11.490
Web性能中的犯罪，也就是，我在开发模式中使用REACT
crimes in web performance which is,
I'm using React in development mode and

30
00:02:11.490 --> 00:02:15.229
期望生产级别的性能。
expecting production level performance.

31
00:02:15.229 --> 00:02:16.620
React做了一大堆事情
React does a bunch of stuff.

32
00:02:16.620 --> 00:02:18.780
我之前告诉过你，测量需要时间。
I told you before, measuring takes time.

33
00:02:18.780 --> 00:02:21.379
所以React在开发模式下做了一大堆事情
So React is doing a whole bunch
of stuff in development mode

34
00:02:21.379 --> 00:02:24.490
给你这些漂亮的东西并管理一大堆东西。
to give you these pretty things and
manage a whole bunch of stuff.

35
00:02:24.490 --> 00:02:28.341
检查道具类型和所有这些东西，这些东西很慢。
And checking prop types and
all these things and that stuff is slow.

36
00:02:28.341 --> 00:02:33.026
因此，如果您有React Developer工具，有时您可以看到一个页面
And so if you have the React developer
tools sometimes you can see a page

37
00:02:33.026 --> 00:02:37.475
如果在生产模式下使用REACT，则这将是黑色的
where this will be black if it's
using React in production mode and

38
00:02:37.475 --> 00:02:42.090
如果在开发模式中使用，它将会像可怕的橙色一样。
it will be this like scary orange
if it's used in development mode.

39
00:02:42.090 --> 00:02:43.300
就像保持这样的乐趣一样，
As fun to like keep that going,

40
00:02:43.300 --> 00:02:46.650
只需访问仍在开发模式下运行的站点即可。
just go visit sites that are still
running in development mode.

41
00:02:46.650 --> 00:02:49.620
我是说，有时候我觉得
I mean, and it's like one of
the things sometimes I think

42
00:02:50.631 --> 00:02:54.610
说他们是故意的，我的意思是如果他们说了，那就意味着他们知道这件事
says they do it on purpose I mean if they
say it, that means they know about it and

43
00:02:54.610 --> 00:02:56.960
他们决定现在这是他们的新状态。
they've decided that that's
now their new state.

44
00:02:56.960 --> 00:03:01.969
对，有些网站完全是偶然的，有时候就像不知道
Right, some websites are totally doing it
by accident sometimes it's like don't know

45
00:03:01.969 --> 00:03:05.449
关于它，有时就像有人试图改变webpack的构建和
about it and sometimes it's like somebody
tried to change the webpack build and

46
00:03:05.449 --> 00:03:07.870
现在我们意外地发布了开发代码，对吗？
now we're accidentally shipping
the development code, right?

47
00:03:07.870 --> 00:03:09.599
这种情况已经在我的应用程序上发生过几次了。
This has happened to my app a few times.

48
00:03:09.599 --> 00:03:11.360
所以这真的很有帮助。
So this is really helpful.

49
00:03:11.360 --> 00:03:15.030
结果是57毫秒我们正在做所有这些额外的事情。
So it turns out 57 milliseconds
we're doing all of this extra stuff.

50
00:03:16.500 --> 00:03:18.170
这不是很好，对吧？
That's not great, right?

51
00:03:18.170 --> 00:03:20.400
所以让它处于开发模式是次优的。
So having it in development
mode is suboptimal.

52
00:03:21.430 --> 00:03:25.159
让我们实际比较一下它看起来是什么样子，因为事实证明我
Let's actually compare what that looks
like though, because it turns out that I

53
00:03:25.159 --> 00:03:29.819
在该存储库中也有此应用程序的一个版本，该版本是为构建的
also have a version of this app in
that repository that is built for

54
00:03:29.819 --> 00:03:30.560
生产方式。
production mode.

55
00:03:30.560 --> 00:03:35.585
所以让我们继续，实际上，
So let's go ahead and actually,

56
00:03:35.585 --> 00:03:39.716
我应该把它放在这里。
I should have it over here.

57
00:03:39.716 --> 00:03:44.219
同样的申请，我们再录一遍。
Same application, let's record it again.

58
00:03:49.490 --> 00:03:51.245
哇，这样好多了，对吧？
Wow, that's much better right?

59
00:03:51.245 --> 00:03:52.528
这是.让我们比较和对比。
That's...let's compare and contrast.

60
00:03:54.060 --> 00:03:56.129
巨大的悲伤黄色穗状物。
Giant spike of sad yellow.

61
00:03:58.870 --> 00:03:59.370
小肿块。
Little bump.

62
00:04:00.379 --> 00:04:04.479
好吧，简单的事实是处于开发模式
Alright, the simple fact of
being in development mode

63
00:04:04.479 --> 00:04:08.830
与生产模式有很大的不同。
is a huge difference
versus production mode.

64
00:04:08.830 --> 00:04:11.580
好的，现在你可以看到这里仍然有很多事情发生。
Right, now you can see there's still
a bunch of stuff happening here.

65
00:04:11.580 --> 00:04:13.689
这又是永恒的交易
And this is again the eternal trade for

66
00:04:13.689 --> 00:04:16.529
当涉及到使用框架时的性能，对吧。
performance when it comes to
using a framework, right.

67
00:04:16.529 --> 00:04:19.529
框架将在很多时候为您做出决策。
The framework is gonna make
decisions a lot of the time for you.

68
00:04:19.529 --> 00:04:22.430
它使您更容易使您的状态远离转储，就像帮助
It make it easier to keep your state
out of the dump which like helps

69
00:04:22.430 --> 00:04:24.100
您可以避免布局垃圾。
you avoid layout trashing.

70
00:04:24.100 --> 00:04:27.189
他们喜欢为你批处理所有转储的东西，但他们是JavaScript代码和
They like batch all your dump things for
you but they are JavaScript code and

71
00:04:27.189 --> 00:04:29.810
他们承担了一定数量的开销，对吗？
they take a certain
amount of overhead Right?

72
00:04:29.810 --> 00:04:31.800
这永远是你需要做的权衡。
And that is always
the tradeoff you need to make.

73
00:04:31.800 --> 00:04:36.310
我的信仰体系通常是这样的，特别是如果你有一个团队和
I am of the belief system that generally,
especially if you have a team and

74
00:04:36.310 --> 00:04:39.199
你有广泛的经验，你试图推出产品
you have a wide range of experiences and
you're trying to get product out

75
00:04:39.199 --> 00:04:43.350
使用框架的成本对你有益的门，对吗？
the door that the cost of using
a framework is beneficial for you, right?

76
00:04:43.350 --> 00:04:44.670
但如果你有一堆
But if you had a bunch of,

77
00:04:44.670 --> 00:04:48.165
如果你坐在那里，真的想微调你的应用程序，
if you sat there and really wanted
to fine tune your application,

78
00:04:48.165 --> 00:04:53.980
手工制作的应用程序可能会更快，但可能不值得。
hand-crafted application will probably be
faster But like, probably not worth it.

79
00:04:53.980 --> 00:04:56.370
但是，是的，你可以看到有一些开销。
But yeah,
you can see there is some overhead.

80
00:04:56.370 --> 00:04:59.220
但你可以看到，我们仍然在大约9.3毫秒。
But you can see that we're still at like,
9.3 milaseconds.

81
00:04:59.220 --> 00:05:01.060
我把这叫做胜利，对吧？
I'm gonna call this a win, right?

82
00:05:01.060 --> 00:05:03.233
这只是一些需要考虑和考虑的事情。
It's just something to consider and
something to think about.

83
00:05:08.401 --> 00:05:09.579
&gt；&gt；steve kinney：所以是的。
&gt;&gt; Steve Kinney: So yeah.

84
00:05:09.579 --> 00:05:12.079
友好的事实是，生产模式在反应中很重要。
Friendly fact,
production mode is important in React.

85
00:05:12.079 --> 00:05:14.110
我还有一张幻灯片稍后会再说一遍，
I have another slide that's
gonna say this again later,

86
00:05:14.110 --> 00:05:16.649
因为我真的犯过很多次这样的错误。
because I've literally made
this mistake multiple times.

87
00:05:16.649 --> 00:05:20.029
所以我觉得如果我不断重复我自己，你会想一想。
So I feel like if I keep repeating myself,
you will think about it.

88
00:05:20.029 --> 00:05:23.189
如果你不写REACTION，可能会有这样的版本
And if you don't write React,
there's probably a version of this for

89
00:05:23.189 --> 00:05:25.350
你的申请绝对值得一查。
your application and
is definitely worth checking.

90
00:05:25.350 --> 00:05:28.699
因为有一个9.3毫秒的戏剧性变化。
Cuz there was a dramatic
change of 9.3 milliseconds.

91
00:05:28.699 --> 00:05:30.290
我想第一件事是什么，但是
I figured what the first thing was, but

92
00:05:30.290 --> 00:05:33.949
那张图上的时间要长得多，悲伤也多得多。
it was a lot longer with a lot
more sadness in that graph.

93
00:05:33.949 --> 00:05:37.529
所以一定要确保你使用的是生产模式，不管它是什么。
So definitely make sure you're using
production mode for whatever it is.

94
00:05:37.529 --> 00:05:39.189
好的，酷。
All right, cool.

95
00:05:40.189 --> 00:05:46.518
So&gt；&gt；steve kinney：so
So
&gt;&gt; Steve Kinney: So

96
00:05:46.518 --> 00:05:49.884
它不是，反应能帮你解决问题吗？
it doesn't,
does React solve your problems for you?

97
00:05:49.884 --> 00:05:51.180
对吧？也许，也许不是，对吧？
Right?
Maybe, maybe not, right?

98
00:05:51.180 --> 00:05:55.000
你仍然可以看到我之前展示的幻灯片
You can still see that slide that
I showed earlier where I have

99
00:05:55.000 --> 00:05:57.110
一个React应用程序仍然有这个问题。
a React app that still has this problem.

100
00:05:57.110 --> 00:05:58.810
它不会让你一路走到那里。
It's not gonna get you all the way there.

101
00:05:58.810 --> 00:06:01.810
有一个框架是有帮助的，你仍然需要留心。
Having a framework is helpful,
you still need to be mindful.

102
00:06:01.810 --> 00:06:03.610
你还需要测量。
You still need to measure.

103
00:06:03.610 --> 00:06:05.680
是的，这些事情仍然可能发生。
Right and these things can still happen.

104
00:06:05.680 --> 00:06:08.439
我猜你的问题是你想的是什么
I assume with your question you're
thinking about like what was

105
00:06:08.439 --> 00:06:09.699
这个问题的答案。
the answer to this.

106
00:06:09.699 --> 00:06:10.220
我还不知道。
I don't know yet.

107
00:06:10.220 --> 00:06:10.759
我还没挖进去。
I haven't dug in.

108
00:06:10.759 --> 00:06:16.000
[笑]但是看起来我在简单的拖拽上有几个小问题
[LAUGHS] But looks like I've got a few
little issues here on the simple drag

109
00:06:16.000 --> 00:06:20.029
放入按钮，就像我测量了它，现在我可以继续并修复它。
in and drop in button and like I measured
it and now I can go ahead and fix it.

110
00:06:21.529 --> 00:06:25.310
所以这里的关键要点是不要混合读取布局属性和编写它们，
So kinda key takeaways here are don't mix
reading layout properties and write them,

111
00:06:25.310 --> 00:06:26.470
你会做不必要的工作。
you'll do unnecessary work.

112
00:06:27.689 --> 00:06:30.430
另外，如果您可以通过添加CSS类来更改某些内容，
Also, if you can just change
something by adding a CSS class,

113
00:06:30.430 --> 00:06:33.409
有点像回到那种风格的计算，我们根本不读那个。
kinda going back to that style
calculation, we don't read that at all.

114
00:06:33.409 --> 00:06:35.990
这一个，我们想要加倍一堆单独的酒吧。
This one, we want to double up
a bunch of individual bars.

115
00:06:35.990 --> 00:06:40.269
但是只要添加一个类，就会导致一次回流，但是
But with just adding a class,
you will cause one reflow, but

116
00:06:40.269 --> 00:06:43.290
你没有办法让自己进入那个循环。
there's no way that you can
get yourself into that loop.

117
00:06:43.290 --> 00:06:46.709
因此，如果您可以通过拥有一个CSS类来处理这个问题，该类的第二个状态是
So, if you can handle this by just having
a CSS class that has the second state that

118
00:06:46.709 --> 00:06:51.360
你想和尝试手工做和计算每件事相比，去做吧。
you want versus trying to do it by hand
and calculating everything, go for that.

119
00:06:51.360 --> 00:06:56.529
对你来说，这永远是更安全的选择。
That is always going to be
the safer option for you.

120
00:06:56.529 --> 00:07:00.899
在存储数据和存储器时，无论它是在REACT中，2i将它存储在状态中，
In storing data and memory, whether
it's in react,2I stored it in the state,

121
00:07:00.899 --> 00:07:02.339
在这种情况下，我之前给你看过。
in that case I showed you earlier.

122
00:07:02.339 --> 00:07:05.759
但就像，你知道，你可以很容易地把它放在内存中的某个地方，如果
But like, you know, you could easily just
keep it in array somewhere in memory if

123
00:07:05.759 --> 00:07:06.663
你是用手做的。
you were doing this by hand.

124
00:07:06.663 --> 00:07:11.310
没有反应，棱角分明，还有Ember，都是用JavaScript写的，对吧？
There's nothing React, and Angular, and
Ember, all written in JavaScript, right?

125
00:07:11.310 --> 00:07:13.540
使用这些框架可以做的任何事情，都可以自己做。
Anything you can do with those frameworks,
you could do on your own.

126
00:07:13.540 --> 00:07:16.000
例如，将所有这些宽度保留在一个数组中
Like, keeping all those widths in an array

127
00:07:16.000 --> 00:07:19.180
可能比一开始就把他们留在世界上更聪明，对吧？
was probably smarter than keeping
them in the dom to begin with, right?

128
00:07:19.180 --> 00:07:21.610
这并不总是你可以选择的，对吧？
That's not always an option that you have,
right?

129
00:07:21.610 --> 00:07:23.560
就像，当我编辑用户内容时，对吧，
Like, when I'm editing user content,
right,

130
00:07:23.560 --> 00:07:26.949
我并不总是那么奢侈，对吧？
I don't always have that luxury, right?

131
00:07:26.949 --> 00:07:28.589
所以无论哪种方式都要记住这一点。
So it's something to
keep in mind either way.

132
00:07:28.589 --> 00:07:29.598
你不需要一个框架。
You don't need a framework.

133
00:07:30.810 --> 00:07:33.639
你仍然可以做坏事，如果你有一个框架，就像我给你展示的那样。
You can do bad things still,
if you have a framework, as I showed you.

134
00:07:33.639 --> 00:07:35.340
我对此感到内疚。
I'm guilty of it.

135
00:07:35.340 --> 00:07:38.470
最后，主要的一点是你可能甚至不知道你的布局
And finally, the major point is you
might not even know that you're layout

136
00:07:38.470 --> 00:07:41.699
打，因为我没有，直到我去拍那个截图。
thrashing, cuz I didn't until I
went to take that screenshot.

137
00:07:41.699 --> 00:07:43.029
这有点像这个故事的寓意。
That's kinda like the moral of the story.
