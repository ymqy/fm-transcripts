WEBVTT

1
00:00:00.050 --> 00:00:02.040
&gt；&gt；steve kinney：所以如果我不多说一点就是疏忽了
&gt;&gt; Steve Kinney: So I would be
remiss if I didn't talk a little

2
00:00:02.040 --> 00:00:04.049
关于服务工人的一点。
bit about Service Worker.

3
00:00:04.049 --> 00:00:06.309
这是一个关于性能的研讨会。
This is a workshop on performance.

4
00:00:06.309 --> 00:00:09.769
我不打算太深入地讨论服务工作者，因为我们今天已经讨论了很多内容
I'm not gonna go too deep into Service
Worker because we've covered a lot today

5
00:00:09.769 --> 00:00:11.080
迈克·诺斯和
and Mike North and

6
00:00:11.080 --> 00:00:17.140
我做了一个为期两天的关于服务工人的研讨会，我完全推荐你去看看。
I did a two day workshop on Service Worker
that I totally recommend you check out.

7
00:00:17.140 --> 00:00:20.557
所以我有点喜欢服务工作者的高水平
So I'll kinda do like the high level
of what a Service Worker is and

8
00:00:20.557 --> 00:00:22.120
如果你是这样的话那很酷。
if you're like that is cool.

9
00:00:22.120 --> 00:00:26.931
猜猜有什么内容，你可以只在服务上观看10个小时
Guess what there's ten hours of content
you can watch exclusively on service

10
00:00:26.931 --> 00:00:30.778
工人，我现在不会对它做那么多的公正，但是
worker, and I will not do nearly
as much justice to it now, but

11
00:00:30.778 --> 00:00:33.600
我绝对建议你去看看。
I totally recommend that
you check that out.

12
00:00:33.600 --> 00:00:38.075
它的名字叫“是不是进步的网络应用程序反应”是这门课程的名称。
It's called was it progressive web apps
in react was the name of the course.

13
00:00:38.075 --> 00:00:39.640
&gt；&gt；[INAUDIBLE]
&gt;&gt; [INAUDIBLE]

14
00:00:39.640 --> 00:00:40.340
&gt；&gt；Steve Kinney：是的，进步网络
&gt;&gt; Steve Kinney: Yeah, progressive web

15
00:00:40.340 --> 00:00:44.229
应用程序是一种伞形术语，服务工作者是其中非常酷的一部分，
apps is kinda of the umbrella term that
Service Worker is a really cool part of,

16
00:00:44.229 --> 00:00:47.280
这实际上就像，想象您可以构建具有以下功能的应用程序
that's effectively like,
imagine you can build apps that have

17
00:00:47.280 --> 00:00:49.579
本机应用程序的超能力，但在您的浏览器中。
native apps' superpowers,
but in your browser.

18
00:00:49.579 --> 00:00:54.939
它实际上是当今最酷的网络技术之一，
It's effectively one of the coolest
set of web technologies today,

19
00:00:54.939 --> 00:00:57.640
我认为会改变很多事情
that I think is gonna
change a lot of things,

20
00:00:57.640 --> 00:00:59.859
特别是现在Safari在新的Beta中支持它。
especially now that Safari
supports it in the new betas.

21
00:01:01.439 --> 00:01:03.500
所以，当我们请求一个网页时，
So, effectively when we ask for a webpage,

22
00:01:03.500 --> 00:01:07.969
我们刚刚谈过这个，浏览器进入网络，给我网页。
we kinda just talked about this, browser
goes to network, get me the webpage.

23
00:01:07.969 --> 00:01:09.689
当你有一个服务工人，
When you have a service worker,

24
00:01:09.689 --> 00:01:12.989
实际上，它像应用程序一样将自己安装到浏览器中。
effectively it installs itself
into the browser like an app.

25
00:01:14.010 --> 00:01:16.989
你不是向互联网索取东西，而是向服务工作者询问。
Instead of asking the internet for
things, you ask the service worker.

26
00:01:16.989 --> 00:01:19.810
这可以像我实际上使用Java脚本一样，
Which can be like I
actually with Java Script,

27
00:01:19.810 --> 00:01:23.569
有目的地将一堆文件放在缓存中，并可以为您获取它们。
purposefully put a bunch of files away
In the cache and can get them fo you.

28
00:01:23.569 --> 00:01:25.079
你可以写出一大堆逻辑。
And you can write a whole bunch of logic.

29
00:01:25.079 --> 00:01:27.569
使用我们之前讨论过的标题，就像您设置的那样，
With the headers that we talked
about earlier like you set them,

30
00:01:27.569 --> 00:01:31.150
如果他们有点像那些给浏览器的建议。
if they are kind of like those
suggestions to the browser.

31
00:01:31.150 --> 00:01:34.895
你在标题中设置它们，你希望浏览器尊重一些。
You set them in the header and
you hope the browser respect some.

32
00:01:34.895 --> 00:01:37.805
有了服务工作者，您可以编写JavaScript，您可以像这样，我想把
With service worker you can write
JavaScript you can be like, I want to put

33
00:01:37.805 --> 00:01:41.185
你在缓存中，我想在我从缓存中取出东西之前检查一下，
you in the cache, I want to check this
before I pull something out of the cache,

34
00:01:41.185 --> 00:01:43.715
你可以做一大堆非常有趣的事情。
and you can do a whole bunch
of really interesting things.

35
00:01:43.715 --> 00:01:47.414
因此，因为您拥有该控件，所以您可以让应用程序离线工作。
And so because you have that control you
can have applications that work offline.

36
00:01:47.414 --> 00:01:49.245
因为根据定义
Because by definition,

37
00:01:49.245 --> 00:01:53.375
如果它可以脱机工作，这意味着您可以很好地控制网络
if it can work offline it means that
you can control the network pretty well

38
00:01:53.375 --> 00:01:57.569
即使当你在线时也能获得令人难以置信的快速加载时间，对吗？
to get incredibly fast load times
even when you are online, right?

39
00:01:57.569 --> 00:02:01.349
与之相对的是，设置响应头的位置就像是嘿，
Versus, like, setting that response
header where it's like hey,

40
00:02:01.349 --> 00:02:05.650
也许不检查，你在控制，我不知道这是怎么回事。
maybe don't check, you're in control,
I don't know that's going on.

41
00:02:05.650 --> 00:02:08.800
所以我们在缓存中有一些东西，在网络上有一些东西。
So we have some stuff in cache,
some stuff on the network.

42
00:02:08.800 --> 00:02:13.512
每次提出网络请求都会进入服务工作，就像嘿，
Every time a network request is made
it goes to service work, it's like hey,

43
00:02:13.512 --> 00:02:15.187
和缓存谈谈，对吧？
talk to the cache, right?

44
00:02:15.187 --> 00:02:19.039
或者与缓存交谈，如果它不在缓存中，则与网络交谈。
Or talk to the cache, if it's not
in the cache talk to the network.

45
00:02:19.039 --> 00:02:21.159
或者你真的可以做一些很酷的事情，比如和网络聊天
Or you can really do cool stuff,
like talk to the network and

46
00:02:21.159 --> 00:02:23.829
获取新版本，然后将其放入缓存中。
get the fresh version, and
then put it in the cache.

47
00:02:23.829 --> 00:02:26.280
如果它们离线了，去缓存并获取它，对吗？
And if they're offline,
go to the cache and get it, right?

48
00:02:26.280 --> 00:02:29.990
它为您提供了对网络操作的大量编程控制。
It gives you a lot of programmatic
control over what you do with a network.

49
00:02:29.990 --> 00:02:35.280
如果理论上可以，我现在正在研究的一个模式是
And if you can theoretically, one pattern
that I'm investigating right now is for

50
00:02:35.280 --> 00:02:41.409
与那些具有唯一标识符的文件一起部署。
deploying with those files that
have the unique identifiers.

51
00:02:41.409 --> 00:02:44.629
这意味着每当我部署新版本的应用程序时，
It means whenever I deploy
a new version of the app,

52
00:02:44.629 --> 00:02:48.379
我正在销毁所有的缓存，每个人都必须再次下载所有东西，对吧。
I'm destroying all the caches and everyone
has to download everything again, right.

53
00:02:48.379 --> 00:02:51.650
就像，太好了，我已经交付了客户价值和功能。
Like, great,
I've shipped customer value and features.

54
00:02:51.650 --> 00:02:55.289
糟糕，我正在反复擦除缓存，对吗？
Bad, I am wiping out the cache repeatedly,
right?

55
00:02:55.289 --> 00:02:58.778
也就是说，如果他们有这些假现金，我就部署一个新版本，
Which means If they had all these
false cash, I deploy a new version,

56
00:02:58.778 --> 00:03:01.621
他们必须为再次获得他们付出代价，对吧。
they have to pay the cost of
getting them again, right.

57
00:03:01.621 --> 00:03:05.032
这是生活的事实，没有真正的方法。
That's a fact of life,
there is no real way about that.

58
00:03:05.032 --> 00:03:09.068
但在这种情况下，您可以对服务工作人员做的是提供服务
But what you could do with the service
worker in this case is have the service

59
00:03:09.068 --> 00:03:12.610
工人，在他们下次访问时给他们旧版本。
worker, give them the old version
the very next time they visit.

60
00:03:13.840 --> 00:03:16.879
给我看老版本，在背景中，嗯，他们没有注意。
Show me old version, in the background,
well, they're not paying attention.

61
00:03:16.879 --> 00:03:19.719
下载新版本，替换缓存的版本，然后
Download the new version,
replace the cached one, and

62
00:03:19.719 --> 00:03:22.569
下一次，无论发生什么，他们仍然可以获得瞬时加载时间。
next time they still get instantaneous
load times no matter what.

63
00:03:22.569 --> 00:03:25.783
有一堆很酷的东西你可以和服务工作者一起做
There's a bunch of really cool stuff
that you can do with service worker

64
00:03:25.783 --> 00:03:30.193
在时间的本质和事实上有十个小时的内容。
In the nature of time and the fact
there are ten hours of content on this.

65
00:03:30.193 --> 00:03:33.454
我要在那上面下注一小会儿。
I going to punt on that one for
a little bit.

66
00:03:33.454 --> 00:03:37.324
它在这里是因为我也像超级兴奋的进步网络应用程序和
It's in here because I'm also like
super excited progressive web app and

67
00:03:37.324 --> 00:03:38.603
服务工作，我认为它真的很酷。
service work, and
I think it's really cool.
