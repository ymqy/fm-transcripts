WEBVTT

1
00:00:02.722 --> 00:00:07.115
&gt；&gt；steve kinney：有点进入我们的下一个主题，这是一个问题，
&gt;&gt; Steve Kinney: Kinda move into our
next topic, which is the issue of,

2
00:00:07.115 --> 00:00:10.470
我们现在知道了很多关于快速制作东西的方法。
we now know a lot about making stuff fast.

3
00:00:10.470 --> 00:00:12.560
我们知道如何诊断慢的东西。
We know how to diagnose
things that are slow.

4
00:00:12.560 --> 00:00:14.390
我们知道如何调整，但是
We know how to adjust things, but

5
00:00:14.390 --> 00:00:18.289
我们需要做的就是将这些东西放到浏览器上，以便处理这些东西。
what we need to do is get those things
to the browser in order to handle those.

6
00:00:18.289 --> 00:00:21.300
这本身就是一门很好的艺术。
And that is a fine art in and of itself.

7
00:00:21.300 --> 00:00:26.539
首先我们要讨论的是延迟和带宽，对吗？
First that we're gonna talk about
is Latency and Bandwidth, right?

8
00:00:28.809 --> 00:00:33.039
这是影响你获得网页速度的两个重要因素。
These are two important factors into
the speed in which you get a webpage.

9
00:00:33.039 --> 00:00:36.170
我想第三个因素是你发送了多少网页，对吗？
I guess the third factor is how
much webpage you're sending, right?

10
00:00:36.170 --> 00:00:39.320
我们看到那个酒吧一直在上升。
We saw that bar keep going up and
up and up and up.

11
00:00:39.320 --> 00:00:42.210
因此这些变得越来越重要。
So these become increasingly important.

12
00:00:42.210 --> 00:00:43.649
我们考虑了很多关于带宽的问题。
We think a lot about bandwidth.

13
00:00:43.649 --> 00:00:45.630
很多时候，我们不会考虑太多的延迟。
A lot of times,
we don't think a lot about latency.

14
00:00:45.630 --> 00:00:47.270
所以我们要探索一下他们两个。
So we're gonna kinda explore both of them.

15
00:00:47.270 --> 00:00:49.909
但首先，我很喜欢亚历克斯·罗素的这句话。
But first, there's this quote from
Alex Russell that I really like.

16
00:00:49.909 --> 00:00:53.409
当我们在Web应用程序、网络CPU和
That effectively when we're working
on web applications, network CPUs and

17
00:00:53.409 --> 00:00:55.020
磁盘都讨厌你。
disks all hate you.

18
00:00:55.020 --> 00:00:59.320
在客户端，你以你不容易看到的方式为你发送的东西付费。
On the client, you pay for what you
send in ways you can't easily see.

19
00:00:59.320 --> 00:01:01.250
我们通过解析看到了这一点，对吗？
We saw that with parsing, right?

20
00:01:02.560 --> 00:01:06.599
我们看到JPEG和JavaScript文件是不一样的，对吧？
We saw the JPEG and a JavaScript
file aren't created equal, right?

21
00:01:06.599 --> 00:01:10.159
还有一大堆其他因素可以发挥作用。
There's a whole bunch of other
factors to play into this.

22
00:01:10.159 --> 00:01:15.460
所以对于那些不知道的人来说，互联网是一系列的管道。
So for those of you who don't know,
that the Internet is a series of tubes.

23
00:01:15.460 --> 00:01:18.263
基本上，猫的迷因开始于某一点。
That basically,
a cat meme starts at one point.

24
00:01:18.263 --> 00:01:21.670
它通过管道，并最终在你的浏览器中成为一个猫的迷因。
It goes through the tubes, and
ends up in your browser to be a cat meme.

25
00:01:21.670 --> 00:01:26.549
在你的浏览器上引起了无法估量的喜悦，对吗？
On your browser causing
an immeasurable amount of joy, right?

26
00:01:26.549 --> 00:01:30.171
所以管子有两个维度。
And so that tube has two dimensions.

27
00:01:30.171 --> 00:01:33.289
带宽是指管子的宽度。
Bandwidth is how wide the tube is.

28
00:01:33.289 --> 00:01:36.979
在给定的时刻，你可以通过管子装多少东西。
How much stuff can you fit through
the tube at a given moment.

29
00:01:36.979 --> 00:01:37.950
很明显，
And obviously,

30
00:01:37.950 --> 00:01:42.090
你的管子越宽，你可以穿过管子的猫迷因就越多。
the wider your tube, the more cat memes
that you can shove through the tube.

31
00:01:42.090 --> 00:01:44.319
这很直观，对吧？
This makes intuitive sense, right?

32
00:01:44.319 --> 00:01:47.509
更大的管子，更多的猫，完成了。
Bigger tube, more cats, done.

33
00:01:47.509 --> 00:01:50.969
另一个问题是你的管子有多长，对吧？
The other problem is how
long is your tube, right?

34
00:01:50.969 --> 00:01:53.212
如果管子必须绕过半个地球，
If the tube has to go
halfway around the world,

35
00:01:53.212 --> 00:01:55.462
那些猫要花更长的时间才能找到你。
those cats are gonna take
longer to get to you.

36
00:01:55.462 --> 00:01:58.789
当然，你可以把一大堆猫塞进管子里，然后推着它们走。
Sure, you can shove a whole lot of
cats in that tube and push them along.

37
00:01:58.789 --> 00:02:02.739
但是猫的物理定律规定将会有一定量的
But the laws of cat physics dictate that
there is going to be a certain amount of

38
00:02:02.739 --> 00:02:05.640
是时候让第一批猫找到你了。
time for
that first payload of cats to get to you.

39
00:02:05.640 --> 00:02:09.250
所以这两者都是我们需要考虑的因素。
So this are both like factors that
we kinda need to think about.

40
00:02:09.250 --> 00:02:12.430
中间有一段非常棒的视频。
And there's this really
great video on center.

41
00:02:12.430 --> 00:02:15.000
歌，它就像野生的它和看到的事情。
Song it's like wild it and see matters.

42
00:02:15.000 --> 00:02:17.129
而我真正喜欢的部分是这种视觉效果。
And the part that I really
like it's this visual.

43
00:02:17.129 --> 00:02:18.870
他们在这里做了一大堆指标。
They did a bunch of metrics here.

44
00:02:18.870 --> 00:02:23.187
这就是全部，就像你可以看到西德尼是最好的，这是基于我的一个。
This is all, like you can see that Sidney
is the best, this is based out of my one.

45
00:02:23.187 --> 00:02:24.436
所以这是一个重要的测试笔记。
So that's an important testing note.

46
00:02:24.436 --> 00:02:27.680
当我看着它的时候，哇，西德尼有一些快速的互联网。
And when I looking at it, wow,
Sidney's got some fast Internet.

47
00:02:27.680 --> 00:02:30.780
他们有非常快的互联网到墨尔本[笑]为
They've got very fast Internet
to Melbourne [LAUGH] as

48
00:02:30.780 --> 00:02:33.000
与圣何塞和伦敦相比。
compared to San Jose and London.

49
00:02:33.000 --> 00:02:38.020
但是，您可以看到，随着文件大小的增加，
But, you can see that
as file size increases,

50
00:02:39.750 --> 00:02:43.340
下载时间并不是以线性的方式上升。
download time isn't in
a linear fashion going up.

51
00:02:43.340 --> 00:02:45.800
不仅仅是，是的，文件大小变大了。
It's not just, yeah,
the file size gets bigger.

52
00:02:45.800 --> 00:02:50.900
它正在采取这些巨大的步骤，而它需要的时间越来越长。
It's taking these massive steps
where it's taking longer and longer.

53
00:02:50.900 --> 00:02:55.409
对于每个LIKE，随着文件大小的增长，这些LIKE会跳跃。
For like every like,
as the file size grows, these like jumps.

54
00:02:55.409 --> 00:03:03.879
这看起来很奇怪，但实际上就像TCP的报价取消报价功能，对吧？
Which seems strange, but is actually like
a quote unquote feature of TCP, right?

55
00:03:03.879 --> 00:03:07.819
那么TCP，传输控制协议，对吗？
So TCP,
the transmission control protocol, right?

56
00:03:07.819 --> 00:03:11.560
它的工作，不一定是让你的东西快。
Its job, it's not necessarily
to get you stuff fast.

57
00:03:11.560 --> 00:03:15.424
你会想，哇，为什么互联网上的一个主要管道生物不在
You'd be like, wow, why is one of the
major pipe beings of the Internet not in

58
00:03:15.424 --> 00:03:17.100
负责快速给我拿东西？
charge of getting me stuff fast?

59
00:03:17.100 --> 00:03:21.030
因为它主要关注的是可靠地得到你的东西，对吗？
Cuz it's primarily focused with
getting you stuff reliably, right?

60
00:03:21.030 --> 00:03:24.469
让你所有的比特都按正确的顺序排列，并且
Getting you all of the bits
in the right order, and

61
00:03:24.469 --> 00:03:26.129
这样做会牺牲速度。
it will sacrifice speed to do that.

62
00:03:26.129 --> 00:03:27.129
我之前说过
I said earlier,

63
00:03:27.129 --> 00:03:31.389
基本上大多数性能都是某种权衡，对吧？
that basically most performance things
are some kind of trade off, right?

64
00:03:31.389 --> 00:03:35.789
与图层一样，您正在用一定数量的内存复杂性来交换
Like layers, you're trading a certain
amount of memory complexity for

65
00:03:35.789 --> 00:03:37.603
更快的油漆时间，对吧？
faster paint times, right?

66
00:03:37.603 --> 00:03:43.046
所有这些，在某些情况下，比如你的超酷JavaScript编译和
All of these things, in some cases like,
your super cool JavaScript compiling and

67
00:03:43.046 --> 00:03:46.750
解析hack可能会影响可读性，对吧？
parsing hack is maybe
affecting readability, right?

68
00:03:46.750 --> 00:03:48.170
这就是你需要考虑的事情。
That's the thing you need to think of.

69
00:03:48.170 --> 00:03:50.382
那里也总是有人的因素。
There's always that
human element there too.

70
00:03:50.382 --> 00:03:51.444
TCP的工作方式是，
The way TCP works is,

71
00:03:51.444 --> 00:03:55.461
它会继续与服务器进行检查，以确保一切正常。
it continues checking with the server
to make sure everything's working well.

72
00:03:55.461 --> 00:03:57.170
我们正在按正确的顺序接收数据包。
We're getting the packets
in the correct order.

73
00:03:57.170 --> 00:04:00.270
他们在管子里没有被腐蚀。
They're not getting corrupted in the tube.

74
00:04:00.270 --> 00:04:03.657
客户端在接收到每个包时已经确认。
That the client has acknowledged
with receipt of each package.

75
00:04:03.657 --> 00:04:05.590
不可靠的连接处理得很好。
Unreliable connections are handled well.

76
00:04:05.590 --> 00:04:07.870
我们没有让网络超载，对吧。
We're not overloading the network, right.

77
00:04:07.870 --> 00:04:12.280
所以它就像，非常小心地确保一切都进行得令人难以置信的顺利。
And so it's like, very careful to make
sure everything's going incredibly well.

78
00:04:12.280 --> 00:04:15.590
这样我们就可以确保不会有丢失或损坏的文件。
That way we make sure we don't have
files that go missing, or get corrupted.

79
00:04:15.590 --> 00:04:20.040
因为如果你收到一个损坏的猫gif。
Because if you receive
a corrupted cat gif.

80
00:04:20.040 --> 00:04:23.430
在这一点上，在互联网上到底有什么意义呢？
What is even the point of being
on the Internet at that point?

81
00:04:23.430 --> 00:04:26.481
我只是关上我的笔记本电脑出去或者别的什么，也许读一本书？
I'm just gonna close my laptop and go
outside or something, maybe read a book?

82
00:04:26.481 --> 00:04:29.439
就像，谁想这么做？
Like, who wants to do that?

83
00:04:29.439 --> 00:04:32.560
因此TCP从发送少量数据开始。
So TCP starts by sending
a small amount of data.

84
00:04:32.560 --> 00:04:34.750
如果进展顺利，它就会开始发送更多，而且
If that goes well,
it starts sending more, and

85
00:04:34.750 --> 00:04:37.569
更多，因为它发现事情是成功的。
more, as it finds out things
are being successful.

86
00:04:37.569 --> 00:04:39.980
这就是你看到那些大跳跃的原因。
And that's why you saw those big jumps.

87
00:04:39.980 --> 00:04:42.540
所以它一开始就没有发送尽可能多的数据。
So it starts out by not sending
as much data as it could.

88
00:04:42.540 --> 00:04:45.409
就像，让我给你发一小包数据。
Like, let me send you a tiny
little packet of data.

89
00:04:45.409 --> 00:04:46.680
你拿到了吗？
Did you get it?

90
00:04:46.680 --> 00:04:47.699
酷毙了。
Cool.

91
00:04:47.699 --> 00:04:49.449
在我知道你已经得到了很多次之后。
After I know you've gotten
it a bunch of times.

92
00:04:49.449 --> 00:04:51.519
它几乎就像优化编译器。
It's almost like the optimizing compiler.

93
00:04:51.519 --> 00:04:52.750
事情进展顺利吗？
Things are going well?

94
00:04:52.750 --> 00:04:55.110
我会开始高速运转的，对吧？
I'll start kicking things into high gear,
right?

95
00:04:55.110 --> 00:04:57.199
但是同样，相反的也是正确的。
But the also, the opposite is true.

96
00:04:57.199 --> 00:05:02.069
这就是为什么在慢速连接时事情会感觉如此糟糕的原因。
This is why things feel so
much worse on a slow connection.

97
00:05:02.069 --> 00:05:03.959
因为数据包丢失了。
Because packets get lost.

98
00:05:03.959 --> 00:05:04.939
他们会堕落。
They get corrupted.

99
00:05:04.939 --> 00:05:07.860
因此TCP从小元数据开始。
So TCP starts by saying small metadata.

100
00:05:07.860 --> 00:05:09.949
您的连接已经不可靠。
Your connection is already unreliable.

101
00:05:09.949 --> 00:05:11.519
已经很慢了。
So already slow.

102
00:05:11.519 --> 00:05:13.939
所以给你发了一小包数据。
So sends you a small packet of data.

103
00:05:13.939 --> 00:05:15.389
其中一些会被破坏。
Some of those get corrupted.

104
00:05:15.389 --> 00:05:16.810
再发一次。
Sends them again.

105
00:05:16.810 --> 00:05:19.779
它不像一个互联网连接，
It's not like an Internet
connection that's like,

106
00:05:19.779 --> 00:05:23.220
可靠性的一半就是速度的一半。
half as reliable is half as fast.

107
00:05:23.220 --> 00:05:26.389
指数慢，因为TCP就像，我不信任你。
Exponentially slower because TCP is like,
I don’t trust you.

108
00:05:26.389 --> 00:05:28.079
我要把猫放到YouTube上。
I am putting cats on YouTube.

109
00:05:28.079 --> 00:05:29.389
YouTube在泄露，对吧
YouTube is leaking, right.

110
00:05:29.389 --> 00:05:35.139
你仍然有YouTube，然后你得到了你应得的猫。
You still have YouTube, and
then you get the cats you deserve.

111
00:05:35.139 --> 00:05:40.250
CCP在不可靠的连接下会变得更糟，比如戏剧性的方式。
CCP will be worse under unreliable
connections like dramatic ways.

112
00:05:40.250 --> 00:05:42.079
所以，是的，我们都知道这一点。
So yeah, and we all know this.

113
00:05:42.079 --> 00:05:45.759
不可靠的互联网比没有互联网更糟糕，酷。
Unreliable internet is worse
than no internet, cool.

114
00:05:45.759 --> 00:05:49.279
所以，这只是一个有趣的事实，当我们得到文件大小在一点点。
So just a fun fact,
when we get to file sizes in a little bit.

115
00:05:49.279 --> 00:05:53.480
TCP的初始窗口大小是14千字节。
Is that the initial window
size of TCP is 14 kilobytes.

116
00:05:53.480 --> 00:05:57.300
这意味着如果你能获得低于14千字节的任何资产。
Which means if you can get
whatever asset under 14 kilobytes.

117
00:05:57.300 --> 00:05:59.840
您可以一次发送。
You can send it in one go.

118
00:05:59.840 --> 00:06:01.819
如果是28，我们就得开始握手了。
If it's 28,
then we got to start doing the handshake.

119
00:06:01.819 --> 00:06:02.750
你拿到前14个了吗？
Did you get the first 14?

120
00:06:02.750 --> 00:06:03.339
酷毙了。
Cool.

121
00:06:03.339 --> 00:06:04.959
我会在接下来的14天寄给你。
I'll send you the next 14.

122
00:06:04.959 --> 00:06:06.649
等等，对吧？
So on and so forth, right?

123
00:06:06.649 --> 00:06:09.800
这很有趣，因为像我们的JavaScript应用程序正在增长，对吗？
And it's interesting because like our
JavaScript apps are growing, right?

124
00:06:09.800 --> 00:06:14.160
就像这看起来像14千字节[笑]那是不会发生的，对吧。
Like this seems like 14 kilobytes
[LAUGH] that's not gonna happen, right.

125
00:06:14.160 --> 00:06:16.420
也许吧。我们有一些小把戏在我们的袖子里。
Maybe.
We have some tricks up our sleeves.

126
00:06:16.420 --> 00:06:20.399
但是，是的，如果我们能把它放进去，就会好很多，对吧？
But yeah, if we could get that in
there it would be way better, right?

127
00:06:20.399 --> 00:06:24.990
这就是构建网络的管道的本质。
This is just the nature of the plumbing
that the web is built upon.

128
00:06:24.990 --> 00:06:26.750
所以，让我们实际看看这一点。
So let's actually kind
of see that in action.

129
00:06:26.750 --> 00:06:28.014
我们要去
We're gonna go to

130
00:06:28.014 --> 00:06:34.769
http://www.cloudping.info/&GT；&GT；史蒂夫·金尼：以及
http://www.cloudping.info/
&gt;&gt; Steve Kinney: And

131
00:06:34.769 --> 00:06:36.807
有很多不同的工具可以做到这一点，而且
there's a bunch of different
tools that do this, and

132
00:06:36.807 --> 00:06:39.279
你应该看看他们所有的，因为他们都很酷。
you should check out all of
them because they're very cool.

133
00:06:39.279 --> 00:06:41.310
基本上是从我们现在明尼苏达州的地方。
Basically from where we are right now,
in Minnesota.

134
00:06:42.529 --> 00:06:45.079
我们可以袭击很多亚马逊地区。
We can hit a bunch of Amazon regions.

135
00:06:45.079 --> 00:06:49.759
好的，从弗吉尼亚州的美国东部到俄亥俄州，一直到
All right, everywhere from US-East in
Virginia, to Ohio, all the way out to

136
00:06:49.759 --> 00:06:55.180
加州，一路延伸到南美，印度，等等。
California, all the way out to
South America, India, so on and so forth.

137
00:06:55.180 --> 00:06:56.627
所以我们会继续和ping。
So we'll go ahead and ping.

138
00:06:59.961 --> 00:07:02.567
&gt；&gt；steve kinney：你可以看到物理的简单定律，
&gt;&gt; Steve Kinney: You can see
the simple laws of physics,

139
00:07:02.567 --> 00:07:05.887
电子只能以这么快的速度通过导线，
that electrons can only
go through wires so fast,

140
00:07:05.887 --> 00:07:11.209
就像光速是一种东西一样，是的，互联网受到物理学的约束。
like the speed of light is a thing, and
yes, the Internet is bound by physics.

141
00:07:11.209 --> 00:07:14.420
大多数时候看起来不像，但确实是。
Doesn't seem like it most of the time,
but it definitely is.

142
00:07:14.420 --> 00:07:18.060
所以我们离得越远，我们的时间就越慢，
And so the further away we get,
the slower our times are,

143
00:07:18.060 --> 00:07:20.019
我认为这很吸引人，对吧？
which I think is fascinating, right?

144
00:07:20.019 --> 00:07:22.139
我们可以谈谈如何解决这个问题。
And we can talk a little bit
about how to solve this problem.

145
00:07:22.139 --> 00:07:25.569
实际上，它既令人难以置信地复杂，又天真地简单。
It's actually both incredibly
complicated and naively simply.

146
00:07:25.569 --> 00:07:28.218
它做起来难以置信的复杂和天真的简单对我们来说，
It's incredibly complicated to do and
naively simple for us to do,

147
00:07:28.218 --> 00:07:29.853
因为我们让别人来做这项工作。
because we let somebody else do the work.

148
00:07:29.853 --> 00:07:32.733
这也是获得表演的方式。
That is also the way to get performances.

149
00:07:32.733 --> 00:07:35.362
第三条规则，如果有工作要做，
Third rule, if work has to be done,

150
00:07:35.362 --> 00:07:39.588
其他人可以做这项工作可能也是有用的。
can someone else do this work
is probably useful as well.

151
00:07:42.797 --> 00:07:47.610
&gt；&gt；steve kinney：所以，你知道，我在丹佛工作。
&gt;&gt; Steve Kinney: So, you know like,
I work it's in Denver.

152
00:07:47.610 --> 00:07:50.699
我肯定我们会把我们的资产放在丹佛，对吧？
I'm sure we place our assets in Denver,
right?

153
00:07:50.699 --> 00:07:52.610
我们的客户大多在哪里？
Where are most of our customers?

154
00:07:52.610 --> 00:07:53.840
他们在美国吗？
Are they in the United States?

155
00:07:53.840 --> 00:07:54.879
我不知道，可能吧。
I don't know, like probably.

156
00:07:54.879 --> 00:07:59.930
如果我们想让人们快速获得我们的资产，我们应该把它们放在哪里？
Where do we put our assets if
we want people to get them fast?

157
00:07:59.930 --> 00:08:01.689
知道如果我们把他们放在丹佛
Knowing that if we put them in Denver,

158
00:08:01.689 --> 00:08:05.279
想要在北京买到它们的人将很难得到它。
people trying to get them in Beijing
are going to have a hard time getting it.

159
00:08:05.279 --> 00:08:09.110
在墨尔本，情况会更糟，如此等等。
In Melbourne it's gonna be even worse,
so on and so forth.

160
00:08:09.110 --> 00:08:10.709
那我们把它们放在哪里？
So where do we put them?

161
00:08:10.709 --> 00:08:12.620
答案无处不在。
The answer is everywhere.

162
00:08:12.620 --> 00:08:15.571
你觉得这不能令人满意。
You're like that's unsatisfying.

163
00:08:15.571 --> 00:08:19.990
通常答案是使用CDN。
And usually the answer is using a CDN.

164
00:08:19.990 --> 00:08:24.536
这是云的前沿，稍后我将讨论一些简单的方法来做到这一点。
This is cloud front and later on I'm gonna
talk about some easy ways to do this.

165
00:08:24.536 --> 00:08:25.920
好像两者都有，
Like there's both,

166
00:08:25.920 --> 00:08:30.199
这是其中一件事情，它甚至不是关于它有多难。
it's one of those things where it's
not even on how difficult it is.

167
00:08:30.199 --> 00:08:33.710
但基本上，云前沿是有很多地方可以托管DSS。
But basically cloud front is that there
are a bunch of places to host DSS.

168
00:08:33.710 --> 00:08:37.340
世界上有一大堆我们称之为边缘节点的东西。
There's a bunch of like we call
edge nodes all around the world.

169
00:08:37.340 --> 00:08:41.070
每个客户端与其最近的边缘节点交谈，
Each client talks to
their closest edge node,

170
00:08:41.070 --> 00:08:42.830
理想情况下可以更快地拿到东西。
which ideally can get them stuff faster.

171
00:08:42.830 --> 00:08:46.740
所以你只是到处散布，到处缓存。
So you just spread it around everywhere,
caching it all over the place.

172
00:08:46.740 --> 00:08:49.169
我会稍微谈一下，但我现在会破坏一些惊喜。
I'll talk about this a little, but
I'll ruin some of the surprise now.

173
00:08:50.879 --> 00:08:54.149
如果是，嘿，我一直在研究这件事就像我自己的项目一样，而且
If it's, hey, I've been working on this
thing like my own side project, and

174
00:08:54.149 --> 00:08:55.100
这是一个小应用程序。
it's a small application.

175
00:08:55.100 --> 00:08:58.250
有很多服务可以很容易地为你做到这一点。
There are a bunch of services that
will do this for you really easily.

176
00:08:58.250 --> 00:09:05.250
如果你是一个大公司，其实亚马逊会让它不难，对吧？
If you are a large company, actually,
Amazon will make it not hard, right?

177
00:09:05.250 --> 00:09:07.240
几个月后我要去上一堂AWS课程。
I'm gonna do a AWS class in a few months.

178
00:09:07.240 --> 00:09:09.120
在那里我们将讨论如何设置所有这些。
Where we'll talk about
how to set that all up.

179
00:09:09.120 --> 00:09:11.879
但这有点难，如果你想建立自己的CDN，
But it's a slightly hard,
if you wanna build your own CDN,

180
00:09:11.879 --> 00:09:14.620
如果你想成为亚马逊或CloudFlare，那就是，
if you want to be Amazon or
CloudFlare, well that would be,

181
00:09:14.620 --> 00:09:17.639
你需要喜欢在世界各地设置东西。
you need to like do the setting up
of things all around the world.

182
00:09:17.639 --> 00:09:22.533
但是对于你们这些在房间里的人来说，那里有一张世界的图片。
But for those of you in the room,
there's a picture of the world there.

183
00:09:22.533 --> 00:09:24.509
当我看着屏幕时，那看起来就像点一样。
That just looks like dots
as I look at the screen.

184
00:09:24.509 --> 00:09:27.933
但是想象一下世界的灰色剪影。
But imagine a grey
silhouette of the world.

185
00:09:27.933 --> 00:09:30.370
那边那个大集群是美国。
That big cluster over there
is the United States.

186
00:09:30.370 --> 00:09:34.692
那边是中国，下面是澳大利亚。
Over there we have China,
and down below Australia.

187
00:09:34.692 --> 00:09:37.138
所以对我们大多数人来说我们要么
So yeah, for most of us we're either,

188
00:09:37.138 --> 00:09:41.976
它在利用别人的内容分发网络，对吗？
it's leveraging somebody else's
content distribution network, right?

189
00:09:41.976 --> 00:09:43.299
把它放在那些地方。
And putting it in those places.

190
00:09:43.299 --> 00:09:46.529
但是，你的民事行为确实需要这样做，对吧？
But, the civil act of you
do need to do it, right?

191
00:09:46.529 --> 00:09:48.299
有些服务会免费为你做这件事。
Some services will do it for you for free.

192
00:09:48.299 --> 00:09:51.850
会自动，但不是每个人都能开箱。
Will automatically, but
not everyone out of the box.

193
00:09:51.850 --> 00:09:57.009
如果您只有一台服务器，并且他们正在为您提供正常的后端服务，
And if you just have a server and they're
serving your normal back-end services and

194
00:09:57.009 --> 00:09:59.927
你只是把文件放在那里，你可能没有CDN。
you just put the files there,
you likely don't have a CDN.
