WEBVTT

1
00:00:00.170 --> 00:00:04.118
&gt；&gt；Steve Kinney：Webpack是否附带此webpack-bundle-analyzer，
&gt;&gt; Steve Kinney: Is Webpack comes
with this webpack-bundle-analyzer,

2
00:00:04.118 --> 00:00:08.179
这有效地做到了它在罐头上说的话，对吗？
which does effectively what
it says on the tin, right?

3
00:00:08.179 --> 00:00:11.210
它会分析你的包裹。
It analyzes your bundles.

4
00:00:11.210 --> 00:00:13.169
你说，太好了，这是什么意思？
You're like, great, what does that mean?

5
00:00:13.169 --> 00:00:14.380
快到了。
Getting there.

6
00:00:14.380 --> 00:00:18.385
所以我要继续，我要翻转这个。
So I'm gonna go ahead, and
I'm just going to flip this.

7
00:00:18.385 --> 00:00:23.266
开始了，很酷。&gt；&gt；steve kinney：那么，
It's on, very cool.
&gt;&gt; Steve Kinney: So,

8
00:00:23.266 --> 00:00:25.920
我们要做的就是为生产而建造。
what we'll do is we're gonna build for
production.

9
00:00:25.920 --> 00:00:29.739
让我们做一个NPM运行构建，这将做的是它将构建我的文件。
Let's do a npm run build, and
what this will do is it'll build my file.

10
00:00:29.739 --> 00:00:33.796
它将启动包分析器，我们可以看到我的包的内容。
And it'll fire up the bundle analyzer,
and we can see the contents of my bundle.

11
00:00:38.265 --> 00:00:39.375
&gt；&gt；steve kinney：请稍等。
&gt;&gt; Steve Kinney: Give it a second.

12
00:00:45.762 --> 00:00:46.304
&gt；&gt；steve kinney：就是这样。
&gt;&gt; Steve Kinney: This is it.

13
00:00:46.304 --> 00:00:51.600
这是我的包，main.一些checksum.bundle.js，
This is my bundle,
main.some checksum.bundle.js,

14
00:00:51.600 --> 00:00:57.670
它对于可视化所有代码的位置非常有用。
and it's really useful for
visualizing where all your code is.

15
00:00:57.670 --> 00:01:00.130
比如什么占据了大部分的捆绑？
Like what is taking up
most of that bundle?

16
00:01:00.130 --> 00:01:02.689
这是我在这里写的代码，
So this is the code I wrote over here,

17
00:01:02.689 --> 00:01:05.769
源目录中的这个小片段。
this tiny little sliver
in the source directory.

18
00:01:05.769 --> 00:01:12.519
我已经写了，有效地，在gzip压缩后，2.26千字节。
I have written, effectively,
after it's been gzipped, 2.26 kilobytes.

19
00:01:12.519 --> 00:01:19.641
但我会运送所有这些代码，我会运送所有的洛达什。
But I am shipping all of this code,
and I'm shipping all of lodash.

20
00:01:19.641 --> 00:01:24.164
我正在运送codemirror，这显然是一个很大的捆绑包。
I'm shipping codemirror,
which is clearly a large bundle.

21
00:01:24.164 --> 00:01:27.224
当你这样看的时候，很明显谁是罪魁祸首。
Makes it very obvious who the culprits
are when you get to see it like this.

22
00:01:27.224 --> 00:01:31.629
反应，我可能摆脱不了那个。
React-dom, I'm probably not
gonna get away from that one.

23
00:01:31.629 --> 00:01:36.310
还有其他几个库，用户可以得到所有这些，对吗？
And a few other libraries, and
the user is getting all of this, right?

24
00:01:36.310 --> 00:01:38.020
他们正在解析所有的信息。
They're parsing all of it.

25
00:01:38.020 --> 00:01:40.490
都要通过管道，对吧？
It's all going through the tubes, right?

26
00:01:40.490 --> 00:01:45.229
我不知道他们是否需要所有这些，就像我不能给他们寄一些东西一样。
I don't know if they need all of this,
like I can not send them some stuff.

27
00:01:45.229 --> 00:01:47.259
比如如果他们需要代码编辑器，我们会给他们发送代码编辑器。
Like if they need the code editor,
we'll send them the code editor.
