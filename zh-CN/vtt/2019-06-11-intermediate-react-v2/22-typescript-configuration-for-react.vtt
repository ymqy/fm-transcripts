WEBVTT

1
00:00:00.090 --> 00:00:03.669
>> Brian Holt: 我现在想做的是我们已经把这个项目写在
&gt;&gt; Brian Holt: So what I wanna do now is
we have this project that we've written in

2
00:00:03.669 --> 00:00:05.929
只是香草的 JavaScript
just vanilla JavaScript.

3
00:00:05.929 --> 00:00:08.650
我想你们很多人都在
And I imagine many of you
are working in places that

4
00:00:08.650 --> 00:00:11.660
当前不在 TypeScript 中，但您希望它在 TypeScript 中，对吗 ?
are not currently in TypeScript, but
you'd like it to be in TypeScript, right?

5
00:00:11.660 --> 00:00:13.419
但这意味着移民。
But that means a migration.

6
00:00:13.419 --> 00:00:17.379
所以你和我今天要做的就是把我们的整个计划
So what you and I are gonna do today is
we're gonna migrate our entire project to

7
00:00:17.379 --> 00:00:18.768
TypeScript 非常快。
TypeScript really quick.

8
00:00:18.768 --> 00:00:21.903
只是为了让你知道你有点痛苦
Just to show you that
t's a little painful,

9
00:00:21.903 --> 00:00:26.163
有点烦人但这是很有可能的
it's a little annoying, but
it's very possible, okay?

10
00:00:26.163 --> 00:00:29.187
所以我们开始吧开始吧
So let's go ahead and get started.

11
00:00:29.187 --> 00:00:34.549
所以我就在这里的雷波里我在总行
So I'm in my repo here,
I'm in the master branch,

12
00:00:34.549 --> 00:00:39.560
我会说 npm install -D typescript。
and I'm gonna say npm
install -D typescript.

13
00:00:39.560 --> 00:00:43.689
所以我从下午 3 点 4 分收到了 TypeScript
So I got TypeScript off of npm 3.4 and

14
00:00:43.689 --> 00:00:47.859
之后我就会说
I'm going to say after that,

15
00:00:49.600 --> 00:00:56.320
npx，它是一个将为您运行 npm 二进制文件的工具。
npx, which is a tool that's going
to run npm binaries for you.

16
00:00:56.320 --> 00:01:01.570
tsc，即 TypeSript 编译器， --init。
tsc, which is the TypeSript compiler,
--init.

17
00:01:01.570 --> 00:01:06.640
所以这将为我们启动一个 TypeScript 项目，好吗 ?
So this going to start
a TypeScript project for us, okay?

18
00:01:08.019 --> 00:01:11.346
那么现在如果你去看 tsconfig，我就是为你创造的，
So now if you go look at tsconfig,
which I just generated for you,

19
00:01:11.346 --> 00:01:13.296
你把这件事都搞明白了
you get this whole thing of tsconfig.

20
00:01:15.950 --> 00:01:19.329
> > 布莱恩 - 霍尔特: 你和我有几件事要做。
&gt;&gt; Brian Holt: So there's a couple things
that you and I are gonna have to do here.

21
00:01:19.329 --> 00:01:23.768
我们的目标是 ES2019
Our target is going to be ES2019, or

22
00:01:23.768 --> 00:01:27.819
18岁或者不管你想做什么
18, or whatever you want it to be.

23
00:01:27.819 --> 00:01:30.936
看来不像 19岁了让我们说 18吧
Looks like it doesn't like 19,
so let's say 18.

24
00:01:33.599 --> 00:01:40.242
> > Brian Holt: 那么最后一个要做的就是在这里保存 jsx ，
&gt;&gt; Brian Holt: Then the last one you
have to do is preserve jsx right here,

25
00:01:40.242 --> 00:01:44.183
取消注释并作出反应。
uncomment that one and put react.

26
00:01:50.228 --> 00:01:52.849
> > 布莱恩 - 霍尔特: 是的，我们走了。
&gt;&gt; Brian Holt: Yeah, there we go.

27
00:01:52.849 --> 00:01:54.659
其他的你都想保持相对
Everything else,
you wanna leave relatively the same,

28
00:01:56.219 --> 00:01:59.344
此处的大键是 "strict": true。
The big key here one is "strict": true.

29
00:01:59.344 --> 00:02:01.620
让我们先讲严格的模式。
Let's talk about strict mode for
just a second.

30
00:02:03.159 --> 00:02:07.510
如果你要在 TypeScript 中启动一个全新的项目
If you're gonna just start out with
a brand new project in TypeScript, and

31
00:02:07.510 --> 00:02:09.349
你想按你的速度尽快开始
you wanna just get started
as fast as you can,

32
00:02:09.349 --> 00:02:12.960
您可以使用 "strict" 引入 TypeScript : false。
you can introduce TypeScript
with "strict": false.

33
00:02:12.960 --> 00:02:15.900
这会让它更容易入门。
And this is going to make it
a lot easier to get started.

34
00:02:15.900 --> 00:02:17.569
但你却没有得到好处对吧
But you get less of the benefit, right?

35
00:02:17.569 --> 00:02:20.759
更严格的是你的类型检查，你得到的好处就越多，
The stricter you are with your type
checking, the more benefit you get, and

36
00:02:20.759 --> 00:02:22.360
更烦人的是吧 ?
also the more annoying it is, right?

37
00:02:22.360 --> 00:02:25.289
所以它更有好处，但也会痛得更多。
So it's more beneficial,
but it also hurts more.

38
00:02:25.289 --> 00:02:30.650
所以我会说 " 严格"，可能是假的 ?
So I would say go ahead and
start out with "strict": false, maybe?

39
00:02:30.650 --> 00:02:33.920
但你应该总是采取严格的方式
But you should always
get to strict mode true.

40
00:02:33.920 --> 00:02:36.129
假只是一个踏踏踏石的踏脚石。
False is only a stepping stone to true.

41
00:02:37.259 --> 00:02:38.270
你总是想实现真正的
You always wanna get to true.

42
00:02:38.270 --> 00:02:41.180
所以我们要从真实的开始我们才会继续
So we're gonna start with true, and
we're just gonna stay with true.

43
00:02:42.360 --> 00:02:45.240
我们接下来要做的就是
The next thing that we need to do is,

44
00:02:46.849 --> 00:02:50.539
类似 React 的包不会在 TypeScript 中写入，对吗 ?
packages like React are not
written in TypeScript, right?

45
00:02:50.539 --> 00:02:53.259
它们是由不使用 TypeScript的其他团队编写的。
They're written by a different
team that doesn't use TypeScript.

46
00:02:53.259 --> 00:02:57.039
但是当我们使用 " React" 时，我们希望具有类型。
However, we wanna have
types when we use React.

47
00:02:58.259 --> 00:03:00.740
幸好有个叫 DefinitelyTyped 的项目
Luckily there's a project
called DefinitelyTyped

48
00:03:00.740 --> 00:03:04.610
允许人们为他们无法控制的图书馆写类型
that allows people to write types for
libraries that they don't control.

49
00:03:04.610 --> 00:03:06.480
然后我们可以把它们导入到我们的项目中，对吧 ?
And then we can import them
into our project, right?

50
00:03:06.480 --> 00:03:09.180
这就是 React所发生的事情。
So that's what happened with React.

51
00:03:09.180 --> 00:03:13.280
所以我们能做的就是
So what we can do in
here is we can come and

52
00:03:13.280 --> 00:03:18.629
说 npm 安装 -D @types/ 反应，对吗 ?
say npm install -D @types/react, right?

53
00:03:18.629 --> 00:03:21.099
因此尽管 React 不是在 TypeScript中写入的，
So despite the fact that React
is not written in TypeScript,

54
00:03:21.099 --> 00:03:24.319
我们还可以通过安装这个包来获取类型。
we can still get types out of
it by installing this package.

55
00:03:24.319 --> 00:03:32.489
然后我们会做 @types/ 反反派
And then we'll do @types/react-dom and

56
00:03:32.489 --> 00:03:36.026
@types/ 反应。
@types/react.

57
00:03:36.026 --> 00:03:41.764
也不能用反斜杠让你双下划线
And it can't do slashes so
you do double underscore so

58
00:03:41.764 --> 00:03:44.831
类型 /可达性路由器。
types/reach__router.

59
00:03:47.840 --> 00:03:50.074
>> Brian Holt: Right， cuz 通常是 @reach/router。
&gt;&gt; Brian Holt: Right,
cuz normally it's @reach/router.

60
00:03:51.925 --> 00:03:54.420
>> Brian Holt: 这将为我们提供这些项目的所有类型。
&gt;&gt; Brian Holt: And this'll give us
all the types for these projects.

61
00:03:58.331 --> 00:04:01.474
>> Brian Holt: 其他项目如 FrontEndMaster/Pet one，
&gt;&gt; Brian Holt: So other projects
like the FrontEndMaster/Pet one,

62
00:04:01.474 --> 00:04:04.832
它已经有自己的类型定义了
it already has its own type
definitions that ship with it.

63
00:04:04.832 --> 00:04:07.567
所以你不用装类型就有了
So you don't have to install types for
it, it just has them and

64
00:04:07.567 --> 00:04:08.782
就有了这个项目
it comes with the project.

65
00:04:10.510 --> 00:04:13.388
>> Brian Holt: 但现在我们可以使用所有这些类型。
&gt;&gt; Brian Holt: But now we have all
of these types that we can use.
