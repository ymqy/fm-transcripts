WEBVTT

1
00:00:00.000 --> 00:00:02.386
>> Brian Holt: 现在当我们看到结果时，结果是好的，
&gt;&gt; Brian Holt: And now when we
look at results, results was fine,

2
00:00:02.386 --> 00:00:05.730
SearchParams 现在很高兴，你可以看到它是绿色的。
SearchParams is now happy,
you can see that one's outlined in green.

3
00:00:06.849 --> 00:00:09.335
现在，这是其中最困难的一个。
And now,
this is the most difficult one of them.

4
00:00:09.335 --> 00:00:16.493
我们会说 App.js ，我们会把它重命名为 tsx 。
So we're gonna say App.js,
we're gonna rename it to tsx here.

5
00:00:16.493 --> 00:00:20.867
别介意我开玩笑的
And never mind, I'm just kidding.

6
00:00:20.867 --> 00:00:22.829
它只是在工作
It's, it just works.

7
00:00:22.829 --> 00:00:24.750
所以我们不需要用这个来改变任何东西
So we didn't have to change
anything with this one.

8
00:00:24.750 --> 00:00:28.489
因为我们输入了一切，我们得到了这个，一切都很好。
Because we typed everything else,
we got to this one, everything was fine.

9
00:00:28.489 --> 00:00:29.402
但我看到了你的脸
But I saw all your faces.

10
00:00:29.402 --> 00:00:32.118
就像狗屎一样
It was like shit, more of this.

11
00:00:32.118 --> 00:00:38.570
好吧那就是整件事
Okay, so that was the entire thing.

12
00:00:38.570 --> 00:00:43.331
我们要做的最后一件事是我们要去找 index.html
The one last thing that we have to do
here is we have to go to index.html and

13
00:00:43.331 --> 00:00:47.078
我们得把这个从 app.js 更改为 app.tsx，对，
we have to change this from
app.js to app.tsx, right,

14
00:00:47.078 --> 00:00:50.923
否则它不会指向正确的文件。
cuz otherwise it wouldn't be
pointing at the right file.

15
00:00:50.923 --> 00:00:53.088
现在希望你说 npm 跑了
And now hopefully if you say npm run dev.

16
00:00:58.921 --> 00:01:00.468
> > Brian Holt: 一切都应该从盒子里走出来。
&gt;&gt; Brian Holt: Everything should
just work out of the box.

17
00:01:00.468 --> 00:01:02.752
你可以看到它都来自 TypeScript。
So you can see it's all
coming from TypeScript.

18
00:01:06.421 --> 00:01:08.290
> > Brian Holt: 在 10 秒内构建，我们将研究项目。
&gt;&gt; Brian Holt: Built in ten seconds,
we'll go look at the project.

19
00:01:08.290 --> 00:01:12.028
发现它还在建造，一切仍然有效。
And notice that it still builds and
everything still works.

20
00:01:12.028 --> 00:01:13.493
问题 ?
Question?

21
00:01:13.493 --> 00:01:17.293
>> 扬声器 2: 因此，在界面上，我在一些项目中看到了
&gt;&gt; Speaker 2: So, on the interfaces,
I've seen in some of the projects that I'm

22
00:01:17.293 --> 00:01:21.609
正在处理，它们将接口用作它们导入的单独文件。
working on, they use the interfaces
as a separate file that they import.

23
00:01:21.609 --> 00:01:23.277
我注意到你把他们放在档案里了
And I noticed you put
them right into the file.

24
00:01:23.277 --> 00:01:27.070
是否存在首选项，将其作为单独的接口文件，或者
Is there a preference, there's having
it in as a separate interface file, or

25
00:01:27.070 --> 00:01:30.170
把它放进你用的组件里吗
just putting it in the component
that you're using it in?

26
00:01:30.170 --> 00:01:30.793
>> Brian Holt: 这是一个很好的问题。
&gt;&gt; Brian Holt: That's a good question.

27
00:01:30.793 --> 00:01:35.180
我觉得球队会有很大的变化
I think it's gonna vary
a lot team by team.

28
00:01:35.180 --> 00:01:37.170
尤其是道具和道具
For, specifically, for props and

29
00:01:37.170 --> 00:01:39.930
你应该把它们放在同一个文件里
state, you should definitely
put them in the same file.

30
00:01:39.930 --> 00:01:42.616
我不觉得这很有争议
And I don't feel like that's
super controversial to say,

31
00:01:42.616 --> 00:01:45.099
因为它就像是那个组件的文件
because it's like documentation
of that component.

32
00:01:45.099 --> 00:01:47.129
把它分开是没道理的
It wouldn't make sense to separate it.

33
00:01:47.129 --> 00:01:51.960
例如，我们在此应用中使用了我们的动物和照片类型。
But for example, we used our animal and
photo type everywhere in this application.

34
00:01:51.960 --> 00:01:53.460
如果不是在图书馆里定义的
Now, if that wasn't defined in a library,

35
00:01:53.460 --> 00:01:56.859
我将有一个单独的接口文件来定义这些文件。
I would have a separate interface
file that would define those ones.

36
00:01:56.859 --> 00:01:59.069
所以我想这就是我选择的路线。
So I guess that's kind of
the line I would choose.

37
00:01:59.069 --> 00:02:01.299
如果它在一个文件中使用，那么在文件中仅定义它。
If it's used in one file,
just define it in the file.

38
00:02:01.299 --> 00:02:02.980
如果它被用在一堆文件里
If it's used in a bunch of files,

39
00:02:02.980 --> 00:02:05.219
把它分成另一个类型的定义
maybe split it out into
a different type definition.

40
00:02:05.219 --> 00:02:07.689
>> 扬声器 2: 以我所见的方式，他们将有一个目录用于
&gt;&gt; Speaker 2: Cuz the way I've seen
it is they'll have a directory for

41
00:02:07.689 --> 00:02:10.025
该组件和该目录组件中的
that component and
in that directory component,

42
00:02:10.025 --> 00:02:13.735
您有组件，然后是 prop， iprop 和 istate 接口。
you have the component, and then the prop,
the iprop and the istate interfaces.

43
00:02:13.735 --> 00:02:15.514
他们就在那儿
And they're just used there.

44
00:02:15.514 --> 00:02:16.972
> > Brian Holt: 是的，这看起来很简单，
&gt;&gt; Brian Holt: Yeah, and that seems sane,

45
00:02:16.972 --> 00:02:20.555
在我工作的一个项目中，我不会感到不安。
I wouldn't be upset to see that
in a project that I worked in.

46
00:02:20.555 --> 00:02:24.905
我很高兴我喜欢在一个文件里尽可能多的东西
I'm a little bit lazier that I like things
to be in one file, as much as possible.

47
00:02:25.954 --> 00:02:29.149
但这是一个完全有效的选择
But that's a perfectly
valid choice to make.

48
00:02:29.149 --> 00:02:34.026
我不认为有一个，你必须这样做，那种事。
I don't think there's a, you must do
it this way, kind of thing about that.

49
00:02:34.026 --> 00:02:36.062
这能回答你的问题吗
Does that answer your question?

50
00:02:36.062 --> 00:02:38.046
> > 演讲者 2: 是的，我想知道是否有原因，
&gt;&gt; Speaker 2: Yeah,
I just was wondering if there's a reason,

51
00:02:38.046 --> 00:02:41.307
cutz 我更喜欢你的，不然你会打开另一个文件，你是
cuz I prefer it all in one, cuz otherwise
you kind of open up another file, you're

52
00:02:41.307 --> 00:02:44.447
在寻找它的同时，你也可以看到它的存在。
looking for it, and as opposed to having
it just right all there, you can see.

53
00:02:44.447 --> 00:02:47.781
>> Brian Holt: 是的，有些人只是遵守他们的标准
&gt;&gt; Brian Holt: Yeah, some people just
adhere to the standards that they

54
00:02:47.781 --> 00:02:49.659
觉得应该是吧
feel like they should, right?

55
00:02:49.659 --> 00:02:51.170
对很多人来说都是分开的
Cuz a lot of people will just separate,

56
00:02:51.170 --> 00:02:55.039
他们不认为定义和代码属于同一个文件
they don't think that definitions and
code belong in the same files.

57
00:02:55.039 --> 00:02:58.629
我看不出原因是吧
And I can't see why not, right?

58
00:02:58.629 --> 00:03:01.900
但如果你在很多回购协议或者很多档案上
But again if you're sharing that across
a lot of repos, or a lot of files,

59
00:03:01.900 --> 00:03:02.770
那就有道理了
then it does make sense.

60
00:03:02.770 --> 00:03:06.009
你会从多个地方进口的对吧
Cuz you're gonna be importing it from
multiple different places, right?

61
00:03:06.009 --> 00:03:10.527
这就是我的意见，但这不是意见。
So that's my opinion, but
it's not the opinion.

62
00:03:10.527 --> 00:03:11.814
这只是个很好的意见
It's just a really good opinion.

63
00:03:11.814 --> 00:03:14.860
很酷的问题
Cool, good question.

64
00:03:14.860 --> 00:03:20.438
还有一件事我要给你看
One more thing I want to show you
before we totally wrap this up.

65
00:03:20.438 --> 00:03:24.485
所以现在我们都在用我们的编辑做一切
So right now, we've just been
doing everything using our editor.

66
00:03:24.485 --> 00:03:28.913
但我想让你进你的包里
But I want you to go into your
package.json, not package-lock,

67
00:03:28.913 --> 00:03:30.105
package.json。
package.json.

68
00:03:30.105 --> 00:03:36.243
我们再把一个东西放在这里，叫打字号，打字号。
And we're going to put one more thing
in here called typecheck, typecheck.

69
00:03:36.243 --> 00:03:41.877
我们只会说 tsc -- noEmit ，就像这样。
And we're just gonna say tsc --noEmit,
like that.

70
00:03:41.877 --> 00:03:45.415
这件事你可以在你的线人或
And what this is gonna do, this is
something you could run in your CI or

71
00:03:45.415 --> 00:03:48.850
你可以先在当地跑出来
you could run it locally before
you commit or something like that.

72
00:03:48.850 --> 00:03:53.689
因此，现在我可以说我的项目 npm 运行 typececheck。
And so now I can say my
project npm run typecheck.

73
00:03:53.689 --> 00:03:57.987
所以也许你的同事在用病毒之类的东西
So that maybe your colleagues are using
vim or something like that and

74
00:03:57.987 --> 00:04:00.519
他们不使用 Visual Studio 代码
they're not using Visual Studio Code.

75
00:04:00.519 --> 00:04:04.074
他们可以在他们承诺要把所有东西都编译之前
They could run this before they commit to
just to make sure that everything compiles

76
00:04:04.074 --> 00:04:04.646
正确。
correctly.

77
00:04:04.646 --> 00:04:08.649
所以这里什么都没发生所以一切都过去了对吧
And so nothing happened here, so
it means everything passed, right?

78
00:04:08.649 --> 00:04:12.311
但如果这里有问题他们就会出现
But if there were problems
here they would show up.

79
00:04:12.311 --> 00:04:16.045
>> Brian Holt: 好，任何有关 TypeScript的问题吗 ?
&gt;&gt; Brian Holt: Okay,
any questions about TypeScript?

80
00:04:18.903 --> 00:04:19.680
>> Brian Holt: 是否要再次执行该操作 ?
&gt;&gt; Brian Holt: Do you want to do it again?

81
00:04:23.249 --> 00:04:24.084
>> Brian Holt: 我是一个大型的 TypeScript 风扇。
&gt;&gt; Brian Holt: I'm a big TypeScript fan.

82
00:04:24.084 --> 00:04:25.877
我认为在法律上我是有责任的
I think legally I'm obligated to be.

83
00:04:25.877 --> 00:04:28.867
但是我在加入 LinkedIn 之前已经很喜欢了
But also I already liked it
before I joined LinkedIn or

84
00:04:28.867 --> 00:04:30.470
在我加入微软之前
before I joined Microsoft.

85
00:04:33.125 --> 00:04:36.379
我在这里的道德观是我要去
My kind of ethos in here
is that I'm going to,

86
00:04:36.379 --> 00:04:38.430
如果我要做个小项目
if I'm just gonna make
a really small project,

87
00:04:38.430 --> 00:04:41.829
我要用 JavaScript 把它写好然后继续
I'm gonna just write it in JavaScript and
get it done and just move on.

88
00:04:41.829 --> 00:04:45.396
但是如果我写的任何项目我想保留的时间长于
But if I write any sort of project that
I intend on maintaining longer than

89
00:04:45.396 --> 00:04:47.802
就像一周我要在 TypeScript里写
like a week,
I'm gonna write it in TypeScript.

90
00:04:47.802 --> 00:04:50.687
因为我想最终你会获得长期收益
Because I think ultimately you're
gonna get longer term gains.

91
00:04:50.687 --> 00:04:54.415
但权衡你的交易是短期交易
But the tradeoff what you're making
is you're trading off short-term

92
00:04:54.415 --> 00:04:57.240
生产力来提高长期生产力，对吧 ?
productivity for
long-term productivity, right?

93
00:04:57.240 --> 00:04:59.730
写的时间更长。
This takes longer to write.

94
00:04:59.730 --> 00:05:02.180
毫无疑问，打打 " TypeScript" 需要更长时间。
Undoubtedly, it takes
longer to fight TypeScript.

95
00:05:02.180 --> 00:05:04.990
你看到我和编译器打了好几次
You saw me fight
the compiler several times,

96
00:05:04.990 --> 00:05:08.209
啊，对，这个挺甜的，对吧 ?
right, and this was pretty tame, right?

97
00:05:08.209 --> 00:05:11.875
这里可以有一些检修孔让你能去很远的路
There can be some Route holes so
that you just go super far down,

98
00:05:11.875 --> 00:05:13.199
那感觉毫无意义
that feel pointless.

99
00:05:13.199 --> 00:05:15.862
但最终它迫使你思考自己的代码
But in the end,
it forces you to think through your code,

100
00:05:15.862 --> 00:05:19.968
因为你得想，好吧，这从这里的一个串，变成了一个数字，
because you have to think, okay, this goes
from a string here, becomes a number here,

101
00:05:19.968 --> 00:05:21.235
在这里变成了一个物体
goes into an object here.

102
00:05:21.235 --> 00:05:24.584
比如，它迫使你思考这些事情，最终得到更好的编码。
Like, it forces you to think through these
things and you end up with better code.

103
00:05:24.584 --> 00:05:27.860
你会得到额外的保证你的密码不会崩溃的
And you end up with additional assurances
that your code's not gonna crash.

104
00:05:29.600 --> 00:05:33.930
所以如果有人开始对你大喊大叫，每个项目都应该使用 TypeScript ，比如
So if anyone starts yelling at you,
every project should use TypeScript, like,

105
00:05:33.930 --> 00:05:36.490
连 " TypeScript " 小组都不认为是吧
not even the TypeScript team thinks that,
right?

106
00:05:36.490 --> 00:05:38.870
因此，并非所有事情都需要使用 TypeScript。
So not everything needs to use TypeScript.

107
00:05:38.870 --> 00:05:40.519
它有它的地方
It has its place.

108
00:05:40.519 --> 00:05:43.334
但在我看来，每个大工程都应该考虑採用。
But in my opinion, every big project
should really consider adopting it.
