WEBVTT

1
00:00:00.000 --> 00:00:04.282
>> 布莱恩: 我们再去修另一个，让我们去修正细节吧， js 来了。
&gt;&gt; Brian: So let's go fix another one,
let's go fix details,js here.

2
00:00:04.282 --> 00:00:09.173
所以我要去 details.js，我们想说重命名，想重命名
So I'm gonna go to details.js,
we wanna say rename, and we want to rename

3
00:00:09.173 --> 00:00:13.926
这件事很明显它会对很多事情感到不安
this .tsx and obviously it's gonna
be upset about a great many things.

4
00:00:16.300 --> 00:00:18.650
> > 布莱恩: 首先，它会被轮播和
&gt;&gt; Brian: So first of all,
it's gonna be upset by carousel and

5
00:00:18.650 --> 00:00:20.905
错误边界，因为这些边界尚未输入。
error boundary because
those aren't typed yet.

6
00:00:20.905 --> 00:00:22.647
我们以严格的方式
And we have it in strict mode,

7
00:00:22.647 --> 00:00:26.076
这就意味着我们不接受任何 ANY ，对吧 ?
which basically means we
don't accept any ANYs, right?

8
00:00:26.076 --> 00:00:29.189
任何一个都不知道是什么车
And ANY is like,
it doesn't know what carousel is.

9
00:00:29.189 --> 00:00:33.817
就好像，我不知道这是什么，我很不高兴，对吧 ?
So it's just like, I don't know what
this is, and I'm upset about it, right?

10
00:00:33.817 --> 00:00:37.009
所以它会以红色为基础
So it's gonna be underlying this in red,

11
00:00:37.009 --> 00:00:41.676
这将会是一个错误，直到你去处理这个问题。
this is going to be an error until
you go type this one as well.

12
00:00:41.676 --> 00:00:44.496
也许正确的事情是我们可能已经过去了
So probably correct order of things
is we probably could've gone and

13
00:00:44.496 --> 00:00:47.085
先完成了轮播和错误的边界，但我们会得到它。
done carousel and error boundary first,
but we'll get to it.

14
00:00:47.085 --> 00:00:49.752
所以现在让我们来处理这些错误。
So for now let's just deal
with these kinds of errors.

15
00:00:54.104 --> 00:00:56.902
> > 布莱恩: 首先要知道的是， React，
&gt;&gt; Brian: So
the first thing to know is that, React,

16
00:00:56.902 --> 00:01:01.813
你得告诉它它会得到什么样的道具
you have to tell it what kind of props
it's gonna get, for classes that is.

17
00:01:01.813 --> 00:01:04.614
所以我们要给它一个类型的参数
So we're gonna give it
a type parameter here, and

18
00:01:04.614 --> 00:01:07.694
我们会说这是 RouteComponentProps
we're gonna say that this
is a RouteComponentProps.

19
00:01:07.694 --> 00:01:10.513
你可以看到它是什么样的，我想我知道那是什么，对吧 ?
And you can see there that it's like,
I think I know what that is, right?

20
00:01:10.513 --> 00:01:13.783
所以如果我点击它会抓取到路由器的信息
So if I click that it's gonna
grab that from reach router.

21
00:01:17.236 --> 00:01:19.433
> > 布莱恩:
&gt;&gt; Brian: And then this in of itself,

22
00:01:19.433 --> 00:01:24.317
这些 RouteComponentProps 也接受另一个参数。
these RouteComponentProps
also takes another parameter.

23
00:01:24.317 --> 00:01:27.320
这就像是函数调用中的函数调用
So it's like a function call
within a function call and

24
00:01:27.320 --> 00:01:30.537
我们得告诉它你能期望得到什么样的东西
we have to tell it what kind of
things you can expect to get.

25
00:01:30.537 --> 00:01:33.640
所以我们要告诉你我们要找个 id
So we're gonna tell that, hey,
we're expecting to get an id, and

26
00:01:33.640 --> 00:01:34.899
那将会是一个弦
that's gonna be a string.

27
00:01:41.805 --> 00:01:42.469
>> 布莱恩: 好的
&gt;&gt; Brian: Okay, so

28
00:01:42.469 --> 00:01:48.371
现在知道 this.props.id 要么是字符串，要么是未定义的，对吗 ?
now it knows that this.props.id is either
gonna be a string or undefined, right?

29
00:01:48.371 --> 00:01:51.210
因为如果他们到达细节路线
Because what happens if they
get to the details route

30
00:01:51.210 --> 00:01:52.959
没找到 id 对吧
without getting an id, right?

31
00:01:52.959 --> 00:01:55.033
因此，我们必须为此作出规定。
So we have to provide for that.

32
00:01:55.033 --> 00:01:59.703
那么当我们到达 componentDidMount 并且没有字符串时会发生什么 ?
So what happens when we get to
componentDidMount and there's no string?

33
00:01:59.703 --> 00:02:01.522
你在一个受伤的世界里
Well, you're in a world of hurt.

34
00:02:01.522 --> 00:02:05.194
您需要一个标识，否则不应该在详细信息页面上。
You need an id or
you should not be on the details page.

35
00:02:05.194 --> 00:02:09.502
我们告诉 RouteComponents ，对，
We tell that RouteComponents, right,

36
00:02:09.502 --> 00:02:14.706
这将会得到一个 " id:string" 的参数。
that's going to get
a parameter of id:string.

37
00:02:14.706 --> 00:02:18.037
现在基本上说我想你会得到一个 id
Now, it's basically gonna say,
I think you're gonna get an id, but

38
00:02:18.037 --> 00:02:19.234
可能不合适吗
it might not come right?

39
00:02:19.234 --> 00:02:20.661
这就是 id的意思吗
So that's what the id?

40
00:02:20.661 --> 00:02:22.608
就好像我不知道它可能来了
is, like, I don't know, it might come.

41
00:02:22.608 --> 00:02:25.855
所以，这意味着，如果不在那里，我们就必须提供结果。
So that means we have to provide for
what happens if it's not there.

42
00:02:25.855 --> 00:02:30.331
那么，如果我们到达详细信息页面，并且没有提供任何标识，那么会发生什么情况 ?
So what happens if we get to the details
page and there was no id provided?

43
00:02:30.331 --> 00:02:32.834
这就是你和我现在要决定的
That's what you and
I need to decide right now.

44
00:02:32.834 --> 00:02:37.075
如果你上了这一页又没有 id 你不能留着
Well, if you get to this page and
there's no id, you can't stay on this

45
00:02:37.075 --> 00:02:41.987
因为我不能给你看任何宠物给你看的宠物
page because I can't show you any pet if I
don't have any id for the pet to show you.

46
00:02:41.987 --> 00:02:48.289
所以我们会说如果没有这方面的建议
So we're just gonna say if
there is no this.props.id,

47
00:02:48.289 --> 00:02:52.360
你会说导航到 /
you're gonna say navigate to /, so

48
00:02:52.360 --> 00:02:56.841
返回主页，然后返回。
go back to the homepage and then return.

49
00:02:56.841 --> 00:02:59.759
这样就能照顾好一部分了
So that takes care of part of this.

50
00:02:59.759 --> 00:03:03.675
现在我们知道我们到这里的时候了这肯定是在这里
So now we know by the time we get
down here, this is definitely here,

51
00:03:03.675 --> 00:03:05.681
肯定会在那儿的
it's definitely gonna be there.

52
00:03:05.681 --> 00:03:10.019
但问题是，动物期望什么 ?
But the problem is
pet.animal expects what?

53
00:03:10.019 --> 00:03:12.234
这应该是个数字吧
It expects that to be a number, right?

54
00:03:12.234 --> 00:03:14.794
所以让我们在这里做点魔法
So let's just do a little
of magic here and

55
00:03:14.794 --> 00:03:17.436
说你现在是个数字 [ LAUGH] 是吧 ?
say well now you're
a number [LAUGH] right?

56
00:03:17.436 --> 00:03:21.164
所以如果我把那个一元再加上
So if I put that unary plus there it's

57
00:03:21.164 --> 00:03:25.865
会把这个从一个串里变成一个数字
gonna coerce that from
a string into a number.

58
00:03:25.865 --> 00:03:30.139
好了现在它说好了我知道动物是什么
Okay and then now it says okay,
I know what an animal is and

59
00:03:30.139 --> 00:03:31.751
有个动物有名字
an animal has a name.

60
00:03:31.751 --> 00:03:33.484
这是一个字符串，它有一个类型。
And that's a string, and it has a type.

61
00:03:33.484 --> 00:03:35.692
这是一个字符串，它有一个地址。
And that's a string,
and it has an address.

62
00:03:35.692 --> 00:03:37.986
这是一个地址类型的对象。
And that's an object
that's an address type.

63
00:03:37.986 --> 00:03:42.578
如果我点击这个，我可以去，好的，地址。
And if I click on that, I can go,
okay, well, address here.

64
00:03:42.578 --> 00:03:45.466
然后这里有个地址是吧
And then it has an address here, right?

65
00:03:45.466 --> 00:03:47.477
现在我只看类型的定义。
Now I'm just looking at
the type definition.

66
00:03:47.477 --> 00:03:49.468
所以我可以看到一个组织是什么样的 ?
So I can see what does
an organization look like?

67
00:03:49.468 --> 00:03:55.364
它总是有一个名字，但它有一封电子邮件，或者它没有，对吗 ?
It always has a name, but
it has an email or it doesn't, right?

68
00:03:55.364 --> 00:03:58.153
这是我可以看到的非常好的文件。
So this is pretty good
documentation that I can look at.

69
00:03:58.153 --> 00:04:00.067
太棒了因为我写的
It's fantastic because I wrote it.

70
00:04:00.067 --> 00:04:04.931
开玩笑的我是说我确实写过但这不太妙
Just kidding, well I mean I did
write it but it's not fantastic.

71
00:04:04.931 --> 00:04:07.506
我只是通过在这里做 Cmd + click 来设置。
And I just set up by doing Cmd
+ click on something here.

72
00:04:07.506 --> 00:04:09.882
我就像 Cmd + click on contact，
Like I can just Cmd + click on contact,
and

73
00:04:09.882 --> 00:04:13.586
它可以带我进入这个类型的定义来观察它的样子。
it can take me into the type
definition to see what that looks like.

74
00:04:13.586 --> 00:04:18.223
或者你可以把它悬停在它上如果我写了 JS 文档
Or you can just hover on it,
and if I had written JS docs,

75
00:04:18.223 --> 00:04:22.196
你也会在这里看到的对吧
you would've seen those here as well,
right?

76
00:04:22.196 --> 00:04:27.069
如果我在这里看 " React.Component " ，那一个也没有。
Whereas if I look at React.Component here,
that one doesn't have it either.

77
00:04:27.069 --> 00:04:31.779
其中一些文件也会有一些文件。
Some of these will have bits of
documentation with it as well.

78
00:04:31.779 --> 00:04:37.115
比如你拍纪录片之类的东西
Like if you do documents.querySelector,
something like that,

79
00:04:37.115 --> 00:04:40.935
，对，这些都有很好的记录。
right, these ones
are super well documented.

80
00:04:40.935 --> 00:04:43.927
它会告诉您，返回作为节点后代的第一个元素
It will tell you, returns the first
element that is a descendant of the node

81
00:04:43.927 --> 00:04:45.461
和选择器匹配对吧
that matches the selectors, right?

82
00:04:45.461 --> 00:04:48.590
所以实际上它有直接的文档。
So it actually has inline documentation.

83
00:04:48.590 --> 00:04:51.990
但这要求那个人不是懒惰的老师，
But that requires that the person
is not a lazy teacher, and

84
00:04:51.990 --> 00:04:54.106
之前我没做过的
previously did that which I did not.

85
00:04:58.887 --> 00:05:03.334
> > 布莱恩: 好的，这样就能处理好了。
&gt;&gt; Brian: Okay, so
that takes care of this.

86
00:05:03.334 --> 00:05:07.031
任何方式都能真正鼓励我们去做
One of the things that any modes going
to really, really encourage us to do

87
00:05:07.031 --> 00:05:10.505
我们不需要，你可以看到这些是警告，而不是错误。
we don't have to, you can see that
these are warnings, not errors.

88
00:05:10.505 --> 00:05:14.451
这是它想知道的，是这个公开的还是这个私人的 ?
Is that it wants to know is,
is this public or is this private?

89
00:05:14.451 --> 00:05:17.332
嗯，反应成分中的所有东西都是通过反应来调用的。
Well, everything in react component
is being called by react.

90
00:05:17.332 --> 00:05:18.867
所以技术上应该是公开的对吧
So it's technically gonna be public,
right?

91
00:05:18.867 --> 00:05:25.221
所以我想说这是一个公共的国家，这是一个公共部门。
So I'm just gonna say this is a public
state and this is a public component.

92
00:05:25.221 --> 00:05:30.047
ComponentDidMount ，即， right， cuz 反应正在调用这些内容。
ComponentDidMount that is, right,
cuz react is calling into these things.

93
00:05:30.047 --> 00:05:39.042
但是如果我说了， >> 布莱恩: 私事，
But if I said like,
&gt;&gt; Brian: private thing = blah.

94
00:05:39.042 --> 00:05:42.812
现在这是私有的， TypeScript 会捕捉到是否有人要打电话，
So now this is private, TypeScript will
catch if anyone else is trying to call,

95
00:05:42.812 --> 00:05:46.721
就像不，不，不，那是私人的，你别碰那个，对吧 ?
it's like no, no, no, that's private,
you don't get to touch that, right?

96
00:05:46.721 --> 00:05:50.473
但如果是公众的话其他事情就可以了
Whereas if it's public then it's okay for
other things to access it,

97
00:05:50.473 --> 00:05:54.682
但现在 TypeScript 将是 enforcer 以确保这些东西是专用的。
but now TypeScript will be the enforcer
to make sure these things are private.

98
00:05:54.682 --> 00:05:55.973
这也挺酷的
Which is pretty cool as well.

99
00:05:55.973 --> 00:05:57.314
我们今天就不用这个了
We won't be using that today, but

100
00:05:57.314 --> 00:05:59.500
我只是想把它叫做我喜欢的东西
I just wanted to call that out
as something that I liked.

101
00:06:03.903 --> 00:06:10.341
> > 布莱恩: 好的， >> 布莱恩:
&gt;&gt; Brian: Okay,
&gt;&gt; Brian: Everything else here,

102
00:06:10.341 --> 00:06:12.079
它能找到相当好的轮廓
it's able to figure out pretty well.

103
00:06:12.079 --> 00:06:14.990
我是说这不是真的
I mean, this, it doesn't really care for.

104
00:06:14.990 --> 00:06:18.981
如果你愿意的话，你可以输入这个，说这会是一个错误。
If you want to, you can type this and
say this is gonna be an error.

105
00:06:18.981 --> 00:06:22.036
你得把这些放在括号里
And you'll have to put
these in parentheses.

106
00:06:22.036 --> 00:06:24.160
但现在明白了，这是个错误。
But now it knows like okay,
this is an error.

107
00:06:24.160 --> 00:06:27.127
所以你可以在这里提供一些提示。
So you can give little hints here and
there.

108
00:06:27.127 --> 00:06:28.932
所有这些我们都要公开
All of these, we're gonna say public.

109
00:06:33.207 --> 00:06:37.259
>> Brian: this.state.url，它就像嘿，我不知道那是什么。
&gt;&gt; Brian: this.state.url, it's like hey,
I don't know what that is.

110
00:06:37.259 --> 00:06:39.411
你能告诉我那是什么吗
So can you tell me what this.state.url is?

111
00:06:39.411 --> 00:06:41.923
我也不知道这些是什么。
And it's like,
I don't know what these are either.

112
00:06:41.923 --> 00:06:46.293
所以我们有两种方法可以解决这个国家未知的问题。
So there's two ways we can
handle this.state being unknown.

113
00:06:46.293 --> 00:06:48.459
其中一个我们可以在这里
One of them, we could go up here and

114
00:06:48.459 --> 00:06:52.663
我们可以在 RouteComponents 此处提供第二个参数。
we can give it a second parameter
after the RouteComponents here.

115
00:06:52.663 --> 00:06:55.341
第一是道具，第二个是状态。
So the first one is props,
the second one is state.

116
00:06:55.341 --> 00:06:59.637
或者在我看来，如果我们为所有这些都设定一个默认值，
Or in my opinion, better if we go set
a default value for all of these,

117
00:06:59.637 --> 00:07:03.653
TypeScript 会按自己的值来处理所有内容，对吗 ?
TypeScript will figure everything
out just on its own, right?

118
00:07:03.653 --> 00:07:10.257
所以如果我说我要去拿默认值
So if I say,
I'm just gonna go get a default value for

119
00:07:10.257 --> 00:07:15.369
这个名字将会是 " 动物"
name, that's going to be "" animal, "",

120
00:07:15.369 --> 00:07:22.581
位置， ""，描述， ""，介质。
location, "", description, "", media.

121
00:07:22.581 --> 00:07:26.233
这会是个阵列
That's gonna be an array.

122
00:07:26.233 --> 00:07:29.600
" " " 和 " " " 。
url is "" and breed is "".

123
00:07:35.072 --> 00:07:38.644
> > 布莱恩: 所以现在知道了，如果我说你是个动物，
&gt;&gt; Brian: So now it knows okay,
if I say this.state.animal,

124
00:07:38.644 --> 00:07:40.396
那将会是一个弦
that's gonna be a string.

125
00:07:40.396 --> 00:07:41.370
是你告诉我的
You told me that.

126
00:07:43.632 --> 00:07:45.598
>> Brian: 这仅适用于公共类属性。
&gt;&gt; Brian: This only works
with public class properties.

127
00:07:45.598 --> 00:07:48.360
如果你在一个构造函数里面做这个，这不起作用。
If you're doing this inside of
a constructor, this doesn't work.

128
00:07:48.360 --> 00:07:51.836
你得用其他的方法来说
You do have to actually use this
other method of saying, okay,

129
00:07:51.836 --> 00:07:54.737
这会是这个什么的对吧
this is gonna be this and
that and whatever, right?

130
00:07:54.737 --> 00:07:58.456
所以这里的 S 部分是你要给它的状态
So the S part of this is the state
that you're gonna give it.

131
00:08:02.000 --> 00:08:04.127
> > 布莱恩: 但是因为我们有公共阶层的财产，
&gt;&gt; Brian: But
because we have public class properties,

132
00:08:04.127 --> 00:08:05.661
它知道怎么理解这个
it knows how to understand this.

133
00:08:05.661 --> 00:08:06.908
所以我们还有一个问题。
So we have one more problem.

134
00:08:06.908 --> 00:08:09.504
所以注意这些东西现在都很好了
So notice that all this stuff is fine now.

135
00:08:09.504 --> 00:08:12.139
也许我们还有一个问题
We have one more problem, probably.

136
00:08:18.028 --> 00:08:22.197
>> Brian: 请注意，此介质上的类型永远不存在。
&gt;&gt; Brian: Notice that the type
here on this media is a never.

137
00:08:22.197 --> 00:08:23.757
这不是件好事对吧
That's not a good thing, right?

138
00:08:23.757 --> 00:08:27.459
这就意味着，你告诉我这是一个数组，但是
This basically means like, all right
you told me this is an array, but

139
00:08:27.459 --> 00:08:31.596
你没告诉我是什么样的阵列，所以我让你有一个阵列，但是
you didn't tell me what kind of array it
is, so I'll let you have an array, but

140
00:08:31.596 --> 00:08:33.259
不碰它， [LAUGH] 对吧 ?
never touch it, [LAUGH] right?

141
00:08:33.259 --> 00:08:34.995
这就是它跟你说的
That's kind of what it's telling you here.

142
00:08:34.995 --> 00:08:38.585
所以我们得告诉它会有什么样的东西
So we have to tell it what kind
of stuff is gonna go into it.

143
00:08:38.585 --> 00:08:39.765
我来教你怎么做
So I'll show you how to do that.

144
00:08:39.765 --> 00:08:45.009
你要过来跟媒体说你是照片 [ ]
You're gonna come up here to media and
you're gonna say as Photo[ ].

145
00:08:45.009 --> 00:08:50.200
照片要从前面的主人/宠物那里来。
And so Photo is going to come from
frontendmasters/pet right here.

146
00:08:50.200 --> 00:08:52.283
这将是一个照片。
So this is gonna be a Photo.

147
00:08:55.139 --> 00:09:00.072
>> Brian: 现在， >> Brian: 如果我在这里
&gt;&gt; Brian: Now,
&gt;&gt; Brian: If I go down here and

148
00:09:00.072 --> 00:09:04.024
看看媒体，无论去哪里，媒体。
look at media, wherever that went, media.

149
00:09:07.597 --> 00:09:11.472
> > 布莱恩: 会说好的，很酷，你现在可以用了。
&gt;&gt; Brian: It's gonna say okay,
cool, you can use that now.

150
00:09:11.472 --> 00:09:17.791
>> 演讲者 2: 例如，您是否可以使用诸如视频之类的多个媒体类型 ?
&gt;&gt; Speaker 2: Can you use multiple
media types like video, for example?

151
00:09:17.791 --> 00:09:18.851
> > 布莱恩: 你肯定能
&gt;&gt; Brian: You definitely could, and

152
00:09:18.851 --> 00:09:21.077
那你就会有所谓的工会式了吧
then you would have what's
called a union type, right?

153
00:09:21.077 --> 00:09:25.922
那么如果是视频类型，那么您就必须显示 TypeScript ，
So then you would have to show
TypeScript if this is of type video,

154
00:09:25.922 --> 00:09:29.019
那么它就有这种东西，对吧 ?
then it has these kind of things, right?

155
00:09:29.019 --> 00:09:33.801
你必须做一些所谓的改进来了解你的
And you have to do some what's called type
refinement to figure out which kind your

156
00:09:33.801 --> 00:09:36.384
处理，但是可以混合，对。
dealing with, but it can be mixed, right.

157
00:09:36.384 --> 00:09:38.996
我不知道我今天是否要向你展示
I don't know if I'm gonna show
you anything like that today, but

158
00:09:38.996 --> 00:09:40.957
只要查一查就好了你就知道了
just look up type refinement,
and you'll see.

159
00:09:45.307 --> 00:09:46.774
> > 布莱恩: 酷，那是个好问题。
&gt;&gt; Brian: Cool, that was a good question.

160
00:09:50.600 --> 00:09:54.889
> > 布莱恩: 好的，在下面，我们会说，这不是我不知道的
&gt;&gt; Brian: Okay, down here, we're gonna
say, it's not like I don't know what these

161
00:09:54.889 --> 00:09:57.515
道具是我很不自在
props are and
I'm uncomfortable about that.

162
00:09:57.515 --> 00:10:00.107
所以我们首先要告诉它的是
So the first thing we're
gonna tell it here is,

163
00:10:02.484 --> 00:10:04.350
> > 布莱恩: 这些道具
&gt;&gt; Brian: These props are gonna be exactly

164
00:10:04.350 --> 00:10:06.154
就像在这里一样
the same as these ones up here.

165
00:10:06.154 --> 00:10:13.125
因此，您实际上可以只复制+粘贴这些内容。
So you can actually just
Copy+Paste these ones.

166
00:10:13.125 --> 00:10:16.403
在其中包含字符串的 routeComponents 。
The routeComponents with
the string in there.

167
00:10:16.403 --> 00:10:21.071
我们会把它变成那样的
And we're just going to pass
that into that, like that.

168
00:10:24.532 --> 00:10:25.655
> > 布莱恩: 然后一切都很开心
&gt;&gt; Brian: And then everything is happy.

169
00:10:30.682 --> 00:10:35.423
> > 布莱恩: 我想现在唯一不高兴的是这两个
&gt;&gt; Brian: And I think the only thing that
it's upset about right now is these two

170
00:10:35.423 --> 00:10:37.397
从顶部进口，对吗 ?
imports at the top, right?

171
00:10:37.397 --> 00:10:40.517
你可以看到我有红色的感觉就像
So you can see there I have red
right there, and it's like,

172
00:10:40.517 --> 00:10:43.027
这个文件有问题对吧
hey there's problems with this file,
right?

173
00:10:43.027 --> 00:10:47.988
但现在我无法解决这些问题，直到我去修复这些其他文件。
But for now I can't fix these until
I go and fix these other files.

174
00:10:47.988 --> 00:10:51.200
但是如果我把严格的方式关掉，那就好了。
But so if I turn strict mode off of here,
then it would be fine.
