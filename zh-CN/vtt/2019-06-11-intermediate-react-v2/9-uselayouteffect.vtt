WEBVTT

1
00:00:00.560 --> 00:00:02.430
>> Brian: 我们开始使用 LayoutEffect。
&gt;&gt; Brian: Let's go do useLayoutEffect.

2
00:00:04.960 --> 00:00:09.715
如果你想在 DOM里测量点东西
This is pretty much only useful if you
need to measure something in the DOM,

3
00:00:09.715 --> 00:00:10.404
对吧 ?
right?.

4
00:00:10.404 --> 00:00:15.380
所以我有这个文本区域，对，我可以移动这个，对，
So I have this text area, right,
and I can move this, right,

5
00:00:15.380 --> 00:00:19.896
我在这里测量的是宽度和高度
and I'm measuring up here
what the width and height is.

6
00:00:22.282 --> 00:00:24.995
>> Brian: 我正在使用 useLayoutEffect进行此操作。
&gt;&gt; Brian: And
I'm just doing that with useLayoutEffect.

7
00:00:29.067 --> 00:00:32.018
> > 布莱恩: 这样做的时候，它说只要点击这里就可以了，
&gt;&gt; Brian: So what this is doing, it
says any time that there's a click here,

8
00:00:32.018 --> 00:00:34.682
将宽度设置为 0，这会启动重新呈现，对吗 ?
set the width to 0,
which kicks off a re-render, right?

9
00:00:34.682 --> 00:00:39.185
然后，一旦重新呈现，它就会调用 useLayoutEffect。
And then once that re-render happens
then it'll call useLayoutEffect.

10
00:00:39.185 --> 00:00:42.722
这样我就可以进去渲染
Which allows me to then go in and
render, or

11
00:00:42.722 --> 00:00:48.640
衡量这个元素是什么，我在这里存储的是一个引用，对吧 ?
measure what the element is,
which I'm storing here in a ref, right?

12
00:00:51.960 --> 00:00:53.609
所以注意这有点奇怪对吧
So notice that this is kinda weird, right?

13
00:00:53.609 --> 00:00:56.560
我将宽度设置为 0，对，不是 0，但是
I'm setting width to 0,
right, which is not 0, but

14
00:00:56.560 --> 00:01:00.424
这就能让我去测量它了对吧
this kicks off a re-render which
then allows me to measure it, right?

15
00:01:02.286 --> 00:01:07.176
>> 布莱恩: 这件事有趣的是，他们叫海特 ( 0)。
&gt;&gt; Brian: So what's interesting
about this, they call setwidth(0).

16
00:01:07.176 --> 00:01:10.528
这将启动重新呈现，然后调度 LayoutEffect。
This kicks off a re-render,
which then schedules a LayoutEffect.

17
00:01:10.528 --> 00:01:16.150
然后调用这些设置，然后调用这些 setWidth 和 setHeight。
Which then measures this and
then calls these setWidth and setHeight.

18
00:01:16.150 --> 00:01:20.289
而另一个则是稳定的，对吧 ?
Which kicks off another render,
which then is stable, right?

19
00:01:20.289 --> 00:01:22.159
所以这有两个人在其中。
So this has a couple renders in it.

20
00:01:22.159 --> 00:01:25.239
这听起来很低效，但这是唯一衡量它的方法，对吧 ?
It sounds inefficient, but it's the only
way that actually measure it, right?

21
00:01:25.239 --> 00:01:27.049
库兹你得等它完成测量
Cuz you have to wait for
it to finish measuring.

22
00:01:28.359 --> 00:01:32.704
好消息是在这里两次呼叫呈现功能的时候
And the good news is while it calls
the render function twice here,

23
00:01:32.704 --> 00:01:37.531
这个 LayoutEffect 组件两次，它实际上只画一次。
this LayoutEffect component twice,
it actually only paints once, so.

24
00:01:40.487 --> 00:01:43.692
>> Brian: 再次，如果您正在为 jQuery 或 D3 进行度量之类的操作，并且
&gt;&gt; Brian: Again, if you're doing something
like measuring stuff for jQuery or D3 and

25
00:01:43.692 --> 00:01:46.409
把它变成别的东西你就是这样做的
passing it into something else,
this is how you would do it.

26
00:01:46.409 --> 00:01:50.509
但通常你不一定要这样做。
But typically you would not
necessarily do that here.

27
00:01:51.689 --> 00:01:55.659
这就像使用 LayoutEffect一样，就像效果一样。
Now this is just like,
useLayoutEffect, is just like effect.

28
00:01:55.659 --> 00:02:00.150
它的工作方式是一样的，在这里也有同样的排列。
It works exactly the same way,
it has the same array here, as well.

29
00:02:00.150 --> 00:02:03.700
所以如果我这样做，就不会再采取任何措施了，对吗 ?
So if I did this, this will no
longer measure anything, right?

30
00:02:03.700 --> 00:02:06.688
0 就 0 ，对吧 ?
It will send to 0 and
leave it at 0, right?

31
00:02:06.688 --> 00:02:10.069
所以工作方式也是一样的。
So works exactly the same way.

32
00:02:10.069 --> 00:02:12.709
是使用效果的唯一区别是
Really the only difference
between useEffect and

33
00:02:12.709 --> 00:02:16.305
useLayoutEffect 是您执行 useEffect 的预定时间。
useLayoutEffect is if you do
useEffect it's scheduled for later.

34
00:02:16.305 --> 00:02:18.498
几乎是立即的，对，但是
Which is almost immediate, right, but

35
00:02:18.498 --> 00:02:22.314
在调度和发生之间进行技术上的异步
it's technically asynchronous
between scheduling and happening.

36
00:02:22.314 --> 00:02:25.530
LayoutEffect 在技术上是同步的，对吧 ?
Whereas LayoutEffect is
technically synchronous, right?

37
00:02:25.530 --> 00:02:27.889
发生了 Render ， LayoutEffect 发生并且
Render happens then
LayoutEffect happens and

38
00:02:27.889 --> 00:02:30.550
它是同步的它们就在彼此之间对吧
it's synchronous,
they're right next to each other, right?

39
00:02:31.550 --> 00:02:32.537
这就是区别
That's the difference.

40
00:02:34.754 --> 00:02:38.132
> > 布莱恩: 另一个有趣的事情是我
&gt;&gt; Brian: Another interesting
thing here to call out here is I

41
00:02:38.132 --> 00:02:41.460
用 el 来做一个 useRef 对吧
do a useRef right here using el, right?

42
00:02:41.460 --> 00:02:46.670
然后我就在说 textarea 和 ref = {el}
And then here,
I'm just saying textarea and ref = {el}.

43
00:02:46.670 --> 00:02:51.240
这将执行的操作是将实际的 DOM 组件实际存储在此处。
What this will do is it'll actually
store the actual DOM component here.

44
00:02:51.240 --> 00:02:54.599
所以如果我说的是 console.log ( el) ，
So if I said console.log(el) right here,

45
00:02:54.599 --> 00:02:57.810
它会把这个组件给我
it would actually give
me this component here.

46
00:02:57.810 --> 00:02:59.310
我们就这么做吧
Let's just do it.

47
00:02:59.310 --> 00:03:05.008
因此，如果我说控制台， >> Brian: console.log(el)，
So if I say console,
&gt;&gt; Brian: console.log(el),

48
00:03:05.008 --> 00:03:11.050
可能是第一次没定义，是吧 ?
it'll be probably undefined
the first time, which it is, right?

49
00:03:11.050 --> 00:03:13.194
它会第一次出现但它还不存在
Cuz it'll render the first time and
it doesn't exist yet.

50
00:03:13.194 --> 00:03:16.347
然后第二次告诉我，好吧，这是一个文本区域。
And then the second time it'll tell me,
okay, this is a text area.
