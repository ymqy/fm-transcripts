WEBVTT

1
00:00:00.500 --> 00:00:01.618
> > 布莱恩 - 霍尔特: 我们要再做一次测试
&gt;&gt; Brian Holt: We're
gonna do one more test,

2
00:00:01.618 --> 00:00:02.996
最黑的就是其中一个
which is the hairiest one of them all.

3
00:00:05.570 --> 00:00:11.038
> > Brian Holt: 我们会说，
&gt;&gt; Brian Holt: And we're gonna say expect,

4
00:00:11.038 --> 00:00:18.478
其中， container.firstChild
where is that, container.firstChild

5
00:00:18.478 --> 00:00:23.518
toMatchInlineSnapshot。
toMatchInlineSnapshot.

6
00:00:27.082 --> 00:00:30.246
> > Brian Holt: 就是这样。
&gt;&gt; Brian Holt: That's it.

7
00:00:30.246 --> 00:00:35.219
所以，快照是什么，它是否会把这件事全部渲染出来。
So, what a snapshot is, is it's going
to go render this entire thing out.

8
00:00:35.219 --> 00:00:38.597
第一次运行它，它就会把所有标记都甩在里面。
And the first time it runs it, it's just
going to dump all the markup in there.

9
00:00:38.597 --> 00:00:41.512
然后就会说我每次都想
And then it's gonna say,
I assume every time after this,

10
00:00:41.512 --> 00:00:43.500
会匹配的对吧
it's going to match, right?

11
00:00:43.500 --> 00:00:50.700
所以如果我说 npm 运行测试，它会写一个新的快照。
So if I say npm run test,
it's gonna say one new snapshot's written.

12
00:00:50.700 --> 00:00:53.780
你可以进去看看这就是它的样子
And you can go in here and you can see,
this is what it looks like

13
00:00:56.039 --> 00:01:00.369
给出了输入对吗
given that input, right?

14
00:01:03.530 --> 00:01:05.500
例如，如果我详细说明。
So if I go into details, for example.

15
00:01:05.500 --> 00:01:08.094
或者不详细，让我们看看 SearchParams。
Or not details,
let's look at SearchParams.

16
00:01:11.219 --> 00:01:13.769
>> Brian Holt: 我只需要一点点更改标记。
&gt;&gt; Brian Holt: And
I change the markup just a little bit.

17
00:01:13.769 --> 00:01:18.590
假设这是地点也许他们不在那里我不知道
Let's say this is location, cuz maybe
they're not living there, I dunno.

18
00:01:19.950 --> 00:01:23.799
我再跑一次它会失败的对吧
And I run this again,
it'll fail the test, right?

19
00:01:23.799 --> 00:01:27.650
因为现在它已经分叉了，对。
Because now it's diverged, right.

20
00:01:27.650 --> 00:01:32.192
它会说嘿你说过这会匹配的
It's gonna say, hey,
you said that this was gonna match, and

21
00:01:32.192 --> 00:01:34.180
现在上面写着问号。
now it says question mark.

22
00:01:34.180 --> 00:01:35.900
我不知道该怎么做对吧
Like, I don't know what to do with this,
right?

23
00:01:37.439 --> 00:01:39.801
这就是我所说的低信任度测试。
So this is what I would
call a low-confidence test.

24
00:01:39.801 --> 00:01:43.109
低努力，低信任度，但也免费，对吗 ?
It's low-effort, low-confidence,
but it's also free, right?

25
00:01:43.109 --> 00:01:49.000
我就像快照一样，现在我可以看到，如果我在这里改变一些东西，
I just match the snapshot, and now I can
see, if I change something over here and

26
00:01:49.000 --> 00:01:53.150
那是个问题，对吧 ?
the snapshot's breaking over there,
that's a problem, right?

27
00:01:53.150 --> 00:01:56.069
但让我们说，我打算把这些问号放在那里。
But let's say I intended to put
those question marks there.

28
00:01:56.069 --> 00:02:01.781
我要做的就是说哎呀
All I have to do is say, oops,

29
00:02:01.781 --> 00:02:07.034
终端， npm 运行测试和
terminal, npm run test and

30
00:02:07.034 --> 00:02:13.439
然后我就提出 -- -- 更新。
then I just put -- --update.

31
00:02:13.439 --> 00:02:17.006
这就意味着我要更新
Which basically means I'm
saying jest --update.

32
00:02:17.006 --> 00:02:20.060
所以这就意味着把这个传给 jest，对吧 ?
So this -- means pass this on to jest,
right?

33
00:02:21.099 --> 00:02:24.650
所以如果我这样做，或者不是，对不起，不是那样。
So if I run that this way, or
it's not, sorry, it's not that.

34
00:02:24.650 --> 00:02:26.294
是 -u的
It's -u.

35
00:02:28.719 --> 00:02:30.219
你是说要这么做吗
It's gonna say, you meant to do that?

36
00:02:30.219 --> 00:02:33.560
好的，我要更新我的快照。
Okay, I'm going to update my snapshot.

37
00:02:33.560 --> 00:02:40.849
现在，如果我们回到这里，到我的搜索站，如果我放了位置，对吗 ?
And so now, if we go back in here, to my
search params, if I put location, right?

38
00:02:40.849 --> 00:02:43.400
现在你看到它写在里面了
Now you see it's written in there.

39
00:02:43.400 --> 00:02:44.060
这很酷
Which is cool.

40
00:02:47.379 --> 00:02:51.229
所以我就把这个放在你的包里。
So I would just say put that
in your package.json as well.

41
00:02:51.229 --> 00:02:52.167
所以你有测试
So you have test.

42
00:02:52.167 --> 00:02:56.444
我要再放一条
I would put another line that's

43
00:02:56.444 --> 00:03:01.204
测试:更新并放入 -u 。
test:update and put -u in there.

44
00:03:01.204 --> 00:03:05.135
我们再给你们看两个
And we're gonna show you two more,

45
00:03:05.135 --> 00:03:09.469
测试手表是最热的手表
test watch, which is jest --watch.

46
00:03:09.469 --> 00:03:13.520
测试 : 覆盖范围，正在进行
And test:coverage, which is going

47
00:03:13.520 --> 00:03:18.301
是， >> Brian Holt: jest --覆盖范围。
to be,
&gt;&gt; Brian Holt: jest --coverage.

48
00:03:18.301 --> 00:03:21.301
那么 jest --覆盖范围。
So jest --coverage.

49
00:03:24.681 --> 00:03:27.276
>> Brian Holt: 好的，我给你看了什么更新。
&gt;&gt; Brian Holt: Okay, so
I showed you what update is.

50
00:03:27.276 --> 00:03:28.996
如果你现在晚上做测试
If you do npm run test watch now,

51
00:03:28.996 --> 00:03:32.183
就会变成一种互动模式
it's gonna go into an interactive
mode that's gonna see,

52
00:03:32.183 --> 00:03:36.346
每次你保存密码的时候都会重新运行你的测试对吧
everytime that you save your code,
it's going to rerun your tests, right?

53
00:03:36.346 --> 00:03:38.960
然后它只会重新运行失败的测试。
And then it's going to only
rerun tests that are failing.

54
00:03:40.530 --> 00:03:42.599
所以我要点击一下它会运行我所有的测试
So I'm just gonna click a, and
it's gonna run all my tests, and

55
00:03:42.599 --> 00:03:43.810
它会说一切都很好
it's gonna say, everything's fine.

56
00:03:45.990 --> 00:03:49.539
因此，它会将它放入此交互方式，以便您可以对测试进行测试。
And so, it puts it into this interactive
mode so that you can fix tests on the fly.

57
00:03:49.539 --> 00:03:51.288
真的挺不错的
It's really quite nice.

58
00:03:51.288 --> 00:03:55.013
所以你只能说改变那些做了这样的事的人。
So you can say only change ones
that have done something like that.

59
00:03:55.013 --> 00:04:00.962
或者如果我现在进入 SearchParams ， SearchParams ，
Or if I go into SearchParams right now,
SearchParams,

60
00:04:00.962 --> 00:04:05.403
然后说地点我现在就改了
and say location, and I change this now.

61
00:04:05.403 --> 00:04:07.110
让它失败
And make it fail.

62
00:04:07.110 --> 00:04:09.610
它会再次运行测试，因为它看到这个改变了。
It'll run that test again because
it sees that this one's changed.

63
00:04:09.610 --> 00:04:11.524
就好像这个失败了对吧
It's like, this one failed, right?

64
00:04:14.258 --> 00:04:17.817
>> Brian Holt: 因此，它会将其放入此交互方式，这真的很酷。
&gt;&gt; Brian Holt: And so it puts it into this
interactive mode, which is really cool.

65
00:04:20.230 --> 00:04:21.810
> > Brian Holt: 最后一件事我想给你看，
&gt;&gt; Brian Holt: Last
thing I wanna show you,

66
00:04:21.810 --> 00:04:27.505
让我们把它重新回到过去
let's just put this back the way it was so
it passes again.

67
00:04:31.257 --> 00:04:32.790
>> Brian Holt: 在那里，它通过了。
&gt;&gt; Brian Holt: There, it passed.

68
00:04:32.790 --> 00:04:37.216
我想给你们看最后一件事如果我晚上做测试
So last thing I want to show you here,
if I do npm run tests:coverage,

69
00:04:37.216 --> 00:04:41.716
如果你知道这到底是什么情况
this is going to run istanbul on your
project, if you know what that is,

70
00:04:41.716 --> 00:04:44.470
这是一个测试覆盖工具。
which is a test coverage tool.

71
00:04:44.470 --> 00:04:47.199
所以，现在让我们把它变得更大些。
So, now let's just make this
maybe a little bit bigger.

72
00:04:48.600 --> 00:04:53.584
给我一个好的图表，就像，好的，你的宠物组件有 100% 的语句
Gives me a nice graph, it's like, okay,
your pet component has 100% of statements

73
00:04:53.584 --> 00:04:58.788
它覆盖了 50 % 的树枝， 100% 的功能和 100% 的线条。
covered, it has 50% of branches, 100%
of functions and 100% of lines covered.

74
00:04:58.788 --> 00:05:01.939
所以说，嘿，你漏了这个，对吧 ?
So it's saying, hey,
you're missing this one though, right?

75
00:05:01.939 --> 00:05:06.079
因此，它让您知道测试覆盖率实际上覆盖了多少代码库。
So it lets you know how much of your code
base is actually covered by test coverage.

76
00:05:07.230 --> 00:05:08.393
现在，我们实际上可以更进一步。
Now, we can actually go
one further than this.

77
00:05:08.393 --> 00:05:13.391
它生成了此 lcov 目录，或者不生成覆盖目录。
It generated this lcov directory,
or no, coverage directory.

78
00:05:13.391 --> 00:05:15.045
因此， cd 覆盖范围。
So cd coverage.

79
00:05:15.045 --> 00:05:17.286
如果你进入 lcov 目录
And then if you go into
the lcov directory,

80
00:05:17.286 --> 00:05:21.290
我不知道这到底代表什么但是 lcov-report
which I don't know what that really
stands for, but, lcov-report.

81
00:05:21.290 --> 00:05:24.860
然后我说打开 index.html
And then I say open index.html.

82
00:05:24.860 --> 00:05:26.644
这会在我的浏览器中打开
This is gonna open this in my browser, and

83
00:05:26.644 --> 00:05:29.819
它会给我一个很棒的小仪表板
it's gonna give me a nice little
dashboard of all this stuff.

84
00:05:29.819 --> 00:05:32.170
所以我可以点击来使用下拉
So I can actually click
in to use drop down, and

85
00:05:32.170 --> 00:05:34.625
看我错过了这些线对吧
see, I missed these lines, right.

86
00:05:34.625 --> 00:05:36.470
这永远不会跑的对吧
This never gets run, right?

87
00:05:36.470 --> 00:05:38.117
但我可以在这里看到这部分
But I can see this part right here.

88
00:05:38.117 --> 00:05:39.750
这已经跑了 19 次了
This got run 19 times.

89
00:05:39.750 --> 00:05:41.689
所以说真的很不错吧
So it's real good to go, right?

90
00:05:43.930 --> 00:05:45.649
这就给了我一个很好的仪表板。
So this gives me like a nice dashboard.

91
00:05:45.649 --> 00:05:49.170
我可以看到，我还有其他的文件，这些文件根本不包括在这里。
And I can see, I have other files here
that are not covered at all, for example.

92
00:05:50.930 --> 00:05:51.569
再一次
So again,

93
00:05:51.569 --> 00:05:56.189
我不太喜欢用测试覆盖率作为代码质量的度量。
I don't really like using test coverage
too much as a metric of code quality.

94
00:05:56.189 --> 00:06:01.019
我想这就像是用几个钉子来测量房子，这很奇怪。
I think it's like measuring a house by how
many nails you put into it, which is odd.

95
00:06:01.019 --> 00:06:02.589
好吧好吧
But okay, sure, right.

96
00:06:02.589 --> 00:06:06.709
这也许是指示性的，但绝对不像因果关系，对。
It's maybe indicative, but
definitely not like causative, right.

97
00:06:08.319 --> 00:06:12.350
所以我觉得如果你有 100% 的测试覆盖率，你会写太多的测试。
So I think if you have 100% test coverage,
you're writing too many tests.

98
00:06:12.350 --> 00:06:13.117
只是我的意见
Just my opinion.

99
00:06:16.740 --> 00:06:17.420
> > Brian Holt: Cool.
&gt;&gt; Brian Holt: Cool.

100
00:06:17.420 --> 00:06:20.399
我给你看的测试有什么问题吗
Any questions about
tests that I showed you?

101
00:06:20.399 --> 00:06:21.439
这并非详尽无遗。
This is not exhaustive.

102
00:06:21.439 --> 00:06:24.240
这只是你第一次对它的原谅
This is just kind of
your first foray into it.

103
00:06:24.240 --> 00:06:26.439
如果你想了解更多，去看肯特的课程。
And if you want to learn more,
go watch Kent's course.

104
00:06:29.970 --> 00:06:31.250
>> Brian Holt: 是否有其他问题 ?
&gt;&gt; Brian Holt: Any other
questions in general?

105
00:06:31.250 --> 00:06:34.192
这就是中间反应的结束
That's the end of intermediate React.

106
00:06:34.192 --> 00:06:37.454
>> [APPLAUSE]
&gt;&gt; [APPLAUSE]
