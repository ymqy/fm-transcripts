WEBVTT

1
00:00:00.000 --> 00:00:03.890
威尔 · 森特斯: 有人能提出一个更好的方法吗
&gt;&gt; Will Sentance: Can
anybody propose a better way

2
00:00:05.169 --> 00:00:08.939
每个用户都有每个函数的副本更重要吗？
than having copies of each
function on every single user?

3
00:00:08.939 --> 00:00:12.039
但是记住我还是想做这个。
But remembering I still
wanna be able to do this.

4
00:00:12.039 --> 00:00:14.279
好吧，先等一下。
Well, hold on that thought for a moment.

5
00:00:15.369 --> 00:00:16.370
有人能想出更好的办法吗？
Can someone think of a better way?

6
00:00:16.370 --> 00:00:20.829
杰夫，你有一个苦笑，你想。
Jeff, you've got a wry smile on,
you wanna.

7
00:00:20.829 --> 00:00:24.469
杰夫: 嗯，你可以用一个项目来创建一个原型。
&gt;&gt; Jeff: Well, you could use
a project create a prototype.

8
00:00:24.469 --> 00:00:28.175
威尔 · 森坦斯: 是的，也许凯利，你会有一个直观上可以想到的想法
&gt;&gt; Will Sentance: Yes, maybe Kelly, you
will have a thought what intuitively could

9
00:00:28.175 --> 00:00:32.488
而不是把我们所有的函数复制到每一个对象上？
we do rather than have copies of all our
functions one on every single object?

10
00:00:32.488 --> 00:00:34.884
我们能做什么，只是在一个非常直接的感觉，托德？
What could we do, just in a very
straightforward sense, Todd?

11
00:00:34.884 --> 00:00:38.420
托德: 嗯，我只是有一个主要用户，我们可以参考每个。
&gt;&gt; Todd: Well, I just have a main
user that we can reference each.

12
00:00:40.399 --> 00:00:42.909
威尔 · 森坦斯: 很接近，非常，非常直观和简单，布雷顿？
&gt;&gt; Will Sentance: Close, just very,
very intuitive and simple, Braydon?

13
00:00:42.909 --> 00:00:45.469
让函数接受你正在使用的对象。
&gt;&gt; Braydon: Make functions that
accept the object you're using.

14
00:00:45.469 --> 00:00:47.079
威尔 · 森塔斯: 这是另一种方式，但问题是,
&gt;&gt; Will Sentance: That is another way,
but the problem with that then,

15
00:00:47.079 --> 00:00:49.609
然后我们回到旧世界，我的功能在哪里？
then we fall back into the old
world of where's my function?

16
00:00:49.609 --> 00:00:51.110
我可以把它应用到任何事情上。
I can apply it to anything.

17
00:00:51.110 --> 00:00:53.576
所以，我们希望它们以同样的方式捆绑，是吗，马特？
So, we want them to be bundled
in the same way, yeah, Matt?

18
00:00:53.576 --> 00:00:54.865
马特: 只要添加一个函数就行了。
&gt;&gt; Matt: Just add the one function.

19
00:00:54.865 --> 00:00:59.387
只要在一个对象中添加一个函数
&gt;&gt; Will Sentance: Just add
the one function in an object and

20
00:00:59.387 --> 00:01:04.043
不知何故，JavaScript 知道当它
somehow have JavaScript know that when it

21
00:01:04.043 --> 00:01:09.632
在 user2上没有找到 increment，没有放弃。
doesn't find increment on user2,
not give up.

22
00:01:09.632 --> 00:01:16.698
在 user2上没有增量函数。
Have us no increment function on user2.

23
00:01:16.698 --> 00:01:21.682
在 user1上没有增量函数，但是
No increment function on user1, but

24
00:01:21.682 --> 00:01:27.031
一个单一的物体，威尔 · 森坦斯: 我们
a single object,
&gt;&gt; Will Sentance: We

25
00:01:27.031 --> 00:01:31.737
可以称之为，我不知道，功能商店。
could call it, I don't know,
function store.

26
00:01:31.737 --> 00:01:36.112
我们会使用一个函数，所以我不知道
We'll use a function, so I don't know, and

27
00:01:36.112 --> 00:01:40.497
这里有我们的增量功能。
in there have our increment functionality.

28
00:01:40.497 --> 00:01:45.775
并且希望 JavaScript 有一些特性
And somehow hope that
JavaScript has some feature

29
00:01:45.775 --> 00:01:50.180
那就意味着当它找不到。
that will mean that when it does not find.

30
00:01:50.180 --> 00:01:56.277
它转到 user2，寻找内存，寻找增量属性,
It goes user2, looks for the memory,
looks for the increment property on it,

31
00:01:56.277 --> 00:02:02.373
不会发现，不会惊慌，不会放弃，但是不知怎么的，知道要去
doesn't find, doesn't panic, doesn't
give up, but somehow knows to go and

32
00:02:02.373 --> 00:02:07.290
找到这个对象中的函数，抓取它的代码，并运行它。
find the function in this object,
grabs its code, and runs it.

33
00:02:07.290 --> 00:02:09.694
这正是 JavaScript 要做的。
And that's exactly what
JavaScript's gonna do.

34
00:02:11.175 --> 00:02:16.335
原型链，我们将增量函数存储在一个对象中。
The prototype chain, we're gonna store
the increment function in just one object.

35
00:02:16.335 --> 00:02:18.064
然后让 JavaScript 解释它。
And have the JavaScript interpret it.

36
00:02:18.064 --> 00:02:20.045
这就是看着它的部分，然后问我该怎么处理它？
That's the bit that looks at it and
goes what do I do with that?

37
00:02:20.045 --> 00:02:21.014
这个词是什么意思？
What's this word mean?

38
00:02:21.014 --> 00:02:21.844
我去找那个。
While I go look for that.

39
00:02:23.365 --> 00:02:28.090
如果没有在 user1上找到函数，或者在本例中没有在 user2上找到函数,
Have it, if it doesn't find the function
on user1, or in this case user2,

40
00:02:28.090 --> 00:02:34.560
不是放弃，而是以某种方式查找对象，找到 increment 并使用它。
not give up, but somehow look up to
that object, find increment, and use it.

41
00:02:34.560 --> 00:02:41.055
我们必须链接 user1或 user2，以及我创建的函数存储对象。
We've gotta link user1 or user2, and this
function store object that I've created.

42
00:02:41.055 --> 00:02:44.211
所以解释器，我们没有发现增量,
So the interpreter,
we're not finding increment,

43
00:02:44.211 --> 00:02:48.081
一定要检查功能商店，它会找到它。
makes sure to check up to function store,
where it would find it.

44
00:02:48.081 --> 00:02:54.399
正如 Jeff 所暗示的那样，使用 object.create 技术创建链接。
And exactly as Jeff hinted, make that
link using the object.create technique.

45
00:02:54.399 --> 00:02:57.752
这里是人们。
Here it is people.

46
00:02:57.752 --> 00:03:01.984
看看，用户创建的函数是如何改变的，我们还在创建我们的新用户。
Have a look, how user created functions
change, we're still making our new user.

47
00:03:01.984 --> 00:03:07.585
但现在我们使用对象 create 技术来创建对象,
But now we're using the object.create
technique to create the object,

48
00:03:07.585 --> 00:03:08.948
看看这个。
and look at this.

49
00:03:08.948 --> 00:03:11.655
它仍然是一个空物体。
It's still gonna be an empty object.

50
00:03:11.655 --> 00:03:16.899
但是我有一种感觉，事实上我们正在通过用户功能存储,
But I have a feeling that the fact that
we're passing in user function store,

51
00:03:16.899 --> 00:03:19.802
我们称之为用户函数存储,
we're gonna call it user function store,

52
00:03:19.802 --> 00:03:24.334
看起来是一个更大的有两个函数的物体。
which is by the looks of it a bigger
object here with two functions.

53
00:03:24.334 --> 00:03:27.957
我添加了另外一个，增量和登录。
I've added another one,
increment and login.

54
00:03:27.957 --> 00:03:33.158
我在这个物体的幕后有一个链接。
And I'm somehow gonna have a link
behind the scenes on this object.

55
00:03:33.158 --> 00:03:35.865
不会有递增函数。
There's gonna be no increment function.

56
00:03:35.865 --> 00:03:38.358
上面不会有递增函数。
There's gonna be no
increment function on it.

57
00:03:38.358 --> 00:03:40.825
有人看到我给新的用户对象添加了一个增量函数吗？
Anybody see me adding an increment
function to new user object?

58
00:03:40.825 --> 00:03:42.243
我没看到。
I don't see one.

59
00:03:42.243 --> 00:03:48.746
但不知怎么的，它会有一个链接到共享存储功能。
But somehow it is gonna have a link
to the shared storage functions.

60
00:03:48.746 --> 00:03:51.156
也就是说当我们把物体放回去时,
Meaning when we return the object out,

61
00:03:51.156 --> 00:03:54.671
那个链接仍然是共享的存储功能。
that link is gonna still be
that shared store functions.

62
00:03:56.764 --> 00:03:58.384
威尔 · 森特斯: 这将会非常非常好。
&gt;&gt; Will Sentance: It's gonna be very,
very nice.

63
00:03:58.384 --> 00:03:58.995
顺便说一句,
By the way,

64
00:03:58.995 --> 00:04:03.330
这种方法可以从根本上实现我们想要的一切。
this approach here is gonna fundamentally
achieve all the things we wanna achieve.

65
00:04:03.330 --> 00:04:07.084
除了需要写一些代码之外。
Besides the fact that it's gonna
involve a bit of writing a code.

66
00:04:07.084 --> 00:04:10.138
也许有一些简单的方法可以达到这个目的。
And there might be some shorthand
ways of achieving this.

67
00:04:10.138 --> 00:04:11.490
解决方案三
And solution three and

68
00:04:11.490 --> 00:04:15.659
四个只会缩短做这件事的时间。
four are just gonna be shortened
ways of doing just this thing.

69
00:04:15.659 --> 00:04:17.079
这是绝对的核心。
This is the absolute core.
