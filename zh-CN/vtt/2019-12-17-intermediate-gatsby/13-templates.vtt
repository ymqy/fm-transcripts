WEBVTT

1
00:00:00.370 --> 00:00:05.509
杰森 · 兰斯托夫: 现在我们可以获得定制数据,
&gt;&gt; Jason Lengstorf: Now that we
are able to get that custom data,

2
00:00:05.509 --> 00:00:06.839
我们可以开始使用它。
we can start using it.

3
00:00:06.839 --> 00:00:11.742
让我们把这些东西放到屏幕上。
So let's get these stuff
up onto the screen.

4
00:00:11.742 --> 00:00:14.513
所以我们首先需要的是反应组分
So the first thing that we're gonna need
is we're gonna need react components

5
00:00:14.513 --> 00:00:16.510
在屏幕上显示这些东西。
to actually show this stuff on the screen.

6
00:00:16.510 --> 00:00:21.920
让我们来看看我们的主题文档。
So let's get into our theme docs.

7
00:00:21.920 --> 00:00:24.399
我们要创造一些新的东西。
And we're gonna create
a couple new things.

8
00:00:24.399 --> 00:00:26.379
所以我们首先需要的是一个模板。
So the first thing we want is a template.

9
00:00:26.379 --> 00:00:31.969
这是一个我喜欢的惯例，但并不是必须的。
And this is a convention that I like,
but that is not required.

10
00:00:31.969 --> 00:00:35.030
每当我在《了不起的盖茨比》中以编程方式创建页面时,
Whenever I create pages
programmatically in Gatsby,

11
00:00:35.030 --> 00:00:40.289
我喜欢把它们称为模板，即盖茨比使用的组件
I like to call them templates
the component that gets used by Gatsby's

12
00:00:40.289 --> 00:00:43.920
在 page create 中，我称之为模板，并将它们保存在单独的目录中。
on page create, I call that a template and
I keep those in a separate directory.

13
00:00:43.920 --> 00:00:48.131
所以我要创建源模板和
So I'm gonna create source templates and

14
00:00:48.131 --> 00:00:52.740
我将这个文档页面命名为 template.js。
I'll call this one docs page template.js.

15
00:00:52.740 --> 00:00:58.399
在它里面，我要进口反应从反应和
And inside of it,
I'm going to import react from react and

16
00:00:58.399 --> 00:01:03.950
我将导入 MDXRenderer，所以这是一个
I will import the MDXRenderer,
so this is the helper that

17
00:01:03.950 --> 00:01:08.640
我之前提到过，这将有助于我们展示 MDX 内容是代码。
I was talking about awhile back that'll
help us show that MDX stuff is code.

18
00:01:08.640 --> 00:01:12.268
所以 MDX 给了我们这个，比如这个函数和其他东西
So MDX gives us this,
like this functions and stuff, and

19
00:01:12.268 --> 00:01:17.182
提取出我们使用的布局组件，它包装了所有相同的 MDX
that pulls out that layout component that
we use and it wraps up all the same MDX

20
00:01:17.182 --> 00:01:22.115
这样，如果我们在 MDX 文件中写 React，它就会被渲染。
stuff, so that if we write React inside
of our MDX files it'll get rendered.

21
00:01:22.115 --> 00:01:24.560
但是我们不想手动解析它。
But we don't wanna have
to manually parse that.

22
00:01:24.560 --> 00:01:30.329
因此，Docs 页面模板要做一件事，那就是加载数据。
So the Docs page template is going
to do one thing, which is load data.

23
00:01:30.329 --> 00:01:33.659
然后我们将构建一个 Docs 页面组件来显示数据。
And then we'll build a Docs page
component that will display data.

24
00:01:33.659 --> 00:01:37.991
这是一个非常慎重的选择，将数据的来源分开,
And that's a very deliberate choice
to separate the sourcing of the data,

25
00:01:37.991 --> 00:01:42.665
从数据的显示，因为它的意思是，如果我想作出改变
from the display of the data, because what
it means is that if I wanna make changes

26
00:01:42.665 --> 00:01:47.271
我不想重写整个查询
to one or the other, I don't necessarily
wanna have to rewrite the full query or

27
00:01:47.271 --> 00:01:49.021
重写整个组件。
rewrite the full component.

28
00:01:49.021 --> 00:01:53.042
当我们进入组件阴影时，就更容易理解为什么会这样了
When we get into component shadowing it's
a little easier to understand why that's

29
00:01:53.042 --> 00:01:55.000
这是一个有用的区别。
a helpful distinction to make.

30
00:01:55.000 --> 00:01:59.490
但是，在一个模板中，我们要做的是在上下文中做出反应
But so, in a template what we'll do is
we wanna have React in the context so

31
00:01:59.490 --> 00:02:01.209
我们将进口反应从反应。
we'll import React from React.

32
00:02:01.209 --> 00:02:05.510
然后我们要从 Gatsby 中导入图 qL。
And then we're going to import graph qL,
from Gatsby.

33
00:02:07.299 --> 00:02:10.520
然后我们要导出一个查询。
And then we're going to export a query.

34
00:02:10.520 --> 00:02:13.310
因此，必须导出查询。
So the query, it has to be exported.

35
00:02:13.310 --> 00:02:15.349
它不一定需要被命名为 query。
It doesn't necessarily
need to be named query.

36
00:02:15.349 --> 00:02:19.069
你可以给它起任何名字，但是盖茨比确实要求它是出口的。
You can name it whatever you want, but
Gatsby does require that it is export it.

37
00:02:19.069 --> 00:02:22.219
我们现在所做的就是所谓的页面查询。
And what we're doing here is
what's called a page query.

38
00:02:22.219 --> 00:02:25.840
而且这些只对那些
And these only work on files that will be

39
00:02:27.500 --> 00:02:31.289
作为盖茨比页面创作过程的一部分。
parsed as part of the the page
creation process by Gatsby.

40
00:02:31.289 --> 00:02:34.250
所以在创建页面或者
So in the on Create Page or

41
00:02:34.250 --> 00:02:37.710
创建页面 API 是唯一的时间，这样做的工作。
the create pages API is
the only time that this works.

42
00:02:37.710 --> 00:02:41.259
这就是为什么我喜欢将它们保存在模板下的单独文件夹中，以便
And that's why I like to keep these in
a separate folder under templates so that

43
00:02:41.259 --> 00:02:45.149
更明显的是，它们的处理方式与普通成分不同。
it's more clear that these get handled
differently than the average component.

44
00:02:46.189 --> 00:02:51.829
所以我要写的查询是通过 ID 加载一个页面。
So the query that I wanna write is
going to load a page by its ID.

45
00:02:51.829 --> 00:02:55.920
所以我想要展示的是，我们得到一个身份证，然后
So what I wanna do to show how
that works is, we get an ID, and

46
00:02:55.920 --> 00:02:58.150
我们把问题写在这里吧。
let's just write our query here.

47
00:02:58.150 --> 00:03:03.449
所以，我喜欢在《了不起的盖茨比》中使用 GraphQL 资源管理器,
So, one of the ways that I love to develop
in Gatsby is to use the GraphQL explorer,

48
00:03:03.449 --> 00:03:07.729
然后复制粘贴它，这样我就可以在保存之前验证我的查询是否正常工作
and just copy paste it in so I can verify
that my queries work before I save it and

49
00:03:07.729 --> 00:03:08.800
创业盖茨比。
start up Gatsby.

50
00:03:08.800 --> 00:03:11.580
所以我要做的第一件事就是设置一个查询变量。
So the first thing I'm going to
do is set up a query variable.

51
00:03:11.580 --> 00:03:12.860
我要调用这个页面 ID。
And I'm gonna call this page ID.

52
00:03:13.860 --> 00:03:19.210
页面 ID 将是一个字符串,
And the page ID is going to be a string,

53
00:03:19.210 --> 00:03:23.479
我们会在主页上给出这个 ID。
and we're gonna give it
the this ID from the homepage.

54
00:03:23.479 --> 00:03:27.930
所以要使用它，我可以关闭这个文档页面，并且
So to use that,
I can close this docs page, and

55
00:03:27.930 --> 00:03:30.609
我要做一个单文档页面请求。
I'm gonna do a single docs page request.

56
00:03:31.650 --> 00:03:37.909
我想使用我们设置的这个页面 ID，现在我可以引用它了。
And I want to use this page ID that we
set up, so now I can reference this.

57
00:03:39.159 --> 00:03:47.280
为了获取源代码，我需要确保我们请求的页面与该 ID 匹配。
And to source that I want to make sure
that the page we request matches that ID.

58
00:03:47.280 --> 00:03:51.770
然后在里面，我想得到标题
And then inside of it
I wanna get the title

59
00:03:53.509 --> 00:03:56.550
当它被更新的时候，我想让它相对于现在和
when it was updated, and
I want to make that relative to now and

60
00:03:58.229 --> 00:04:01.500
然后我想要的身体，这就是我需要显示的页面。
then I want the body and
that's all I need to display the page.

61
00:04:01.500 --> 00:04:05.010
所以我们要坚持这一点。
So we're gonna stick with that.

62
00:04:05.010 --> 00:04:08.729
我想我忘记启动服务器了。
And I think I,
oops I forgot to start the server.

63
00:04:08.729 --> 00:04:15.484
因此，让我们的纱线工作空间主题开发。
So let's yarn workspace theme-dev develop.

64
00:04:18.768 --> 00:04:22.600
Jason Lengstorf: 好的，现在当我运行它的时候，它应该可以工作了。
&gt;&gt; Jason Lengstorf: Okay, and
now when I run it, it should work.

65
00:04:22.600 --> 00:04:27.529
所以我们有了主页，一个小时前更新的，里面有这个身体。
So we've got the homepage, it was updated
an hour ago and it's got this body in it.

66
00:04:27.529 --> 00:04:30.100
这样我就可以复制
So that I can then just copy and

67
00:04:30.100 --> 00:04:35.139
直接降落在这里，修复我的缩进，使它看起来像我想要的方式。
drop straight in here, fix my indent so
that it looks the way I want.

68
00:04:35.139 --> 00:04:38.590
所以这个页面 ID 必须设置好。
And so
this page ID is gonna have to get set.

69
00:04:38.590 --> 00:04:43.470
但是我们可以使用上下文从 Gatsby 中的 Create Page API 设置它。
But we can set that from the Create
Page API in Gatsby using context.

70
00:04:43.470 --> 00:04:46.110
当我们使用这个模板的时候，我们马上就会看到这一点。
We'll look at that in a second
when we go to use this, template.
