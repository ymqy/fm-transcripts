WEBVTT

1
00:00:00.040 --> 00:00:03.221
第一部分，我们将创建一个定制的盖茨比主题。
&gt;&gt; Jason Lengstorf: Part 1, we're
going to create a custom Gatsby theme.

2
00:00:03.221 --> 00:00:08.269
这将是一个文档主题，并将使用 MDX。
It's gonna be a documentation theme,
and that's going to use MDX.

3
00:00:08.269 --> 00:00:11.169
如果你看过我为《了不起的盖茨比》做的另一个工作坊
If you've watched the the other
workshop that I did on Gatsby it for

4
00:00:11.169 --> 00:00:13.089
前端主机我们使用 MDX。
front end masters we use MDX.

5
00:00:13.089 --> 00:00:17.879
但是如果你以前没有用过 MDX，别担心，我们会在这里全部介绍。
But if you haven't used MDX before, don't
worry, we're gonna cover all of it here.

6
00:00:17.879 --> 00:00:19.489
我们将定义一些自定义数据类型。
We're gonna define some custom data type.

7
00:00:19.489 --> 00:00:24.539
所以我们要定义一个实际的文档页面，使用 MDX 的通用类型。
So we're gonna define an actual docs page,
generic type that uses MDX.

8
00:00:24.539 --> 00:00:29.234
我们将使用的主题用户界面，这是一个美妙的图书馆从杰克逊布莱克
We'll use Theme UI which is a wonderful
library from Jackson Black that

9
00:00:29.234 --> 00:00:32.521
允许我们设置颜色和字体大小
allows us to kind of set up colors and
font sizes and

10
00:00:32.521 --> 00:00:36.054
以一种易于组合和分享的方式。
things in a way that's composable and
easy to share.

11
00:00:36.054 --> 00:00:39.119
我们还将添加对实时编辑示例代码的支持。
We will also add support for
live edited example code.

12
00:00:39.119 --> 00:00:41.990
我们将使用来自强大实验室的实时反应。
We're gonna be using react
live from Formidable Labs.

13
00:00:41.990 --> 00:00:46.079
展示代码示例和代码示例的结果是一种非常酷的方式
It's a really cool way to show a code
sample and the result of that code sample

14
00:00:46.079 --> 00:00:48.380
以便有人可以编辑并立即看到结果。
in a way that somebody can edit and
see the results immediately.

15
00:00:49.979 --> 00:00:53.609
然后，一旦我们完成了这一步，我们将安装自定义主题
Then, once we're done with that, we're
going to install that custom theme on

16
00:00:53.609 --> 00:00:59.060
我建立了一个假的 JavaScript 库，然后我决定我不能这么做
an existing site I built a fake JavaScript
library and then I decided I couldn't

17
00:00:59.060 --> 00:01:03.310
有一个假的 JavaScript 库，所以我建立了一个真正的一个，它叫 honkiby 和
have a fake JavaScript library so I built
a real one, it's called Honkify and

18
00:01:03.310 --> 00:01:08.030
如果你还记得那个无标题的鹅游戏，它把所有的链接
if you remember the untitled goose game,
what it does is it makes all of the links

19
00:01:08.030 --> 00:01:12.090
在你的网站按喇叭，而不是实际点击你想要的东西。
on your site honk instead of actually
clicking through the thing you wanted to.

20
00:01:12.090 --> 00:01:13.560
所以这是一个拖延的好方法。
So that was a great way to procrastinate.

21
00:01:14.590 --> 00:01:16.689
我们还要定制主题。
We're also gonna customize the theme.

22
00:01:16.689 --> 00:01:21.242
所以我们要把文档主题安装到这个宏飞站点上，然后
So we're going to install the the docs
theme on to this hongfei site and then

23
00:01:21.242 --> 00:01:26.174
我们将自定义的主题使用选项，使它看起来像洪飞网站。
we'll customize the theme using options so
that it looks like the hongfei site.

24
00:01:26.174 --> 00:01:28.596
我们将使用组件阴影来扩展主题 ui
We'll use component shadowing
to extend Theme UIs so

25
00:01:28.596 --> 00:01:31.462
我们可以覆盖颜色，字体之类的东西。
we'll be able to override colors,
fonts, things like that.

26
00:01:31.462 --> 00:01:34.109
然后我们将从头开始建立一个网站。
Then we're going to build
a site from scratch.

27
00:01:34.109 --> 00:01:38.454
我们将为内格罗尼建立一个粉丝网站，这是我目前最喜欢的鸡尾酒。
We'll build a fan site for Negroni
which are my current favorite cocktail.

28
00:01:38.454 --> 00:01:41.182
我们会使用这个文档主题，但是我们不会把它用在文档上。
And we'll use that docs theme, but
we're not gonna use it for docs.

29
00:01:41.182 --> 00:01:41.849
我们要用它来
We're gonna use it for

30
00:01:41.849 --> 00:01:45.870
也就是说，我们得对它做些改动。
recipes, which means that we're gonna
have to make some modifications to it.

31
00:01:45.870 --> 00:01:47.640
因此，我们将再次扩展主题 UI。
So we'll extend Theme UI again.

32
00:01:47.640 --> 00:01:49.641
然后我们会做一些有趣的事情。
But then we're going to do some fun stuff.

33
00:01:49.641 --> 00:01:51.810
我们要进入 Cloudinary 来管理图像
We're gonna get into
Cloudinary to manage images so

34
00:01:51.810 --> 00:01:54.129
我们的图像传输线又快又好。
that our image pipeline is nice and fast.

35
00:01:54.129 --> 00:01:57.229
我们只是要上传东西到 Cloudinary，让 Cloudinary 来做这些工作
We're just gonna upload things to
Cloudinary, let Cloudinary do the work so

36
00:01:57.229 --> 00:01:59.704
我们的建筑管道不会慢下来。
that our buildings pipeline
doesn't slow down.

37
00:01:59.704 --> 00:02:02.965
我们还会使用组件跟踪来定制组件,
We're also gonna use component
shadowing to customize components,

38
00:02:02.965 --> 00:02:06.644
因为我们不需要任何参考文件。
because we don't necessarily
want any reference to docs.

39
00:02:06.644 --> 00:02:09.228
我们想要更新它来参考食谱，所以
We want to update that
to reference recipes, so

40
00:02:09.228 --> 00:02:11.496
我们也要做这些开关。
we'll be making those switches as well.

41
00:02:11.496 --> 00:02:14.625
然后我们会安装第二个主题，看看它们是如何组合在一起的。
And then we'll just install a second
theme to see how that composes together.

42
00:02:14.625 --> 00:02:17.629
所以我们要安装一个我之前构建的活动主题。
So we'll install an events
theme that I built before.

43
00:02:17.629 --> 00:02:20.099
我们只需要把它插进去，看看它是怎么工作的。
And we'll just plug that in and
see how it works.

44
00:02:20.099 --> 00:02:25.087
最后，我们将设置一个动态应用程序，使用客户端 GraphQL
And then finally, we're gonna set up a
dynamic app that uses client side GraphQL

45
00:02:25.087 --> 00:02:28.599
使用 Apollo，我们将配置客户端路线和
with Apollo,
we will configure client only routes and

46
00:02:28.599 --> 00:02:32.777
所以这将是一个可链接的搜索结果。
Gatsby, so
this will be a linkable search results.

47
00:02:32.777 --> 00:02:35.834
所以我们要使用里克和莫蒂 API 查找字符。
So we're gonna use the Rick and
Morty API to look up characters.

48
00:02:35.834 --> 00:02:37.687
每当你搜索
And whenever you search for

49
00:02:37.687 --> 00:02:41.579
你想要的东西，可以发送一个链接到该搜索结果说
something you want to be able to send
a link to that search results said

50
00:02:41.579 --> 00:02:44.325
然后让他们点击查看相同的搜索结果。
to someone and have them click on it and
see the same search results.

51
00:02:44.325 --> 00:02:47.759
所以我们要建立，将建立重定向和废除这样
So we're gonna build that will
set up redirects and nullify so

52
00:02:47.759 --> 00:02:51.710
当你部署它的时候，它能在本地工作
that this works locally and
when you deploy it, and

53
00:02:51.710 --> 00:02:54.889
然后我们用反应钩建立一个搜索表格。
then we'll use react hooks
to set up a search form.

54
00:02:54.889 --> 00:02:58.180
结果页面，正如我所提到的，将是可链接的。
And the results page,
as I mentioned, will be linkable.

55
00:02:58.180 --> 00:03:01.870
所以，说了这么多，让我们开始吧。
So, with all of that being said,
let's get started.

56
00:03:03.099 --> 00:03:04.539
欢迎您编写代码。
You are welcome to code along.

57
00:03:04.539 --> 00:03:07.629
我有跑得有点快的倾向。
I have a tendency to go a little bit fast.

58
00:03:07.629 --> 00:03:11.240
所以你也可以随心所欲地坐下来吸收它。
So also feel free to just sit back and
absorb it.

59
00:03:11.240 --> 00:03:13.639
所有这些都会在网上公布
And all of this is gonna be online and

60
00:03:13.639 --> 00:03:17.806
你可以重新检查两个不同的地方。
you'll be able to revisit it
check out two different points.

61
00:03:17.806 --> 00:03:20.687
但是如果你想克隆回收商,
But yeah, if you want to if
you want to clone the repo,

62
00:03:20.687 --> 00:03:23.340
在 jlang storf / gatsby-中级。
it's at jlang storf/gatsby-intermediate.

63
00:03:23.340 --> 00:03:25.629
我们将从开始分支开始。
And we'll be starting
from the start branch.
