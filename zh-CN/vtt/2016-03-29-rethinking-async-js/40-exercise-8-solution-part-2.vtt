WEBVTT

1
00:00:00.000 --> 00:00:04.187
[音乐]
[MUSIC]

2
00:00:04.187 --> 00:00:05.149
凯尔：是的。&gt；&gt；扬声器2：我没有
&gt;&gt; Kyle: Yes. &gt;&gt; Speaker 2: I don't

3
00:00:05.149 --> 00:00:08.490
但感觉这是正确的行为。
feel like that this is the correct behavior though.

4
00:00:08.490 --> 00:00:12.970
因为当你点击一个按钮时，你会认为它会马上发生。
Cuz when you when click on a button, you would think it would happen right away.

5
00:00:12.970 --> 00:00:15.380
然后当你点击
And then as you're clicking

6
00:00:15.380 --> 00:00:19.780
它会再减掉整整一秒钟。&gt；&gt；Kyle：去弹跳是
it would debounce a whole nother second. &gt;&gt; Kyle: Debouncing is

7
00:00:19.780 --> 00:00:20.739
不同于采样。
different than sampling.

8
00:00:21.969 --> 00:00:23.708
所以我们可以做一个去弹跳的练习。
So we could have done an exercise for debouncing.

9
00:00:23.708 --> 00:00:24.811
&GT；&GT；扬声器2：因为这就像，不，
&gt;&gt; Speaker 2: Cuz this is like, no,

10
00:00:24.811 --> 00:00:27.536
据我所知，这是按照练习中的模式进行的。
I understand this follows the pattern in the exercise.

11
00:00:27.536 --> 00:00:32.399
但我只是说在这种情况下你有每一秒
But I'm just saying in this scenario, you have every second,

12
00:00:32.399 --> 00:00:35.399
它在抛弃它看到的任何东西。
it's dumping whatever it sees.

13
00:00:35.399 --> 00:00:36.359
凯尔：是的。&gt；&gt；扬声器2：对吗？
&gt;&gt; Kyle: Yes. &gt;&gt; Speaker 2: Right?

14
00:00:36.359 --> 00:00:36.950
凯尔：是的。
&gt;&gt; Kyle: Yes.

15
00:00:36.950 --> 00:00:38.509
&GT；&GT；扬声器2：我的意思是一种时钟，
&gt;&gt; Speaker 2: I mean kind of a clock,

16
00:00:38.509 --> 00:00:39.130
对吗？&gt；&gt；Kyle：是的。
right? &gt;&gt; Kyle: Yes.

17
00:00:39.130 --> 00:00:41.990
&gt；&gt；演讲者2：但是我希望当
&gt;&gt; Speaker 2: But I would expect that when

18
00:00:41.990 --> 00:00:45.259
你点击它就可以马上操作了。
you click it just operates right away.

19
00:00:45.259 --> 00:00:49.259
然后它有点-&gt；&gt；Kyle：是的。
And then it sort of- &gt;&gt; Kyle: Yeah.

20
00:00:49.259 --> 00:00:52.439
所以你真正问的是什么都与你无关
So what you're really asking about has absolutely nothing to do

21
00:00:52.439 --> 00:00:53.179
和程序一起。
with the programming.

22
00:00:53.179 --> 00:00:55.350
这是一个用户体验问题。&gt；&gt；扬声器2：是的。
That's a user experience question. &gt;&gt; Speaker 2: Yeah.

23
00:00:55.350 --> 00:00:57.240
&gt；&gt；Kyle：如果您想要用户体验
&gt;&gt; Kyle: If you wanted the user experience

24
00:00:57.240 --> 00:01:00.579
去反弹，你会用不同的方法解决这个问题。
of debouncing, you would solve this a different way.

25
00:01:00.579 --> 00:01:04.734
我之所以设置它，是因为采样比去抖动更容易理解。
I set it up because sampling is easier to understand than debouncing.

26
00:01:04.734 --> 00:01:05.750
&gt；&gt；扬声器2：是的，当然。
&gt;&gt; Speaker 2: Yeah, yeah, sure.

27
00:01:05.750 --> 00:01:07.222
&gt；&gt；Kyle：所以我设置了这个练习
&gt;&gt; Kyle: So I set it up that the exercise

28
00:01:07.222 --> 00:01:08.840
就是让你学习采样。&gt；&gt；扬声器2：我只是
is for you to learn about sampling. &gt;&gt; Speaker 2: I'm just

29
00:01:08.840 --> 00:01:12.519
想知道这将如何适合-&gt；&gt；Kyle：采样适合哪里？
wondering how that would fit into the- &gt;&gt; Kyle: Where does sampling fit in?

30
00:01:13.539 --> 00:01:17.278
这就是你要问的吗？&GT；&GT；扬声器2：是的，你会怎么做
Is that what you're asking? &gt;&gt; Speaker 2: Yeah, just how you would do

31
00:01:17.278 --> 00:01:22.393
就像你用变量去抖的地方一样
it like that where you're debouncing with the variables

32
00:01:22.393 --> 00:01:27.242
而不是，或者可能是[CROSSTALK]&gt；&gt；Kyle：很难回答用户
rather than, or maybe it's [CROSSTALK] &gt;&gt; Kyle: It's hard to answer user

33
00:01:27.242 --> 00:01:30.670
在软件开发的上下文中体验问题。
experience questions in the context of software development.

34
00:01:30.670 --> 00:01:37.109
但是有采样的用例和事件去抖的用例。
But there are use cases for sampling and there are use cases for event debouncing.

35
00:01:37.109 --> 00:01:40.250
如果我们的用例要求，我们会以不同的方式解决这个问题
And we would have solved this differently if our use case was asking for

36
00:01:40.250 --> 00:01:42.740
去弹跳。&gt；&gt；扬声器2：当然。
the debouncing. &gt;&gt; Speaker 2: Sure.

37
00:01:42.740 --> 00:01:43.272
&gt；&gt；Kyle：顺便说一下，RxJS，
&gt;&gt; Kyle: And RxJS, by the way,

38
00:01:43.272 --> 00:01:45.930
是否提供去抖动[CROSSTALK]&gt；&gt；扬声器2：我只是还没有完全包装
does provide a debouncing [CROSSTALK] &gt;&gt; Speaker 2: I just haven't quite wrapped

39
00:01:45.930 --> 00:01:48.849
我的脑袋是这样建造UI的。&gt；&gt；Kyle：有
my head around building UIs this way. &gt;&gt; Kyle: That have

40
00:01:48.849 --> 00:01:49.579
取样？
sampling?

41
00:01:49.579 --> 00:01:50.700
&gt；&gt；扬声器2：是的。凯尔：好的。
&gt;&gt; Speaker 2: Yeah. &gt;&gt; Kyle: Okay.

42
00:01:50.700 --> 00:01:52.469
&gt；&gt；扬声器2：有流，所以我从来没有
&gt;&gt; Speaker 2: With stream, so I've never

43
00:01:52.469 --> 00:01:56.531
实际上构建了一个完整的反应式界面。&GT；&GT；Kyle：是的，基本上，
actually built a whole Reactive interface. &gt;&gt; Kyle: Yeah, well basically,

44
00:01:56.531 --> 00:02:00.225
就像任何软件开发一样，您将拥有一组用户
just as with any software development, you're going to have a set of user

45
00:02:00.225 --> 00:02:03.344
经验要求和UI要求交给你。
experience requirements and UI requirements handed to you.

46
00:02:03.344 --> 00:02:06.313
作为一名开发人员，你必须说，他们的要求是什么
And as a developer you're gonna have to say, what they're asking for

47
00:02:06.313 --> 00:02:07.079
是去反弹跳。
is debouncing.

48
00:02:07.079 --> 00:02:10.580
所以，让我去找适当的方法来建模去抖。
So let me go find the appropriate way to model debouncing.

49
00:02:10.580 --> 00:02:12.750
或者，在这里他们要求取样，
Or, over here they're asking for sampling,

50
00:02:12.750 --> 00:02:15.629
让我去用一个取样的东西来解决这个问题。
let me go solve this with a sampling thing.

51
00:02:15.629 --> 00:02:18.400
所以这个练习纯粹是为了解决
So this exercise was purely about solving

52
00:02:18.400 --> 00:02:21.009
抽样作为我们寻找的操作。
sampling as the operation that we look for.

53
00:02:21.009 --> 00:02:23.949
采样是你在接口中做的一件有效的事情。
And sampling is a valid thing that you do in interfaces.

54
00:02:25.134 --> 00:02:28.360
去弹跳也是你做的一件有效的事情。
Debouncing is also a valid thing that you do.

55
00:02:28.360 --> 00:02:28.872
这有道理吗？
Does that makes sense?

56
00:02:28.872 --> 00:02:32.329
好吧。&gt；&gt；扬声器3：你就不能换一下吗
Okay. &gt;&gt; Speaker 3: Couldn't you just switch

57
00:02:32.329 --> 00:02:38.000
代替在点击时设置最新变量，
instead of having that latest variable set on click,

58
00:02:38.000 --> 00:02:44.180
你会把它设置在它设定的间隔上，对吗？
you would have it set on it's set interval, r1ight?

59
00:02:44.180 --> 00:02:46.849
所以它是第二个被标记的。
So that it's the second that is getting flagged.

60
00:02:46.849 --> 00:02:51.920
然后每次你有点击发生，
And then every time you have the click happen,

61
00:02:51.920 --> 00:02:55.479
你看，我们有第二个标志集吗？
you look to see, do we have a second flag set?

62
00:02:55.479 --> 00:02:56.750
那就马上把它灭了。
Then put it out right away.

63
00:02:56.750 --> 00:03:00.639
这只是不同顺序的事件
It would just be the event in the different order for

64
00:03:00.639 --> 00:03:04.610
正在设置的标志。&GT；&GT；Kyle：我不会和你争论。
the flag being set. &gt;&gt; Kyle: I'm not gonna argue with you.

65
00:03:04.610 --> 00:03:07.530
我不能完全肯定我是否同意，但我不会和你争论。
I'm not entirely certain I agree, but I'm not gonna argue with you.

66
00:03:07.530 --> 00:03:08.979
它可能意味着[INAUDIBLE]&gt；&gt；扬声器3：您可以
It might mean [INAUDIBLE] &gt;&gt; Speaker 3: You could

67
00:03:08.979 --> 00:03:12.889
将此逻辑切换为。凯尔：好的，当然。
switch this logic around to. &gt;&gt; Kyle: Okay, sure.

68
00:03:12.889 --> 00:03:14.409
&gt；&gt；扬声器3：你可以让它工作。
&gt;&gt; Speaker 3: You could get it working.

69
00:03:14.409 --> 00:03:14.930
凯尔：好的，当然。
&gt;&gt; Kyle: Okay, sure.

70
00:03:16.039 --> 00:03:17.240
也许你应该这么做作为奖励。
Maybe you should do that as a bonus.

71
00:03:17.240 --> 00:03:19.997
尝试将其返工为去抖动而不是采样。
Try to rework this as debouncing instead of sampling.

72
00:03:19.997 --> 00:03:21.289
&gt；&gt；扬声器4：嗯，我将不得不
&gt;&gt; Speaker 4: Well, I'm going to have to

73
00:03:21.289 --> 00:03:23.490
因为我正在构建的下一个界面-
cuz one of the next interfaces I'm building-

74
00:03:23.490 --> 00:03:24.778
&GT；&GT；Kyle：会是这样的，是的。
&gt;&gt; Kyle: Is going to be that, yeah.

75
00:03:24.778 --> 00:03:25.466
&gt；&gt；扬声器4：是的。
&gt;&gt; Speaker 4: Yeah.

76
00:03:25.466 --> 00:03:25.993
凯尔：好的。
&gt;&gt; Kyle: Okay.

77
00:03:25.993 --> 00:03:30.099
好吧，问得好。
All right, good questions, though.

78
00:03:30.099 --> 00:03:35.043
关于练习八还有其他问题吗？&gt；&gt；Kyle：这还远远不够
Any other questions about exercise eight? &gt;&gt; Kyle: This is nowhere near

79
00:03:35.043 --> 00:03:41.409
一个全面的，为期两天的，深入探讨所有反应式编程的课程。
a comprehensive, two-day, deep dive into all of Reactive programming.

80
00:03:41.409 --> 00:03:43.110
还有一个完全不同的车间。
There's a whole other workshop for that.

81
00:03:43.110 --> 00:03:46.329
但我想让你明白的是
But what I wanted to get you to the point of is understanding where it

82
00:03:46.329 --> 00:03:49.560
符合我们在项目中所做的更大范围。
fits within the bigger scope of what we do in our programs.

83
00:03:50.829 --> 00:03:55.110
可观察对象是关于调整您的事件流和
Observables are about adapting your event streams and

84
00:03:55.110 --> 00:03:57.620
以声明性方式对数据流进行建模。
modeling your data flow in a declarative fashion.

85
00:03:57.620 --> 00:03:59.610
这就是观测值的意义所在。
That's what observables are all about.

86
00:03:59.610 --> 00:04:03.719
因此，在应用程序中需要它的部分，不要使用生成器，
So in the parts of your application that need that, don't reach for a generator,

87
00:04:03.719 --> 00:04:07.229
不要伸手去争取承诺，不要伸手去敲击，不要伸手去争取回电，
don't reach for a promise, don't reach for a thunk, don't reach for a callback,

88
00:04:07.229 --> 00:04:08.109
伸手去找可观察到的东西。
reach for an observable.

89
00:04:09.879 --> 00:04:13.169
对，所以这些都是适合的不同工具
Right, so these are all different tools that fit in

90
00:04:13.169 --> 00:04:16.410
对于一个应用程序，我在研讨会开始时说了这句话。
together to an application I said this at the beginning of the workshop.

91
00:04:16.410 --> 00:04:20.350
我从来没有构建过使用完全相同的抽象的应用程序
I've never once built an application that used exactly the same abstraction

92
00:04:20.350 --> 00:04:21.769
遍及一切。
across everything.

93
00:04:21.769 --> 00:04:25.504
有适合正确工作的工具，因此这只是您的工具中的另一个工具
There's the right tool for the right job so this is just one more tool in your tool

94
00:04:25.504 --> 00:04:28.891
腰带。凯尔：你有问题吗？
belt. &gt;&gt; Kyle: Did you have a question?

95
00:04:28.891 --> 00:04:31.427
好吧。&gt；&gt；扬声器4：[听不见]
Okay. &gt;&gt; Speaker 4: [INAUDIBLE]

96
00:04:31.427 --> 00:04:32.058
凯尔：没问题。
&gt;&gt; Kyle: No problem.

97
00:04:32.058 --> 00:04:34.302
好的很好。
Okay, great.

98
00:04:34.302 --> 00:04:37.100
我想指出另一件事。
I want to point out one other thing.

99
00:04:37.100 --> 00:04:41.209
有几个问题是关于使用这个和
There were a couple questions about the difference between using this and

100
00:04:41.209 --> 00:04:43.810
使用RxJS。
using RxJS.

101
00:04:43.810 --> 00:04:46.250
我没有以任何方式贬低RxJS的形状或形式。
I'm not disparaging RxJS in any way shape or form.

102
00:04:46.250 --> 00:04:50.870
我只是说，这对我来说太难了，我从来没有试过要咬掉它。
I'm simply saying it's too much for me to have ever tried to bite off.

103
00:04:50.870 --> 00:04:53.259
最后，我觉得我需要更简单的东西。
And eventually, I was like I need something simpler.

104
00:04:53.259 --> 00:04:57.430
所以这就是为什么它最终以不同步的方式降落。
So that's why it ended up landing in asynquence that way.

105
00:04:57.430 --> 00:04:59.840
我需要一些更容易教的东西。
I needed something that was easier to teach.

106
00:04:59.840 --> 00:05:00.980
如果我要教你三个或者
And if I had to teach you three or

107
00:05:00.980 --> 00:05:04.670
四个不同的框架，你会比现在更加不知所措。
four different frameworks, you'd be even more overwhelmed than you are already are.

108
00:05:04.670 --> 00:05:07.250
所以，我尽量让它尽可能简单。
So, I'm trying to keep it as simple as possible.

109
00:05:07.250 --> 00:05:10.759
但这并不是说RxJS在任何方式，形状或形式上都是不好的，
But that's not to say in any way, shape, or form that RxJS is bad,

110
00:05:10.759 --> 00:05:11.519
这是个很棒的图书馆。
it's a great library.

111
00:05:12.550 --> 00:05:17.379
除此之外，我想说你不必在两者之间做出选择。
In addition to that, I would say you don't have to choose between the two,.

112
00:05:17.379 --> 00:05:23.439
因为我的库中提供了一个To Observable和一个From Observable。
Because there is a to observable and a from observable provided with my library.

113
00:05:23.439 --> 00:05:26.660
所以如果你有RxJS观测值，你可以从一些框架中得到。
So if you have RxJS observables that you're getting from some framework.

114
00:05:26.660 --> 00:05:30.122
如果要在异步中使用它们，可以将它们导入和
And you want to use them in asynquence, you can import them in and

115
00:05:30.122 --> 00:05:32.959
做一个反应序列，或者反过来。
make a reactive sequence, or the other way around.

116
00:05:32.959 --> 00:05:36.090
如果你有一个反应序列，你想让一个真正可观察到的
If you have a reactive sequence and you want to make a real observable out of

117
00:05:36.090 --> 00:05:38.629
因为某些原因，你也可以这样做。
it for some reason, you can do that as well.

118
00:05:38.629 --> 00:05:41.545
所以你不必选择，承诺也是如此。
So you don't have to choose, and the same is true of promises.

119
00:05:41.545 --> 00:05:46.667
有一种承诺和一种将承诺转化为反应的承诺方法。
There's a to promise and a promise method to bring promises into React.

120
00:05:46.667 --> 00:05:51.319
所以没有真正的理由你必须画一些分界线然后说好的，
So there's no real reason why you have to draw some dividing line and say well,

121
00:05:51.319 --> 00:05:53.307
不是不同步就是不同步。
it's either asynquence or not.

122
00:05:53.307 --> 00:05:56.781
您可以在任何其他混合环境中混合异步
You can mix asynquence in with any other mixed environment and

123
00:05:56.781 --> 00:05:59.670
应该能够透明地来回。
should be able to go back and forth transparently.
