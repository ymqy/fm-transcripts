WEBVTT

1
00:00:00.000 --> 00:00:04.126
[音乐]
[MUSIC]

2
00:00:04.126 --> 00:00:06.684
&gt；&gt；Kyle：回叫L的第二个租户。
&gt;&gt; Kyle: The second tenant of call back L.

3
00:00:06.684 --> 00:00:12.789
好吧，我将从根本上声明或断言回调是不合理的。
Well, I'm gonna fundamentally declare or assert that callbacks are not reasonable.

4
00:00:14.929 --> 00:00:18.199
我强调说建议我的意思不是在某种意义上合理的理由
And I highlight reason to say suggest I don't mean reasonable in the sense

5
00:00:18.199 --> 00:00:19.129
很讨人喜欢。
of like likeable.

6
00:00:19.129 --> 00:00:22.670
我的意思是合理的，他们不能被推理。
I mean reasonable, they are not able to be reasoned about.

7
00:00:25.629 --> 00:00:26.460
让我试着举例说明。
Let me try to illustrate.

8
00:00:26.460 --> 00:00:28.469
你们中有多少人以前听说过
How many of you have ever heard before or

9
00:00:28.469 --> 00:00:30.710
以前对自己说过，我是一个一心多用的人？
said before to yourself, I'm a multitasker?

10
00:00:30.710 --> 00:00:32.555
以前有人这么说过吗？
Anybody ever say that before?

11
00:00:32.555 --> 00:00:33.631
这很常见。
It's pretty common.

12
00:00:33.631 --> 00:00:37.298
人们都在谈论，我在街上开车，我在电话里聊天
People talk about, I'm driving down the street, I'm talking on the phone and

13
00:00:37.298 --> 00:00:41.017
发短信，我把笔记本电脑放在我旁边的座位上，听着收音机，还有
texting, I have my laptop in the seat next to me, and listening to the radio, and

14
00:00:41.017 --> 00:00:42.710
妈妈在打电话。
Mom is on the phone.

15
00:00:42.710 --> 00:00:45.259
在多任务处理方面做了一大堆事情。
Doing a whole bunch of stuff on multitasking.

16
00:00:46.929 --> 00:00:47.750
那简直是胡说八道。
Well that's nonsense.

17
00:00:47.750 --> 00:00:49.515
我们并不是真正的一心多用的人。
We're not actually multitaskers.

18
00:00:49.515 --> 00:00:50.954
在我们最高的认知水平上，
At our highest level of cognition,

19
00:00:50.954 --> 00:00:52.972
这是我现在唯一关心的部分。
which is the only part that I care about right now.

20
00:00:52.972 --> 00:00:56.899
我不是神经学家，所以我不是真正的神经学家。
I'm not a neuroscientist, so I'm not really speaking as a neuroscientist.

21
00:00:56.899 --> 00:00:59.600
但从我所知道的和我们所观察到的来看，
But from what I know and from what we can observe,

22
00:00:59.600 --> 00:01:05.069
在我们最高的认知水平上，我们的大脑基本上是单线程的。
at our highest level of cognition, our brains are fundamentally single threaded.

23
00:01:05.069 --> 00:01:08.250
在任何给定的时刻，我们的大脑只考虑和
At any given instant our brain is only thinking about and

24
00:01:08.250 --> 00:01:11.450
认知地思考一件确切的事情。
cognitively thinking about one exact thing.

25
00:01:11.450 --> 00:01:14.186
我们大脑的许多其他部分都在照顾一些其他的部分
Plenty of other parts of our brain are taking care of all the other out of some

26
00:01:14.186 --> 00:01:16.549
比如我们的心和呼吸以及所有其他的东西。
of things like our heart and breathing and all that other stuff.

27
00:01:16.549 --> 00:01:17.500
我不是在说那个。
I'm not talking about that.

28
00:01:17.500 --> 00:01:20.703
我说的是最高层次的认知
I'm talking about the highest level of cognition the part where we

29
00:01:20.703 --> 00:01:23.460
有意识地计划和思考事情。
are intentionally planning and thinking about things.

30
00:01:23.460 --> 00:01:27.609
在那个时候，我们只想着一件事。
And at that part we're only thinking about one thing at that exact moment.

31
00:01:30.340 --> 00:01:33.909
所以，让我们想象一下今天早上当你们都醒来的时候。
So, let's imagine this morning when you all woke up.

32
00:01:33.909 --> 00:01:37.789
今天早上你心里想，我必须计划好我的一天。
This morning you thought to yourself, I gotta planned out my day.

33
00:01:37.789 --> 00:01:42.189
所以，当你醒来的时候，你开始计划一天，就像，我要去喝点咖啡，
So, when you woke up, you started planning a day like, well I got to get some coffee,

34
00:01:42.189 --> 00:01:43.909
我去洗澡。
and I'll hop in the shower.

35
00:01:43.909 --> 00:01:48.289
然后我会上车开车去上班然后我会去看这个
And then I'll get in the car and drive to work and then I'll head over to this

36
00:01:48.289 --> 00:01:53.390
研讨会，你以非常有序的一步的方式计划你的一天。
workshop and you planned out your day in a very sequential step by step fashion.

37
00:01:54.700 --> 00:01:57.409
实际上，我们所有人的大脑都会说这是我们的大脑在工作，
Virtually all of us our brains would say that's our brains work,

38
00:01:57.409 --> 00:01:59.799
我们以非常有序的方式思考事物。
we think about things in a very sequential fashion.

39
00:01:59.799 --> 00:02:02.870
然而，我也愿意打赌你们中几乎没有人
However, I'm also willing to bet that virtually none of you

40
00:02:02.870 --> 00:02:05.859
让你的早晨完全按照你的计划进行。
had your morning play out exactly the way you planned.

41
00:02:05.859 --> 00:02:09.729
你在煮咖啡，然后你妈妈打电话来，所以你被打断了
You were up making some coffee and then your mom called, so you got interrupted by

42
00:02:09.729 --> 00:02:12.889
那个电话不是计划的一部分然后发生了其他的事情
that call that wasn't part of the plan and then this other stuff happened and

43
00:02:12.889 --> 00:02:16.259
你的车没油了，你的计划必须改变。
your car was out of gas and your plan had to change.

44
00:02:16.259 --> 00:02:19.729
谢天谢地，当你妈妈打电话给我的时候你没有，
And thankfully you didn't have when your mom called me like,

45
00:02:19.729 --> 00:02:22.360
这是我没有计划的一整天的拍摄。
well there's the whole day shot I didn't plan for that.

46
00:02:22.360 --> 00:02:25.120
所以，我最好还是回去睡觉，明天开始吧。
So, I better just go back to bed and start of tomorrow.

47
00:02:25.120 --> 00:02:30.189
谢天谢地，你的大脑很有趣，就像JavaScript引擎一样，
Your brain thankfully is interesting a lot like the JavaScript engine,

48
00:02:30.189 --> 00:02:32.550
因为它可以在事件方面被中断。
in that it can be interrupted event wise.

49
00:02:33.610 --> 00:02:37.560
就像一个事件，你可以有一个事件火，它可以选择一个公正的回应。
Like an event, you can have an event fire and it can choose to respond in a just.

50
00:02:39.079 --> 00:02:42.329
但这不是我们关心的部分，我们在这里关心的部分
But that's not the part we care about, the part that we care about here

51
00:02:42.329 --> 00:02:44.770
是我们认知的一部分，我们在那里计划事情。
is the part of our cognition where we planned things.

52
00:02:46.180 --> 00:02:49.639
从根本上说，我要争辩的是我们自然而然地计划事情
And fundamentally, what I'm gonna argue is that we naturally plan things and

53
00:02:49.639 --> 00:02:52.530
顺序同步一步的方式。
sequential synchronous step by step fashion.

54
00:02:54.579 --> 00:03:01.409
所以，如果这是我们计划事情的方式，那也是我们编码的方式，最自然的。
So, if that's how we plan things, that's also how we code, most naturally.

55
00:03:01.409 --> 00:03:02.430
现在我有了一个理论。
Now I have a theory here.

56
00:03:02.430 --> 00:03:06.150
这不是一条法律，这是我所能得到的最接近被证明的法律。
This is not a law, it's as close to as proven a law as I can probably get.

57
00:03:06.150 --> 00:03:10.780
我有这样的理论，任何我们大脑分叉的地方
I have this theory that any place where our brain diverges

58
00:03:10.780 --> 00:03:13.050
从JavaScript引擎的工作方式。
from the way the JavaScript engine works.

59
00:03:13.050 --> 00:03:15.800
在两人分道扬镳的那一刻
At that moment where the two diverged it is at

60
00:03:15.800 --> 00:03:17.590
在我们的代码中发生错误的那一刻。
that moment that bugs happen in our code.

61
00:03:19.719 --> 00:03:22.780
无论我们的大脑偏离JavaScript和你的方式。
Wherever our brains diverged from the way the JavaScript and yours.

62
00:03:22.780 --> 00:03:25.187
我对JavaScript引擎的工作原理无能为力。
I can't do anything about how the JavaScript engine works.

63
00:03:25.187 --> 00:03:27.360
这样我就可以教你更好的了，
It just works that way I can teach you better about it,

64
00:03:27.360 --> 00:03:28.722
试着更好地训练你的大脑。
try to train your brains better.

65
00:03:28.722 --> 00:03:33.408
但我也可以尝试为您提供一些模式，让您可以更自然地编程
But I can also try to offer you patterns that allow you to program more naturally

66
00:03:33.408 --> 00:03:37.750
喜欢你的大脑，所以希望你的程序中有更少的bug。
like your brain, so that there are hopefully less bugs in your program.

67
00:03:39.680 --> 00:03:42.668
这基本上就是我的教学理论。
That's basically my theory of teaching.

68
00:03:42.668 --> 00:03:47.295
我如何训练你写代码，使它工作起来更像你的大脑
How do I train you to write your code, so that it works more like your brain so

69
00:03:47.295 --> 00:03:50.175
更少的发散和更少的虫子。
that there's less divergence and less bugs.

70
00:03:50.175 --> 00:03:52.520
所以，它更合理，更容易理解。
So, it's more reasonable, it's more understandable.

71
00:03:53.789 --> 00:03:57.319
我们看到回调并没有以那种方式提供给我们太多的一致性。
We see callback don't really offer us much accordance in that way.

72
00:03:57.319 --> 00:04:00.729
因为我们可以从伪任务的角度来思考
Because we could think about it from a pseudo task perspective

73
00:04:00.729 --> 00:04:02.813
就像你知道我喜欢伪代码的什么？
like you know what I love about pseudo code?

74
00:04:02.813 --> 00:04:07.870
伪代码很棒，因为你可以凭空发明神奇的东西。
Pseudo code awesome because you just get to invent magical stuff out of thin air.

75
00:04:07.870 --> 00:04:09.930
我希望我能拿到钱整天写伪代码，
I wish I could get paid to write pseudo code all day,

76
00:04:09.930 --> 00:04:12.210
因为这将是世界上最有趣的工作。
cuz it'd be the funnest job in the world.

77
00:04:12.210 --> 00:04:16.050
我可以发明一些东西，比如在3号线上，我发明了暂停。
I get to invent stuff like on line three where I invent pause.

78
00:04:16.050 --> 00:04:20.949
我调用的这个神奇的东西叫做暂停，它实际上并不存在，但是
This magical thing that I invoke called pause, which doesn't actually exist, but

79
00:04:20.949 --> 00:04:22.680
这无关紧要，因为这是一个伪码。
it doesn't matter cuz it's a pseudo code.

80
00:04:23.889 --> 00:04:26.319
然后，在线上是什么，
And then, on line what is it,

81
00:04:26.319 --> 00:04:29.759
在第9行，我发明了另一个也不存在的东西，叫做简历。
on line 9 I invent this other thing that also doesn't exist called resume.

82
00:04:29.759 --> 00:04:34.480
我只是神奇地从第3行停止的地方拾起，对吗？
I just magically pick up where line 3 left off, right?

83
00:04:34.480 --> 00:04:36.730
这就是我用伪代码写出来的方法。
That's how I'd write this out in pseudo code.

84
00:04:36.730 --> 00:04:38.180
但一旦开发商拿到它，
But as soon as a developer got hold of it,

85
00:04:38.180 --> 00:04:40.560
他会说不，这个，你只是在胡编乱造。
he'd say no no no, this, you're just making stuff up.

86
00:04:40.560 --> 00:04:41.279
事情不是这样的。
That's is not how it works.

87
00:04:41.279 --> 00:04:43.600
所以，他们开始重新安排事情，然后
So, they'd begin to rearrange things, and

88
00:04:43.600 --> 00:04:46.112
他们可能会像那样重新排列伪代码。
they might rearrange the pseudo code like that.

89
00:04:46.112 --> 00:04:50.430
他们说，好的，我们可以做这个暂停和恢复的事情，然后暂停和
And they say well, we can do this pause and resume thing and then a pause and

90
00:04:50.430 --> 00:04:52.600
继续，看看我们现在做了什么？
resume and see what we've done now?

91
00:04:52.600 --> 00:04:55.699
我们已经开始实现这是一系列嵌套的回调。
We've started to implement this is a series of nested callbacks.

92
00:04:57.670 --> 00:05:01.970
因为只有回调，这是我们表达和
Because callbacks alone that's the only way for us to express and

93
00:05:01.970 --> 00:05:04.970
听着，这里有个别致的术语给你。
listen here's a here's a fancy term for you.

94
00:05:04.970 --> 00:05:06.209
时间依赖性。
Temporal dependency.

95
00:05:07.870 --> 00:05:12.959
当一件事依赖于另一件事在这件事开始之前完成，
When one thing depends upon another thing finishing before this thing can go,

96
00:05:12.959 --> 00:05:14.259
这是一种时间依赖性。
that's a temporal dependency.

97
00:05:16.019 --> 00:05:20.589
使用回调来表达时间依赖的唯一方法是嵌套一个
And the only way with callbacks for us to express temporal dependency is nesting one

98
00:05:20.589 --> 00:05:23.990
在另一个内部，对一个内部的呼叫对另一个的呼叫。
inside of the other, the call to one inside of the call to the other.

99
00:05:25.540 --> 00:05:27.550
无论我们是在行函数表达式中还是在行函数表达式中执行此操作
Whether we do so within line function expressions or

100
00:05:27.550 --> 00:05:29.230
只有函数调用。
with just the function calls.

101
00:05:29.230 --> 00:05:36.079
仅在回调中处理时间依赖的唯一方法是通过嵌套。
The only way to handle temporal dependency in callback alone, is through nesting.

102
00:05:37.600 --> 00:05:39.620
为什么会有这样的问题？
Why is that such a problem?

103
00:05:39.620 --> 00:05:43.250
它是这样一个问题的原因是现在你的大脑不能得到线性进展
The reason it's such a problem is now your brain doesn't get to linearly progress

104
00:05:43.250 --> 00:05:44.590
通过密码。
through the code.

105
00:05:44.590 --> 00:05:48.019
你的大脑必须做我称之为非局部跳跃的动作。
Your brain has to do what I call non-local jumps.

106
00:05:48.019 --> 00:05:48.990
这里有个比喻给你。
Here's a metaphor for you.

107
00:05:50.000 --> 00:05:52.420
你们中有多少人记得很久以前。
How many of you remember way, way back.

108
00:05:52.420 --> 00:05:56.129
我说的就像80年代中期，原始的任天堂。
I'm talking like mid 80s, the original Nintendo.

109
00:05:56.129 --> 00:06:00.627
而我最喜欢的游戏一直在原版，并进入塞尔达传奇。
And my favorite game of all time in the original, and into Legend of Zelda.

110
00:06:00.627 --> 00:06:03.983
任何人都记得必须让这东西永远运转
Anybody remember have to leave the thing running forever and

111
00:06:03.983 --> 00:06:06.819
玩它需要几个星期才能玩完任何东西。
play it would take weeks to play through whatever.

112
00:06:06.819 --> 00:06:10.283
你知道我喜欢那个游戏的什么地方，尽管有一部分你会去
You know what I loved about that game though there is one part you would go

113
00:06:10.283 --> 00:06:10.934
进了一个山洞。
into a cave.

114
00:06:10.934 --> 00:06:13.240
突然，屏幕就变得完全黑了。
And all of the sudden the screen would go completely black.

115
00:06:13.240 --> 00:06:16.180
除了在林克周围的这个小圆圈里他举着火炬。
Except for this tiny little circle around link where he's holding his torch up.

116
00:06:17.569 --> 00:06:20.889
在任何给定的时刻，你都可以看到地图的一小部分。
And you can see just a small little portion of the map at any given moment.

117
00:06:20.889 --> 00:06:24.470
现在你可以移动整个洞穴的链接，你可以看到整个地图，但只有这个
Now you can move link all over the cave you could see the entire map but only this

118
00:06:24.470 --> 00:06:27.329
一小圈一圈，你不能一下子看到整个事情。
little circle at a time you could not see the entire thing all at once.

119
00:06:28.899 --> 00:06:31.129
这就是今天的JavaScript编程。
That's what modern JavaScript programming is today.

120
00:06:31.129 --> 00:06:34.134
现代异步JavaScript编程。
Modern asynchronous JavaScript programming.

121
00:06:34.134 --> 00:06:37.221
现在，这不是对任何一个人的敲打，听这个建议，
Now this is not a knock on any individual person listening to this to suggest that

122
00:06:37.221 --> 00:06:39.029
你们根本就是个糟糕的程序员。
you are just fundamentally bad programmers.

123
00:06:39.029 --> 00:06:41.279
我们都受到这种方式的限制，
We are all limited in this fashion,

124
00:06:41.279 --> 00:06:46.649
在我们的程序中发生的异步流量控制的复杂性？
that the complexity of asynchronous flow control that happens in our programs?

125
00:06:46.649 --> 00:06:49.970
您的团队中没有了解所有这些流程路径的开发人员。
There is no developer on your team that understands all of those flow paths.

126
00:06:49.970 --> 00:06:53.500
只是这超出了我们的理解能力。
It's just it's beyond our capacity to understand.

127
00:06:53.500 --> 00:06:55.740
你可能会得到第一步，然后第二步，然后第三步。
You might get step one, then step two, then step three.

128
00:06:55.740 --> 00:06:58.629
但是一旦你同时完成了第一步，第二步和第三步
But as soon as you get like step one, two and three at the same time and

129
00:06:58.629 --> 00:07:02.250
当这两个人完成了这里和那里的射击，你就完全迷路了。
when these two finish fire it off here and there, you're completely lost.

130
00:07:02.250 --> 00:07:05.470
你只能理解你得到的这一小部分
You can understand only just this small little portion you get that and

131
00:07:05.470 --> 00:07:07.220
然后你搬到这里，你明白这一部分。
then you move over here and you understand this part.

132
00:07:07.220 --> 00:07:09.709
然后你搬到这里，你就会明白这一部分。
And then you move over here and you understand this part.

133
00:07:09.709 --> 00:07:14.023
如果这些地方是回调跳来跳去的地方，那就是上天所禁止的
And heaven forbid when those parts are where the callbacks are jumping around

134
00:07:14.023 --> 00:07:16.021
在你程序的文件之间。
between the files of your program.

135
00:07:16.021 --> 00:07:19.550
而且你根本不能按照你的大脑工作的方式来规划你的程序。
And you're fundamentally not able to plan out your program the way your brain works.

136
00:07:21.029 --> 00:07:24.207
因为单独的回调没有表达东西的方式，
Cuz callbacks alone don't have a way of expressing things,

137
00:07:24.207 --> 00:07:26.709
以顺序同步的方式查看。
in a sequential synchronous looking fashion.

138
00:07:28.629 --> 00:07:30.529
似乎几乎不可能做到这一点。
It seems like it's almost impossible to do it.

139
00:07:30.529 --> 00:07:32.639
不是吗？这看起来不像是一只几乎是独角兽吗？
Doesn't it? Doesn't that seem like almost a unicorn

140
00:07:32.639 --> 00:07:36.250
就像没有办法以同步方式进行异步编码。
like there is no way to do asynchronous coding in a synchronous fashion.

141
00:07:36.250 --> 00:07:40.259
这就像是假的同时也是真的，这似乎是不可能的。
That's like having false be true at the same time, that seems impossible.

142
00:07:41.350 --> 00:07:44.680
当不厌其烦地谈论这个建议时，其实是
When going all the trouble to talk about this to suggest actually it is

143
00:07:44.680 --> 00:07:45.300
很有可能。
quite possible.

144
00:07:46.420 --> 00:07:47.689
但这就是为什么我们需要更好的模式。
But that's why we need a better pattern.

145
00:07:49.379 --> 00:07:53.310
因为我们要解决回调地狱需要做的是能够表达
Because what we need to do to solve callback hell is to be able to express

146
00:07:53.310 --> 00:07:56.720
我们的代码以同步顺序的方式进行，就像我们的大脑思考的方式一样。
our code in a synchronous sequential fashion the way our brains think.

147
00:07:56.720 --> 00:08:00.588
所以，当我们编写像我程序前半部分那样的代码时，然后是第二个
So, when we write code like that first half of my program then the second

148
00:08:00.588 --> 00:08:01.687
我程序的一半。
half of my program.

149
00:08:01.687 --> 00:08:05.833
我们对自己说，这就像阻塞了1000毫秒。
And we think to ourselves that it's like blocking 1000 milliseconds.

150
00:08:05.833 --> 00:08:10.004
这在JavaScript引擎中并不存在，实际上我将
Which doesn't really exist in the JavaScript engines is actually I'm gonna

151
00:08:10.004 --> 00:08:12.259
在那期间做一大堆其他的事情。
do a whole bunch other stuff during that.

152
00:08:14.180 --> 00:08:18.689
但我们需要做的是恢复同步表达事物的能力
But we need to do is restore the ability to express things in a synchronous

153
00:08:18.689 --> 00:08:24.425
顺序看起来时尚。&gt；&gt；Kyle：那是
sequential looking fashion. &gt;&gt; Kyle: That's

154
00:08:24.425 --> 00:08:27.274
我们需要回叫地狱的另一部分
the other part of callback hell that we need to

155
00:08:27.274 --> 00:08:31.480
修复，使我们的同步代码从根本上更合理。
fix to make our synchronous code fundamentally more reasonable.
