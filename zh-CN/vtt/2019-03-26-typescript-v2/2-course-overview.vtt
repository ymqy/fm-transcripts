WEBVTT

1
00:00:00.220 --> 00:00:03.076
迈克 · 诺斯: 下面是我们将要学习的内容的大概轮廓。
&gt;&gt; Mike North: So here's a rough
outline of what we're gonna learn.

2
00:00:03.076 --> 00:00:07.730
我们将从一个类似于打字稿编程的速成课程开始
We're gonna start out with kind of a crash
course in the TypeScript programming

3
00:00:07.730 --> 00:00:08.859
语言。
language.

4
00:00:08.859 --> 00:00:12.199
现在，我们没有时间，这不是一个好的利用我们的时间
Now, we don't have time, and
it's not a good use of our time

5
00:00:12.199 --> 00:00:17.640
详细介绍了打字稿所能做到的每一个方面。
to go through every little facet of
what can be done with TypeScript.

6
00:00:17.640 --> 00:00:21.204
我在这里的主要目标是确保我留给你们一个伟大的精神
My main goal here is to ensure that
I leave you with a great mental

7
00:00:21.204 --> 00:00:24.385
如何思考这种编程语言的模型。
model of how to think about
this programming language.

8
00:00:24.385 --> 00:00:25.954
因为这样你就可以
Because then you can go and

9
00:00:25.954 --> 00:00:30.820
你可以了解所有我做的没有被你碰过的小角落。
you can learn about all the little corners
that I made left untouched on your own.

10
00:00:31.859 --> 00:00:35.420
我们将学习如何配置打字稿编译器。
We'll learn about configuring
the TypeScript compiler.

11
00:00:35.420 --> 00:00:40.365
这一点很重要，因为它可以是缩小的区别
This is important because it can be
the difference between shrinking

12
00:00:40.365 --> 00:00:42.506
你的代码增加了70% ，对吗？
your code by 70%, right?

13
00:00:42.506 --> 00:00:47.366
就像如果你正在为 IE6构建代码，那里有很多额外的代码，因为我们不能
Like if you're building for IE6, there's
a lot of extra code there because we can't

14
00:00:47.366 --> 00:00:50.976
真的取决于我们在浏览器中使用的东西。
really depend on as much being
there in the browser for us to use.

15
00:00:50.976 --> 00:00:56.619
它还可以帮助你设置严格的设置。
And it also helps you set
your strictness settings.

16
00:00:56.619 --> 00:00:59.280
所以如果你真的想要类型安全，你必须这样做
So if you really want type safety,
you kind of have to

17
00:01:00.520 --> 00:01:05.319
把事情安排得恰到好处，这样规矩才有力度，对吧？
set things appropriately so
the rules are strong, right?

18
00:01:06.930 --> 00:01:10.710
我们将经过三个步骤，实际的战略
We will go through a three step,
practical strategy for

19
00:01:10.710 --> 00:01:13.439
从打字稿转换到 JavaScript。
converting from TypeScript to JavaScript.

20
00:01:13.439 --> 00:01:15.289
这样做有很多不好的方法。
There are bad ways to do this.

21
00:01:16.519 --> 00:01:20.429
如果做得对如果做得像我教你的那样,
If done correctly, and
if done the way that I'm gonna teach you,

22
00:01:20.429 --> 00:01:23.287
这可能是一个非常平稳，渐进的过程。
it can be a very smooth,
incremental process.

23
00:01:23.287 --> 00:01:27.269
这不一定是一个大的，破坏性的事情，对吗？
It doesn't have to be a big,
disruptive thing, right?

24
00:01:27.269 --> 00:01:31.950
我们不必像重写 JavaScript 一样对待它
We don't have to treat it like
we're rewriting a JavaScript

25
00:01:31.950 --> 00:01:35.920
用 Swift 或其他完全不相关的语言编写程序。
program in Swift or
something completely unrelated.

26
00:01:35.920 --> 00:01:38.664
我们可以利用这些语言之间的相似性。
We can take advantage of the similarity
between these languages.

27
00:01:38.664 --> 00:01:44.659
混合 JavaScript 和 TypeScript 模块的能力。
And the ability for mixing JavaScript and
TypeScript modules.

28
00:01:44.659 --> 00:01:48.858
我们将更多地关注高级类型和泛型。
We'll focus quite a bit on
advanced types and generics.

29
00:01:48.858 --> 00:01:53.204
你可以把泛型看作是参数化的类型,
And you can think of generics
as parameterized types, right,

30
00:01:53.204 --> 00:01:57.555
我们将一个值传递给一个函数来对值进行排序。
we pass a value to a function to
sort of parameterize the value.

31
00:01:57.555 --> 00:02:02.039
我们可以将类型参数传递给泛型，来参数化类型,
We can pass type parameters to generics,
to parameterize types,

32
00:02:02.039 --> 00:02:05.420
就像填补空白一样。
like a fill-in-the-blank
kind of situation.

33
00:02:05.420 --> 00:02:09.240
最后，我想给你们一个简短的
And at the end, I want to give you a quick

34
00:02:09.240 --> 00:02:14.080
演示了打字稿编译器如何查看你的代码。
demo of how the TypeScript
compiler looks at your code.

35
00:02:14.080 --> 00:02:17.979
所以我们将使用 JavaScript API 来编译打字稿,
So we're going to use the JavaScript API
for the TypeScript compiler,

36
00:02:17.979 --> 00:02:22.150
不是因为我认为你们很多人最终会在应用程序中使用它。
not because I think a lot of you
will end up using this in your apps.

37
00:02:22.150 --> 00:02:24.560
但是它允许我们在引擎盖下面挑选
But it allows us to
pick under the hood and

38
00:02:24.560 --> 00:02:26.840
看看打字稿是如何理解我们的代码的。
to see how TypeScript
understands our code.

39
00:02:26.840 --> 00:02:31.800
以及它是如何将它分开，以及它是如何在数据结构中表示它的。
And how it sort of splits it apart and
how it represents it in data structures.

40
00:02:31.800 --> 00:02:35.177
这一点非常重要，以便确认您拥有正确的
That's really important in order to
validate that you have the correct

41
00:02:35.177 --> 00:02:35.918
心理模型。
mental model.
