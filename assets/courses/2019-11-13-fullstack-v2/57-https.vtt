WEBVTT

1
00:00:00.472 --> 00:00:08.111
>> Jem Young:  我们在安全性方面有很长的会话，但  是什么 ?
&gt;&gt; Jem Young: HTTPS, we had a long
session on security, but what is HTTPS?

2
00:00:08.111 --> 00:00:09.766
为何我们要这样做呢 ?
Why do we need it?

3
00:00:09.766 --> 00:00:12.647
我们触及了一点点。
We touched on it a little bit.

4
00:00:12.647 --> 00:00:13.490
萨姆?
Sam?

5
00:00:13.490 --> 00:00:18.501
>> 演讲者 2: 基于  的 SSL 覆盖或安全套接字层。
&gt;&gt; Speaker 2: It's SSL over, or
secure sockets layer, over HTTPS.

6
00:00:18.501 --> 00:00:19.053
>> Jem Young: 完全正确。
&gt;&gt; Jem Young: Exactly.

7
00:00:19.053 --> 00:00:20.527
>> 扬声器 2: 通过 HTTP。
&gt;&gt; Speaker 2: Over HTTP.

8
00:00:20.527 --> 00:00:22.975
>> Jem Young: 为什么我们需要它 ?
&gt;&gt; Jem Young: And why we need it though?

9
00:00:22.975 --> 00:00:24.292
>> 演讲者 2: 那么任何人和
&gt;&gt; Speaker 2: So that anybody and

10
00:00:24.292 --> 00:00:28.823
他们的狗不能检查你和服务器之间的交通吗
their dog can't inspect the traffic
between you and the server?

11
00:00:28.823 --> 00:00:30.106
>> Jem Young: 这就是正确的。
&gt;&gt; Jem Young: That's exactly right.

12
00:00:30.106 --> 00:00:33.951
认为在没有那么长的时间里
It's kind of wild to think that in
the olden days of not that long

13
00:00:33.951 --> 00:00:36.853
我真的可以装个假路由器
ago I literally could just
set up a fake router or

14
00:00:36.853 --> 00:00:39.247
我可以窃听你的电话
I could just tap into your phone line and

15
00:00:39.247 --> 00:00:44.362
拦截所有即将发生的数据并且完全未加密。
intercept all of the data that's coming
and going and it was totally unencrypted.

16
00:00:44.362 --> 00:00:48.009
这相当于我在房间里大喊大叫，我的数据是什么。
It's the equivalent of me yelling
across the room, what my data is.

17
00:00:48.009 --> 00:00:50.957
如果有人碰巧在这附近
And if someone just happens
to be in earshot of that,

18
00:00:50.957 --> 00:00:52.972
他们知道我在做什么
they know exactly what I'm doing.

19
00:00:52.972 --> 00:00:54.744
这就是互联网过去工作的方式。
And this is the way
the Internet used to work.

20
00:00:54.744 --> 00:01:00.387
幸运的是，由于许多科技公司的持续存在，
Fortunately now, thanks to persistence
of a lot of the tech companies and

21
00:01:00.387 --> 00:01:03.488
主要是浏览器，我们现在都使用  。
mainly browsers, we all use HTTPS now.

22
00:01:03.488 --> 00:01:05.323
而这又是另一件事
And that's one of the things that, again,

23
00:01:05.323 --> 00:01:08.158
互联网一直以它的方式运作是很有趣的。
it's fascinating that the Internet
keeps working the way it does.

24
00:01:08.158 --> 00:01:11.563
我们不断推进这些新协议和标准
And we keep pushing these new
protocols and standards forward,

25
00:01:11.563 --> 00:01:15.296
虽然没有一个实体说我们应该如何运作
even though there's no one entity
that saying how we should operate.

26
00:01:15.296 --> 00:01:18.950
但是  它所做的是对传输中的所有数据进行加密。
But HTTPS, what it does is it
encrypts all the data in transit.

27
00:01:18.950 --> 00:01:22.108
在使用 HTTP 的旧天数和当前天数中，如果我要
In the old days and
current days with HTTP, if I was going to

28
00:01:22.108 --> 00:01:26.632
frontendmasters.com 放我的信用卡信息，是纯文本的。
frontendmasters.com put in my credit
card information, it'd be in plain text.

29
00:01:26.632 --> 00:01:28.983
我可以拦截那包然后读
I could just intercept that packet and
read it.

30
00:01:28.983 --> 00:01:32.599
我甚至可以把它传递给主宰者，这样他们就不会
And I can even pass it along back to
frontendmasters, so that they wouldn't

31
00:01:32.599 --> 00:01:36.402
你甚至都不知道你的数据被偷了
even know or you wouldn't even know that
your data is being sniffed and stolen.

32
00:01:36.402 --> 00:01:39.382
事实上，他们可以一直这样做，而人们也这样做。
In fact, they can keep doing that for
years and people did that.

33
00:01:39.382 --> 00:01:42.792
人们就像是在我使用这个网站的时候
And people were like,
why is it when I use this website,

34
00:01:42.792 --> 00:01:46.576
一个月后我的信用卡被盗了吗
about a month later my credit
card gets stolen mysteriously?

35
00:01:46.576 --> 00:01:49.700
这是因为人们坐在中间，拦截请求。
And it's because people were sitting in
the middle and intercepting requests.

36
00:01:49.700 --> 00:01:52.191
那些可能是最邪恶的袭击者
And those are probably the most
nefarious kinds of attackers,

37
00:01:52.191 --> 00:01:54.734
那些不允许你知道他们在做什么的人
the ones that don't let you know
that they're doing anything.

38
00:01:54.734 --> 00:01:58.344
你只会觉得这里发生的事情是错误的
You just sort of start the seeing
things go wrong here in there.

39
00:01:58.344 --> 00:02:03.388
但现在那是 HTTP 的另一个好处
But now so what it use to be
another benefit of HTTP was,

40
00:02:03.388 --> 00:02:10.200
或者 HTTP 的下侧是你不能保证你在跟谁说话
or a down side of HTTP was you couldn't
guarantee who you were talking to.

41
00:02:10.200 --> 00:02:13.427
比如说我们之前说过我的域到期了吗，
For instance, we talked earlier
about if I let my domain expire and

42
00:02:13.427 --> 00:02:16.205
有人能很快地把它捡起来
someone picks it up really
quickly which they tend to do.

43
00:02:16.205 --> 00:02:20.804
我现在可以创建 jemyoung.com 或者 frontendmasters.com
I can now create jemyoung.com or
frontendmasters.com if let it drop and

44
00:02:20.804 --> 00:02:25.341
你没有证据证明这不是你之前跟你说话的人
you have no proof that this isn't
the person you were talking to before.

45
00:02:25.341 --> 00:02:27.556
因为大多数人没有，你不检查 IP 地址。
Because most people don't,
you're not checking IP addresses.

46
00:02:27.556 --> 00:02:28.993
大多数人永远不会检出 IP 地址。
Most people are never gonna
check out IP addresses.

47
00:02:28.993 --> 00:02:31.586
你只会检查那个域名
You're just gonna check that domain name.

48
00:02:31.586 --> 00:02:34.509
我认为互联网曾经是这样的，这真的很有趣。
And I think it's really interesting
that the Internet used to be like this.

49
00:02:34.509 --> 00:02:38.211
你以前能做这些事
You used to be able to
do all these things.

50
00:02:38.211 --> 00:02:41.625
如果谷歌让它的域名到期了，我就可以，就像我现在是谷歌。
If Google let its domain expire,
I can just be, like, I'm now Google.

51
00:02:41.625 --> 00:02:43.268
好的请登录
Yeah, go ahead and log in.

52
00:02:43.268 --> 00:02:44.485
你不能登录吗
You can't log in?

53
00:02:44.485 --> 00:02:45.610
那就继续努力吧
Wow, just keep trying.

54
00:02:45.610 --> 00:02:47.175
继续输入您的所有凭证。
Keep entering all your credentials.

55
00:02:47.175 --> 00:02:50.216
我们会说，互联网坏了，或者类似的东西。
And we'd just say, the Internet's
broken or something like that.

56
00:02:50.216 --> 00:02:54.072
因为我在 google.com 上很清楚，也没有办法来验证。
Because I'm clearly on google.com and
there's no way of verifying that.

57
00:02:54.072 --> 00:03:00.057
但是  不仅加密传输内容，它说，嘿，你是
But HTTPS not only encrypts things in
transport, it says, hey, the person you're

58
00:03:00.057 --> 00:03:05.389
保证你跟他们说话我们保证
talking to is guaranteed that you're
talking to them and we guarantee it.

59
00:03:05.389 --> 00:03:07.467
现在谁来保证呢
Now who guarantees that?

60
00:03:07.467 --> 00:03:10.375
这叫认证机构
It's something called
certificate authorities.

61
00:03:10.375 --> 00:03:15.217
同样，因特网建立在信任和认证中心的基础之上
Again, the Internet is built on trust and
certificate authorities are trusted

62
00:03:15.217 --> 00:03:18.552
证明你是谁的权威
authorities that validate
you are who you say you are.

63
00:03:18.552 --> 00:03:21.120
到目前为止还有什么问题吗
Does that any questions on that so far?

64
00:03:21.120 --> 00:03:24.052
我们会继续做
Cuz we're gonna keep going on HTTPS.

65
00:03:24.052 --> 00:03:25.914
有人震惊了互联网过去的这种方式
Is anybody shocked that the Internet
used to be this way and

66
00:03:25.914 --> 00:03:26.789
现在好点了吗
now it's getting better?

67
00:03:26.789 --> 00:03:32.050
我想如果下一代会说，等等，互联网就像这样。
And I think if the next generation will
say, wait, the Internet was like this.

68
00:03:32.050 --> 00:03:32.652
那是，哇，
That was, wow,

69
00:03:32.652 --> 00:03:35.147
就像人们把枪从左到右
it was just like the wild west of
people shooting guns left and right.

70
00:03:35.147 --> 00:03:36.993
我也会很喜欢的
And I'll be like, yeah, pretty much.

71
00:03:36.993 --> 00:03:39.361
那天一切都不一样了
It was anything goes back in the day.

72
00:03:39.361 --> 00:03:42.550
幸运的是，通过  你不能嗅到这种流量。
Fortunately now, with HTTPS,
you can't sniff that traffic.

73
00:03:42.550 --> 00:03:45.812
它在客户端上加密，在服务器上解密。
It's encrypted on the clients and
decrypted on the server.

74
00:03:45.812 --> 00:03:48.610
这又是公用密钥认证。
So it's that public key
authentication again.

75
00:03:48.610 --> 00:03:53.716
不是 SSH ，而是在客户有钥匙的情况下
It's not SSH, but think of it similarly
where the client has a key and

76
00:03:53.716 --> 00:03:56.986
它从服务器获取的证书。
a certificate that it
gets from the server.

77
00:03:56.986 --> 00:03:59.980
所以我第一次联系 frontendmasters.com 他们说，好的，
So the first time I connect
the frontendmasters.com, they say, okay,

78
00:03:59.980 --> 00:04:01.344
你从没来过这里
you've never been here before.

79
00:04:01.344 --> 00:04:04.260
这是我的公用证书验证我是谁
Here's my public certificate
verifying who I am.

80
00:04:04.260 --> 00:04:05.817
这就是如何加密所有数据的方法。
And here's how to encrypt all that data.

81
00:04:05.817 --> 00:04:08.953
因此，我使用该公用证书对所有数据进行加密，并且
So I use that public certificate
to encrypt all the data, and

82
00:04:08.953 --> 00:04:12.336
那我就把它传下来 frontendmasters.com 或者你的服务器，
then I send it down the
frontendmasters.com or your server, and

83
00:04:12.336 --> 00:04:14.324
这两者之间的任何东西都只是些 " jiberish"
anything between is just jibberish.

84
00:04:14.324 --> 00:04:15.358
这只是加密数据
It's just encrypted data.

85
00:04:15.358 --> 00:04:18.682
唯一能解密它的人是 Fronend Masters ，因为他们认为
The only one who can decrypt it is
Frontend Masters because they hold that

86
00:04:18.682 --> 00:04:19.343
专用密钥。
private key.

87
00:04:19.343 --> 00:04:20.612
您的服务器拥有专用密钥。
And your server holds a private key.

88
00:04:20.612 --> 00:04:22.846
所以没有人能对它进行加密
So no one in between can encrypt it.

89
00:04:22.846 --> 00:04:26.574
很有趣这让我很怀疑政府
Funny enough, and this makes me
really suspicious of the government,

90
00:04:26.574 --> 00:04:28.136
它们不是针对 的。
they were not against HTTPS.

91
00:04:28.136 --> 00:04:31.658
一般来说，加密的时候，政府是反对一切的，
Generally, when it comes to encryption,
the government is against all of it,

92
00:04:31.658 --> 00:04:33.814
因为他们不能再看你的数据了
because they can't read your data anymore,
but

93
00:04:33.814 --> 00:04:35.672
他们没有用 的牛肉
they don't really have beef with HTTPS.

94
00:04:35.672 --> 00:04:38.322
这让我很怀疑那是个正切的
Which makes me really suspicious,
that's totally a tangent and

95
00:04:38.322 --> 00:04:39.487
与此无关。
not related to this course.

96
00:04:39.487 --> 00:04:41.101
但现在的情况是
But, what happens is now,

97
00:04:41.101 --> 00:04:45.889
如果你像我有  那么一切都很安全
if you're like I have HTTPS everything's
secure everything's hunky dory.

98
00:04:45.889 --> 00:04:48.978
我们很好我们再也不用担心安全了
We're good, we're never have
to worry about security again.

99
00:04:48.978 --> 00:04:51.882
这都取决于这些认证中心。
This all depends on those
certificate authorities.

100
00:04:51.882 --> 00:04:57.774
所以如果我登记我的域名，我说，嘿，安全认证中心，
So if when I registered my domain, I say,
hey Mrs. security certificate authority,

101
00:04:57.774 --> 00:05:01.745
我是杰姆 - 扬我要注册网址 jemyoung.com
I'm Jem Young and
I'm going to register jemyoung.com.

102
00:05:01.745 --> 00:05:04.812
他们就像，我们怎么知道你是谁 ?
They're like, how do we know
you are who you say you are?

103
00:05:04.812 --> 00:05:07.983
你会经历一系列的认证步骤你就喜欢
And you go through a series of
authentication steps and you're like,

104
00:05:07.983 --> 00:05:10.197
好吧这个人是值得信赖的
okay, yeah,
this this person is trustworthy.

105
00:05:10.197 --> 00:05:12.509
我们要把我们的邮票放在它的验证上
We're gonna put our stamp
on it that verifies it.

106
00:05:12.509 --> 00:05:13.980
如果我们去找我们的浏览器
And if we go to our browser,

107
00:05:13.980 --> 00:05:17.057
我们可以去查证书局
we can actually check out
the certificate authorities.

108
00:05:17.057 --> 00:05:20.887
我们试试一个随机的网站
Let's try, what's a random website,

109
00:05:20.887 --> 00:05:26.074
我们说 Google，它很容易， Google.com。
let's say Google,
it's an easy one, Google.com.

110
00:05:26.074 --> 00:05:32.406
我可以看这里，我说连接是安全的，我可以查看证书。
And I can look here, I say connection is
secure, I can look at the certificate.

111
00:05:32.406 --> 00:05:34.057
我们可以更多地挖掘这一证书。
We can dig in that certificate a bit more.

112
00:05:36.029 --> 00:05:38.600
>> Jem Young: 它有很多关于谁是权威的信息，
&gt;&gt; Jem Young: And it has a bunch of
information about who the authority is,

113
00:05:38.600 --> 00:05:41.031
比如我们怎么知道这些人是谁
like how do we know these people
are who they say they are.

114
00:05:41.031 --> 00:05:43.668
证书级别不同。
There are different
levels of certificates.

115
00:05:43.668 --> 00:05:47.668
更贵的，在你看到的地方，这个网站是经过验证的
The more expensive ones where you see
the full, this site is verified by that

116
00:05:47.668 --> 00:05:50.870
其实是 google.com 是比较贵的。
it's actually google.com,
are the more expensive ones.

117
00:05:50.870 --> 00:05:52.100
这不是我们今天要执行的那种
That's not the kind we're
gonna implement today.

118
00:05:52.100 --> 00:05:56.726
那些会花更多钱的我们会在第二次实施免费的
Those tend to cost a bit more money, we're
gonna implement a free one in a second,

119
00:05:56.726 --> 00:05:58.350
应该挺有趣的
which should be pretty fun.

120
00:05:58.350 --> 00:06:01.627
但它告诉你们关于加密数据的算法。
But it tells you all about the algorithm
that's encrypting that data.

121
00:06:01.627 --> 00:06:04.108
有些人比其他人更安全
Some are more secure than others.

122
00:06:04.108 --> 00:06:06.918
那么这是一个，是吗 ?
So here's a, yes?

123
00:06:06.918 --> 00:06:09.242
>> 扬声器 2: 椭圆曲线公用密钥，以及
&gt;&gt; Speaker 2: It's elliptic
curve public key, and

124
00:06:09.242 --> 00:06:12.012
那是国安局已知的漏洞
that's the NSA has known vulnerabilities.

125
00:06:12.012 --> 00:06:13.055
>> Jem Young: 据我们所知。
&gt;&gt; Jem Young: As far as we know.

126
00:06:13.055 --> 00:06:14.612
如果他们有的话他们会告诉我们吗
And if they did, would they tell us?

127
00:06:14.612 --> 00:06:16.826
>> 扬声器 2: 否，他们已经- >> Jem Young: 他们已经证明了吗 ?
&gt;&gt; Speaker 2: No, they've already-
&gt;&gt; Jem Young: They've proven it?

128
00:06:16.826 --> 00:06:22.908
>> 演讲者 2: 这是众所周知的，这就是为什么政府对 SSL的渴望。
&gt;&gt; Speaker 2: It's known, that's why
the government hunky dory with SSL.

129
00:06:22.908 --> 00:06:29.332
> > Jem Young: 是的，是的，我应该做一个关于密码术的章节。
&gt;&gt; Jem Young: Yeah, well, yeah,
man I should do a section on cryptography.

130
00:06:29.332 --> 00:06:32.314
老实说我没资格谈密码术
Now I to be honest, I am not
qualified to talk about cryptography,

131
00:06:32.314 --> 00:06:34.726
大多数人不是除非你是数学家
most people are not unless
you're a mathematician.

132
00:06:34.726 --> 00:06:38.465
但是关于密码术之类的规矩
But the rule on cryptography and
things like that, don't roll your own,

133
00:06:38.465 --> 00:06:39.869
你还不够聪明
you're not smart enough.

134
00:06:39.869 --> 00:06:41.841
我不是指那是什么意思
[LAUGH] I don't mean that to be mean.

135
00:06:41.841 --> 00:06:44.183
如果你自己卷下密码你会有麻烦的
If you roll your own crypto,
you're gonna be in trouble.

136
00:06:44.183 --> 00:06:49.264
这就是为什么我们有这些已知的算法，只能用于 。
That's why we have these known algorithms
that you can only use for HTTPS.

137
00:06:49.264 --> 00:06:53.995
你不能就这样我就能创造 Jem 的散列算法然后把它引出来
You can't just, I'm gonna create Jem's
hashing algorithm and then serve that out.

138
00:06:53.995 --> 00:06:57.293
这不起作用 你得用一个已知的标准
That doesn't work.
You have to use a known standard that

139
00:06:57.293 --> 00:06:59.072
大家都同意
everybody agrees on.

140
00:06:59.072 --> 00:07:03.153
但是说到密码术和加密东西
But speaking of cryptography and
encrypting things,

141
00:07:03.153 --> 00:07:07.853
使用这种方法的缺点是什么，而不是 256 位
what's the downside of using like,
instead of 256 bits for

142
00:07:07.853 --> 00:07:10.882
键，例如使用 1024 或 248?
the key, say using 1024 or 248?

143
00:07:10.882 --> 00:07:12.690
好的好的 >> 扬声器 3: 更多字节，更多数据，
Yes, here?
&gt;&gt; Speaker 3: More bytes, more data,

144
00:07:12.690 --> 00:07:13.529
慢了
it's slower.

145
00:07:13.529 --> 00:07:14.598
> > Jem Young: 是的，速度较慢。
&gt;&gt; Jem Young: Yeah, it's slower.

146
00:07:14.598 --> 00:07:16.641
你在理论上更安全
You're theoretically more secure.

147
00:07:16.641 --> 00:07:20.394
但是当我的数据超安全的时候会有一个递减的回报点
But there's a point of diminishing returns
where you're like my data is ultra secure,

148
00:07:20.394 --> 00:07:22.992
但现在它需要更长的时间和所有这些东西随着时间的推移而增加。
but it now takes longer and
all these things add up over time.

149
00:07:22.992 --> 00:07:27.848
这些都是微秒，纳秒，但是如果你用一个巨大的钥匙，
These are microseconds, nanoseconds, but
if you use a giant key and it hashes,

150
00:07:27.848 --> 00:07:31.934
客户必须解密，服务器也必须解密。
the client has to decrypt that,
the server has to decrypt that too.

151
00:07:31.934 --> 00:07:37.122
奇怪的事实，当我们把 Netflix 转换为  它花费了我们几百万
Weird facts, when we converted Netflix
over to HTTPS, it costs us a few million

152
00:07:37.122 --> 00:07:42.002
计算时间的花费，因为解密和解密的所有密码
dollars in compute time, because all
that cryptography of decrypting and

153
00:07:42.002 --> 00:07:46.206
加密，解密和加密，成本 CPU 时间。
encrypting, decrypting and
encrypting, that cost CPU time.

154
00:07:46.206 --> 00:07:50.343
当你说的是数万亿的请求时，这会更快地增加。
And when you're talking about trillions
of requests, that adds up really quickly.

155
00:07:50.343 --> 00:07:53.233
所以这就是为什么  真正地将它推出来的原因。
So that's why HTTPS was
really slow to roll it out.

156
00:07:53.233 --> 00:07:55.932
今天成功推出的原因是
The reason why it has rolled
out successfully today is

157
00:07:55.932 --> 00:07:57.317
因为浏览器制造了我们
because browsers made us.

158
00:07:57.317 --> 00:08:01.666
他们开始羞辱那些不加密的人就像是
They started shaming people now where if
it's not encrypted there's like a big like

159
00:08:01.666 --> 00:08:04.973
斜杠或锁定符号或类似的原因，因为它们希望
slash or the lock sign or
something like that because they want to

160
00:08:04.973 --> 00:08:09.033
鼓励人们使用  因为它只是做事情的更好方式。
encourage people to use HTTPS because
it's just a better way of doing things.

161
00:08:09.033 --> 00:08:12.028
其实你不能用服务工人网蓝牙，
In fact you can't use a service
workers web bluetooth,

162
00:08:12.028 --> 00:08:14.906
Web 安全付款方式 ( 如无 ) 。
web secure payments things
like that without HTTPS.

163
00:08:14.906 --> 00:08:17.793
这就像浏览器的一点点泥
And that's just like a little
nudge by the browsers,

164
00:08:17.793 --> 00:08:21.913
如果要使用最新功能，那么最好升级系统。
hey if you want to use the latest
features, you better upgrade your system.
