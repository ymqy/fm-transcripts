WEBVTT

1
00:00:00.300 --> 00:00:05.108
>> Jem: 对于最终项目，我希望您创建交谈
&gt;&gt; Jem: For the final project
I want you to create a chat

2
00:00:05.108 --> 00:00:08.941
使用 websockets 的机器人就是这样
bot using websockets, that's it.

3
00:00:08.941 --> 00:00:12.191
我最喜欢的节目之一是英国大包
One of my favorite show was
the Great British Baking Show and

4
00:00:12.191 --> 00:00:15.512
技术上的挑战，就像做个馅饼一样。
the technical challenge,
where it's just like make a pie.

5
00:00:15.512 --> 00:00:16.710
没有其他的指示
And there's no other instructions.

6
00:00:16.710 --> 00:00:18.928
你只需要知道怎么做或者查清楚
You just have to know how to do it or
look it up.

7
00:00:20.339 --> 00:00:23.554
幸运的是我很友好我写了霍特 room.js
Fortunately, because I'm nice,
I wrote hotelroom.js,

8
00:00:23.554 --> 00:00:26.399
是我昨晚在酒店房间里写的聊天机器人
which is a chat bot I wrote
last night in my hotel room.

9
00:00:28.000 --> 00:00:29.989
所以请继续复制此存储库。
So, go ahead and clone this repo.

10
00:00:31.059 --> 00:00:32.359
如果您运行节点应用程序，
And if you run node app,

11
00:00:32.359 --> 00:00:34.909
我给你举个例子，当它运行时它的样子。
I'll give you example of what
it looks like when it's running.

12
00:00:34.909 --> 00:00:39.219
我没完全清仓因为我想给你留个神秘感
I didn't fully flush it out because
I wanna leave some mystery for you.

13
00:00:39.219 --> 00:00:42.700
但我可以像以前那样运行节点 app.js 。
But I can run node app.js
like we did before.

14
00:00:42.700 --> 00:00:45.973
我们在 3000 口
We're running on port 3000.

15
00:00:45.973 --> 00:00:51.268
我可以说当地的 3000 人
And I can say local hosts 3000.

16
00:00:51.268 --> 00:00:55.670
嘿你怎么样
Hey, and how are you?

17
00:00:55.670 --> 00:00:57.210
太聪明了
Smart, awesome.

18
00:00:57.210 --> 00:00:58.539
其实都是这样回应的。
That's actually all it responds.

19
00:00:58.539 --> 00:00:59.965
你好棒极了
Hi, awesome.

20
00:00:59.965 --> 00:01:02.304
到目前为止都这么做了我会让你做其他的
That's all it does so far,
I'll let you build up the rest of that.

21
00:01:02.304 --> 00:01:05.049
但现在我正在通过 Websocket 进行流式传输，因此
But right now I'm streaming
over a websocket, so

22
00:01:05.049 --> 00:01:08.590
连接保持打开状态，服务器将持续 ping 通。
the connection stays open,
the server is pinging constantly.

23
00:01:09.629 --> 00:01:11.730
只要保持联系就好了
Just keeping this connection alive.

24
00:01:11.730 --> 00:01:12.659
我们会去查网络的
We'll check out the network.

25
00:01:14.019 --> 00:01:14.810
第一，这一页。
First, this page.

26
00:01:17.134 --> 00:01:20.230
看我们得到的是受欢迎的有效载荷每五秒左右
See that we get the welcome payload and
about every five seconds or so,

27
00:01:20.230 --> 00:01:23.789
我们应该有个 ping 通了就能保持联系
we should get a ping coming through,
just keeping that connection alive.

28
00:01:23.789 --> 00:01:26.629
如果没有的话，我看看我的代码，看看我做错了什么。
If not, I'll take a look at my code and
see what I did wrong.

29
00:01:26.629 --> 00:01:31.409
但你说我们在客户上使用纯 websockets
But you say we're using on the client,
we're just using pure websockets.

30
00:01:31.409 --> 00:01:32.849
我们不使用图书馆什么的
We're not using a library or
anything like that.

31
00:01:32.849 --> 00:01:34.490
我们不使用 socket.io。
We're not using socket.io.

32
00:01:34.490 --> 00:01:36.810
在服务器端，我正在使用 WS 库。
On the server side,
I'm using the WS library.

33
00:01:36.810 --> 00:01:40.079
因此，在克隆该存储库之后，请确保您的 NPM 安装。
So make sure your NPM install
after you clone that repo.

34
00:01:41.560 --> 00:01:44.899
而且，要让 websockets 在 EngineX公司工作，
And, to make websockets work in EngineX,

35
00:01:44.899 --> 00:01:49.490
我们必须使用称为升级请求的内容。
we have to use what is known
as an upgrade request.

36
00:01:49.490 --> 00:01:54.725
因此，在您的位置块中，必须添加标题升级 HD 升级，
So in your location block, you have
to add the header upgrade HD upgrade,

37
00:01:54.725 --> 00:01:57.180
以及连接类型升级。
and the connection type upgrade.

38
00:01:57.180 --> 00:01:59.099
因为 Web 套接字比常规连接更好。
Because web sockets are better
than regular connection.

39
00:01:59.099 --> 00:02:00.450
所以这是升级如果你愿意的话
So it's an upgrade, if you will.

40
00:02:01.609 --> 00:02:05.439
这将允许 Web 套接字流到节点应用程序。
And that will allow the websockets to
stream through to your node application.

41
00:02:06.510 --> 00:02:09.280
剩下的我就留给你了
The rest I will leave up to you for now.

42
00:02:09.280 --> 00:02:11.460
在我们分手之前还有什么问题吗
Is there any questions
before we break fully?

43
00:02:12.620 --> 00:02:15.174
有些人看起来很困惑
Some of you look confused.

44
00:02:15.174 --> 00:02:16.717
>> 演讲者 2: 目标是什么 ?
&gt;&gt; Speaker 2: What's the goal?

45
00:02:16.717 --> 00:02:19.590
总体目标是什么 ?
What's the overarching goal?

46
00:02:19.590 --> 00:02:23.396
>> Jem: 要将 Websocket 连接流式方法构建到服务器中。
&gt;&gt; Jem: To build a websocket connection
streaming through to your server.

47
00:02:28.336 --> 00:02:29.800
>> 演讲者 3: 要做什么，再说一次。
&gt;&gt; Speaker 3: To what, say it again.

48
00:02:29.800 --> 00:02:32.270
>> Jem: 我们正在建立一个聊天机器人。
&gt;&gt; Jem: We're building a chat bot.

49
00:02:32.270 --> 00:02:35.735
我说 bot bot ， bot bot.
Well, I say chat bot but, chat bot.

50
00:02:35.735 --> 00:02:37.086
太傻了
It's pretty dumb.

51
00:02:37.086 --> 00:02:41.340
但我们使用的是 Websocket 连接，而不仅仅是纯 TCP 连接。
But we're using a websocket connection
rather than just a pure TCP connection.

52
00:02:41.340 --> 00:02:42.610
所以我们不会那样做。
So we're not doing that back and forth.

53
00:02:42.610 --> 00:02:44.590
这只是一个单一的联系。
It's just one single connection.

54
00:02:44.590 --> 00:02:47.634
这意味着您需要将其连接到客户机中，
So that means you need to
connect it in the client,

55
00:02:47.634 --> 00:02:52.356
您需要将其路由到您的服务器以进入您的 EngineX 配置。
you need to route it through to your
server into your EngineX configuration.

56
00:02:52.356 --> 00:02:56.670
从 EngineX ，它需要将该 Websocket 路由到 Express 应用程序。
From EngineX it needs a route that
websocket to your Express application.

57
00:02:56.670 --> 00:02:58.747
Express 应用程序需要处理该 Websocket 和
And the Express application needs
to handle that websocket and

58
00:02:58.747 --> 00:03:00.560
然后再从隧道回回来
then respond back all the way
back through the tunnel.

59
00:03:02.500 --> 00:03:03.310
我没让它硬了
See, I wasn't making it hard,

60
00:03:03.310 --> 00:03:07.889
我本来要把这些都放在一个子域上但我不想让你太努力
I was gonna make this all on a subdomain,
but I didn't wanna push you too hard.

61
00:03:07.889 --> 00:03:09.319
对于子域上可以执行的奖励积分。
For bonus points you
can do on a subdomain.

62
00:03:10.610 --> 00:03:14.020
> > 演讲者 3: 我们要把我们所得到的东西都炸掉
&gt;&gt; Speaker 3: We're just gonna blow
away what we've got so far and easier.

63
00:03:14.020 --> 00:03:15.370
>> Jem: 如果喜欢。
&gt;&gt; Jem: If you like.

64
00:03:15.370 --> 00:03:19.250
另一个选项是您可以添加其他位置块，并且
Another option is you can add
a different location block and

65
00:03:19.250 --> 00:03:21.806
将流量路由到其他节点应用程序。
route your traffic to just
a different node application.

66
00:03:21.806 --> 00:03:25.319
带 PMC 的 Cuz ，我们可以运行 50 个节点应用程序。
Cuz with PMC, we can run 50 node
applications if we want to.

67
00:03:25.319 --> 00:03:26.329
完全符合你的要求
Totally up to you.

68
00:03:26.329 --> 00:03:30.579
这与自由格式的技术部分相似，因此您可以使其正常工作。
This is like the technical portion of
the free form so you can get it working.

69
00:03:32.479 --> 00:03:36.337
如果你想点暗示把雷波克隆到你的本地机器上
And if you want a few hints,
clone the repo to your local machine,

70
00:03:36.337 --> 00:03:39.240
运行节点 app.js。
run node app.js.

71
00:03:39.240 --> 00:03:41.620
然后去当地的 3000 台主机上
And then go to local host
3000 on your local machine,

72
00:03:41.620 --> 00:03:44.719
它会帮助您在放置服务器之前进行调试。
and it'll help you debug
before you put on the server.
