WEBVTT

1
00:00:02.024 --> 00:00:02.680
>> Jem Young: 好的，
&gt;&gt; Jem Young: All right,

2
00:00:02.680 --> 00:00:08.279
我们提到的另一件事就是所谓的许可
another thing we we touched on
is something called permissions.

3
00:00:08.279 --> 00:00:12.952
所以许可权的类型基于这个想法，最终可能有人会
So permissions kind of are based on this
idea that eventually someone probably will

4
00:00:12.952 --> 00:00:14.339
进入你的服务器
get into your server.

5
00:00:14.339 --> 00:00:18.390
这并不是真的，但它是从这些线条中思考的。
That's not actually true, but
it's kind of thinking along those lines.

6
00:00:18.390 --> 00:00:22.390
许可权意味着您正在锁定可对文件执行的操作。
Permissions mean you're locking
down what you can do with a file.

7
00:00:22.390 --> 00:00:25.420
还有那些事我要问你
And those things, actually I'll ask you,

8
00:00:25.420 --> 00:00:27.839
你能用档案做什么
what are the things you
can do with a file?

9
00:00:27.839 --> 00:00:30.754
而且只有三种东西，它们是非常基本的。
And there's only three things,
and they're pretty fundamental.

10
00:00:30.754 --> 00:00:33.771
怎么了 >> 扬声器 2: 读，写，执行。
Yes?
&gt;&gt; Speaker 2: Read, write, execute.

11
00:00:33.771 --> 00:00:36.320
>> Jem Young: 确实，您可以读取文件，可以写入文件，并且
&gt;&gt; Jem Young: Exactly, you can read
a file, you can write to a file, and

12
00:00:36.320 --> 00:00:39.066
如果它是某种程序，那么您可以执行该文件，并且
you can execute that file if
it's some sort of program, and

13
00:00:39.066 --> 00:00:41.049
许可权都是关于控制的。
permissions are all
about controlling that.

14
00:00:42.100 --> 00:00:46.609
比如说我们什么都是用 sudo 的，因为我们没有权限
For instance, we use sudo for everything
because we don't have permission

15
00:00:46.609 --> 00:00:48.859
修改，比如说，防火墙之类的。
to modify, say, the firewall or
something like that.

16
00:00:48.859 --> 00:00:51.020
所以我们用超级用户的力量来做到这一点。
So we're using the super
user power to do that.

17
00:00:51.020 --> 00:00:52.520
这意味着如果有人来我的服务器
Which means if someone
came into my server and

18
00:00:52.520 --> 00:00:56.908
他们不知道我的 sudo 密码还会惹麻烦
they don't know my sudo password they
can still cause a lot of trouble.

19
00:00:56.908 --> 00:01:00.189
但他们的爆炸半径非常有限因为他们没有
But they're gonna be very limited in their
blast radius because they don't have that

20
00:01:00.189 --> 00:01:03.789
路由许可权，这几乎完全忽略所有许可权。
route permission, which pretty much
ignores all of the permissions.

21
00:01:03.789 --> 00:01:06.200
因此，我们有这样的文件许可权概念。
So we have this concept
of file permissions.

22
00:01:07.760 --> 00:01:10.935
昨天我们修改了授权密钥文件
Yesterday we modified our authorized
key file to be readable and

23
00:01:10.935 --> 00:01:15.560
只能由我们和超级用户写，因为我们不希望有人进来
writable by only us and the super user
because we don't want people coming in and

24
00:01:15.560 --> 00:01:20.299
修改该密钥文件 ( 如果他们无权访问我的帐户或 root 帐户) 。
modifying that key file if they don't have
access to my account or the root account.

25
00:01:22.870 --> 00:01:29.980
我提到解码，我们使用的数字是一种手杖。
And I mentioned that the decode, the
numbers that we use are kind of arcane.

26
00:01:29.980 --> 00:01:35.039
有一个转换可对我的可读和可写操作进行转换
There is a conversion that converts
what's readable and writable to my

27
00:01:35.039 --> 00:01:39.740
用户与 root 用户相比，但我已经查过一次，这很复杂。
user versus the root user, but I've looked
it up once and it's really complicated.

28
00:01:39.740 --> 00:01:43.289
所以你最好记住你只需要的那些
So it's better just to memorize
the ones that you only need.

29
00:01:43.289 --> 00:01:46.289
我说这很有诱惑力
I'll say this, it's really tempting.

30
00:01:46.289 --> 00:01:49.500
您可能看到了使用 chmod 命令的代码示例。
You've probably seen code examples
to use the chmod command.

31
00:01:49.500 --> 00:01:53.890
这就是变更修改，这意味着文件的许可权。
So that's change modification,
which means permissions for a file.

32
00:01:53.890 --> 00:01:59.030
而且很容易就能读完这件事
And it's really easy just to be,
well, I need this file to be read and

33
00:01:59.030 --> 00:02:01.680
我现在无权这么做所以我想去执行它
I don't have permission to do it right
now so I'm trying to execute it.

34
00:02:01.680 --> 00:02:04.599
而且只能由超级用户执行
And that can only be executed
by the super user so

35
00:02:04.599 --> 00:02:06.034
我要把它做 chmod 777
I'm just going to make it chmod 777.

36
00:02:06.034 --> 00:02:10.020
那是你一直看到的那就是最出名的
That's one you see all the time, and
that's what's known as the laziest

37
00:02:10.020 --> 00:02:12.319
许可权，因为它意味着您不必考虑许可权。
permission because it means you don't
have to think about permissions.

38
00:02:12.319 --> 00:02:14.639
这对每个人都是开放的
It's just open to everybody.

39
00:02:14.639 --> 00:02:18.599
你不应该做 777 除非你真的知道自己在做什么
You shouldn't do 777 unless you
really know what you're doing or,

40
00:02:19.780 --> 00:02:22.009
我不会说你太着急了，你太坏了。
I won't say you're in a hurry,
cuz [LAUGH] that's so bad.

41
00:02:22.009 --> 00:02:25.099
但如果你急着要去执行一个剧本
But if you're in a hurry and
you're trying to execute a script and

42
00:02:25.099 --> 00:02:30.060
它没有安全的影响你可以用 777 但是你一般都不知道
it has no security ramifications you
can use 777, but you generally don't.

43
00:02:30.060 --> 00:02:32.699
我们不会做太多的工作但是
We're not gonna do too
much with permissions, but

44
00:02:32.699 --> 00:02:34.020
如果你想看看他们
if you wanna take a look at them.

45
00:02:35.849 --> 00:02:39.039
假设我们在家里的目录里没什么大事
Let's say we're in our home directory,
there's nothing major.

46
00:02:39.039 --> 00:02:46.280
所以我们可以说，它会告诉我所有读，写的权限。
So we can say ls -la and it's gonna tell
me all the permissions for read, write.

47
00:02:47.849 --> 00:02:52.819
所以它是读，写，执行自己，读，写，为我的组执行，
And so it's read, write, execute for
myself, read, write, execute for my group,

48
00:02:52.819 --> 00:02:55.800
是 sudo，读，写，执行每个人。
which is sudo, and read,
write, execute for everyone.

49
00:02:55.800 --> 00:02:58.939
这就是你的权限
And that's what the permissions,

50
00:02:58.939 --> 00:03:04.300
我真的希望他们能把 chmod 映射到这里的实际命令，但它们不会。
I really wish they would map chmod to
the actual commands here but they don't.

51
00:03:04.300 --> 00:03:06.189
所以你要记住其中的一些。
So you just have to memorize some of them.

52
00:03:06.189 --> 00:03:08.219
但如果你看到 777 它会被读出来
But if you see 777 it's gonna be read,

53
00:03:08.219 --> 00:03:10.599
写，跨所有板执行。
write, execute across the board for
everything.

54
00:03:10.599 --> 00:03:11.389
别用那个了
Just don't use that one.

55
00:03:14.580 --> 00:03:16.819
其实我只会查个男人的 chmod
And actually, I'll just look up man chmod.

56
00:03:18.651 --> 00:03:20.711
>> Jem Young: 更改文件方式位，是。
&gt;&gt; Jem Young: Change file mode bits, yeah.

57
00:03:23.774 --> 00:03:27.317
>> Jem Young: 可以在午饭时给我们的奖金
&gt;&gt; Jem Young: Maybe for
a bonus trivia over lunch we can look up

58
00:03:27.317 --> 00:03:31.409
4 到许可权级别的映射。
what exactly maps like a four
to the permission level.

59
00:03:31.409 --> 00:03:33.731
有一个映射，它只是不直观。
And there is a mapping,
it just is not intuitive.

60
00:03:36.173 --> 00:03:41.750
>> Jem Young: 但总的来说，你一直想对你的档案拥有最少的信任。
&gt;&gt; Jem Young: But in general, you always
wanna have the least trust for your file.

61
00:03:41.750 --> 00:03:43.229
所以如果一个团体或者
So if a group or

62
00:03:43.229 --> 00:03:48.170
用户不需要专门访问文件，只需将其锁定。
user doesn't need to specifically
access a file, just lock it down.

63
00:03:48.170 --> 00:03:51.969
您希望尽可能少的许可权
You want to have the least
permissions as possible

64
00:03:51.969 --> 00:03:53.639
以防有人进入你的服务器
just in case someone
gets into your server.

65
00:03:53.639 --> 00:03:57.219
或者从 DevOps的角度来考虑案例。
Or think of a case in terms of DevOps.

66
00:03:57.219 --> 00:04:01.750
如果您正在为大量用户运行服务器，那么您不希望它们能够
If you're running a server for lots of
users, you don't want them to be able to

67
00:04:01.750 --> 00:04:05.870
为每个用户启用许可权，因为其中一个用户可能要
enable permissions for everybody because
one of those users is probably gonna

68
00:04:05.870 --> 00:04:09.199
有不好的密码之类的或者坏的钥匙被偷了
have a bad password or something like
that or a bad key that got stolen.

69
00:04:09.199 --> 00:04:10.240
如果有人这样说的话
And if someone breaks in with that,

70
00:04:10.240 --> 00:04:12.500
你希望他们能做最少的损失
you want them to be able to do
the least amount of damage.
