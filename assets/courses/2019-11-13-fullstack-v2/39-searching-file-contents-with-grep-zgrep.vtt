WEBVTT

1
00:00:01.810 --> 00:00:05.900
>> Jem Young: 因此查找查找文件的工作，但如果您想执行某些操作
&gt;&gt; Jem Young: So find works for finding
files but what if you want to do some

2
00:00:05.900 --> 00:00:08.410
你想看看里面的文件吗
sort of introspection,
you want to look inside a file?

3
00:00:08.410 --> 00:00:13.339
我们用 grep ， grep 是，很多人不喜欢
We use grep, and grep is,
a lot of people don't like it because

4
00:00:13.339 --> 00:00:17.257
很多人不喜欢正则表达式
a lot of people don't
like regular expressions.

5
00:00:17.257 --> 00:00:21.664
他们说如果你有问题需要用正则表达式
They say if you have a problem and
you need to use a regular expression,

6
00:00:21.664 --> 00:00:25.111
现在你有两个问题，绝对是真的。
now you have two problems,
which is absolutely true.

7
00:00:25.111 --> 00:00:27.850
[ LAUGH] 还有一个随机编程提示。
[LAUGH] And a random programming tip.

8
00:00:27.850 --> 00:00:31.190
如果您是代码中的正则表达式，请注释该正则表达式
If you are regular expressions in your
code, comment what that regular expression

9
00:00:31.190 --> 00:00:35.140
是我向你保证当你想出来的时候别人可能不会
is, cuz I promise you while you figure
it out, someone else probably won't.

10
00:00:35.140 --> 00:00:38.700
这就像一个普通公民的小费。
And it's just like a tip for
just being a good citizen.

11
00:00:38.700 --> 00:00:40.479
但是格雷普我们要用一些正则表达式
But grep,
we're gonna use some regular expressions.

12
00:00:40.479 --> 00:00:44.219
我们不会太深的因为可能有个问题
We are not gonna go too deep into them
because there's probably a course on

13
00:00:44.219 --> 00:00:49.840
正则表达式，并且它们会变得非常，很脏。
regular expressions, and
they can get really, really nasty.

14
00:00:49.840 --> 00:00:51.262
有人知道高尔夫是什么代码吗
Anybody know what code golf is?

15
00:00:52.811 --> 00:00:55.497
>> Jem Young: 是你有问题的地方，然后贴在
&gt;&gt; Jem Young: It's where you have
a problem, and then you post it on

16
00:00:55.497 --> 00:00:59.801
有人说我要用最短的密码来解决这个问题
the internet, and someone says I'm gonna
solve this in the shortest amount of code,

17
00:00:59.801 --> 00:01:03.030
几乎总是有人把正则表达式和
and almost invariably someone
puts the regular expressions and

18
00:01:03.030 --> 00:01:04.909
他们有时候会喜欢书页
they get like pages long sometimes.

19
00:01:04.909 --> 00:01:10.650
你可以和他们玩很多但这不是我的书呆子
And you can have a lot of fun with them
but that's not the way I nerd out.

20
00:01:10.650 --> 00:01:12.010
我对快速和疯狂的部落感到不安
I nerd on the Fast and Furious trivia.

21
00:01:13.450 --> 00:01:14.222
是真的我知道
It's true, I do.

22
00:01:14.222 --> 00:01:16.484
比如说你知不知道在第一个快法和富丽华，
For instance, did you know in
the first Fast and Furious,

23
00:01:16.484 --> 00:01:18.899
他们的车都没有后视镜吗
they don't have any rear-view
mirrors in any of their cars?

24
00:01:18.899 --> 00:01:22.500
你可能没注意到因为他们从不回头
You probably didn't notice that
because they never look back.

25
00:01:22.500 --> 00:01:24.215
我没开玩笑好吧
I'm not kidding, okay.

26
00:01:24.215 --> 00:01:26.644
[ LAUGH] 在 Netflix 上看 Fast 和 Furhous。
[LAUGH] Go on Netflix watch The Fast and
the Furious.

27
00:01:26.644 --> 00:01:27.819
如果我在那我们就会坐到一边去
If I were there, we'll sit aside.

28
00:01:27.819 --> 00:01:30.329
但你不必这么做我只是想在今天得到温暖
But you don't have to, I'm just
trying to get warmed up for today.

29
00:01:30.329 --> 00:01:33.783
但 grep 是我们已经用过的东西之一
But grep is one of the things
that we've used already.

30
00:01:33.783 --> 00:01:37.031
其实我们打字输的时候用它 grep 看过去
In fact, we use it when we're typing
output through and grep just looks over

31
00:01:37.031 --> 00:01:40.719
所有这些代码的每一行都在寻找我们想要找到的东西
every single line of that code, and
looks for what we're trying to find.

32
00:01:40.719 --> 00:01:43.439
如果你想看一个文件
And if you want to look inside a file, and

33
00:01:43.439 --> 00:01:48.500
这实际上是一个很棒的实用程序， zgrep 搜索 gzip 文件。
this is actually an awesome utility,
zgrep search inside of gzip files.

34
00:01:48.500 --> 00:01:52.509
因为随着时间的推移，日志文件会自动在 gzip中并置。
Because over time, log files
automatically get concatenated in gzip.

35
00:01:52.509 --> 00:01:57.460
你就像去年 12 月 23 日发生的事吗
You're here like,
what happened December 23rd of last year?

36
00:01:57.460 --> 00:02:01.329
您可以找到该日志文件，该文件将被压缩，并且您可以使用 zgrep
You could find that log file, which is
gonna be minified, and you can use zgrep

37
00:02:01.329 --> 00:02:04.480
在里面进行搜索而不是把它解包然后再穿过它
and search inside it rather than having
to unpack it and then run through it.

38
00:02:04.480 --> 00:02:07.198
所以，让我们在 grep上做个简单的练习。
So let's do a quick exercise on grep.

39
00:02:09.758 --> 00:02:13.088
>> Jem Young: 如果您的节点进程正在运行，那么让我们执行 ps。
&gt;&gt; Jem Young: And if your node
process is running, let's do ps.

40
00:02:13.088 --> 00:02:17.310
因此，为了显示正在运行的进程，我们正在传递一些参数。
So to show the running process,
we're passing some arguments.

41
00:02:17.310 --> 00:02:20.259
aux 显示所有进程。
aux is show all of the processes.

42
00:02:20.259 --> 00:02:21.629
其实我在这里的笔记里有
Actually, I have it in my notes here.

43
00:02:21.629 --> 00:02:24.579
显示所有用户的流程，显示流程所有者，
Show the process for all the users,
display the process owners,

44
00:02:24.579 --> 00:02:27.810
然后显示未在终端 AKA中运行的进程
and then show processes that are not
running in the terminal, AKA,

45
00:02:27.810 --> 00:02:29.170
在后台运行的进程。
processes that are running
in the background.

46
00:02:30.840 --> 00:02:34.614
并且您应该有一个进程正在运行，因为如果您的服务器已启动并正在运行，
And you should have a process running
because if your server is up and running,

47
00:02:34.614 --> 00:02:38.001
快速服务器已启动并正在运行，意味着节点正在运行。
the express server is up and running,
and that means Node is running.

48
00:02:38.001 --> 00:02:40.675
我现在就这么做了明白了
So I'm gonna do that now, clear.

49
00:02:40.675 --> 00:02:46.509
我们得用重定向运算符 grep 节点来处理
ps aux, we got to pipe that with
the redirection operator, grep node.

50
00:02:47.860 --> 00:02:53.810
在那里，我有一个节点进程正在运行。
And there we go,
I have a node process running.

51
00:02:53.810 --> 00:02:56.680
这就是你脑海中最重要的事情之一
This is one of these things that
keep at the top of your mind

52
00:02:56.680 --> 00:02:59.432
如果你一直在做很长很长的日志文件
if you're ever running through a long,
long log file.

53
00:03:01.310 --> 00:03:04.569
Grep 是寻找事物的最快途径，而不是手动遍历每一个
Grep is the fastest way to find something
rather than manually traversing every

54
00:03:04.569 --> 00:03:05.599
单行。
single line.

55
00:03:05.599 --> 00:03:09.620
让我们做点小点的吧格雷普
Let's try do a little,
just pipe this, grep.

56
00:03:09.620 --> 00:03:14.379
事实上让我看看有什么好的
Actually, let me see what's
something good to grep for.

57
00:03:14.379 --> 00:03:20.049
我要找每一个我登录的例子，所以我管它，然后是 grep then jem.
I'll look for every instance that I
logged in so I pipe that, grep then jem.

58
00:03:20.049 --> 00:03:20.870
我们走吧
Here we go.

59
00:03:22.159 --> 00:03:24.629
这里是我登录或登录的每个实例
And here's every instance
where I logged in or

60
00:03:24.629 --> 00:03:26.389
做了一些需要苏多人同意的事情
did something that
requires sudo permission.

61
00:03:28.219 --> 00:03:32.750
现在，如果我真的很聪明，我不是，但如果我比我聪明得多，
Now, if I was really clever, and I'm not,
but if I was much more clever than me,

62
00:03:32.750 --> 00:03:36.139
表示 jem 2.0，我将创建正则表达式
say jem 2.0,
I would create a regular expression for

63
00:03:36.139 --> 00:03:41.960
未经授权的人，我可以把这个名单拿上，去拿 IP 地址。
everybody that was unauthorized, I can
take that list and grab the IP addresses.

64
00:03:41.960 --> 00:03:44.159
那就管那些被禁止的名单
Then pipe those to a banned list.

65
00:03:44.159 --> 00:03:47.310
最伟大的是我们现在有能力做到这一点。
And the great thing is we now have
those capabilities of doing that.

66
00:03:47.310 --> 00:03:49.189
我们可以把它们写在一个日志文件中
We could write them to a log file,
separate log file,

67
00:03:49.189 --> 00:03:52.479
就像邪恶的 IP 日志文件之类的
which are like evil IP log file or
something like that.

68
00:03:52.479 --> 00:03:55.579
我们可以在命令行的 3 个或 3 个
And we can do that all in
the command line in three or

69
00:03:55.579 --> 00:04:00.366
命令上的四个步骤非常强大
four steps on the command,
which is really powerful.

70
00:04:00.366 --> 00:04:03.509
我知道，我们正在安顿下来，我开始变得更兴奋
I know, [LAUGH] we're settling in and I'm
starting to get a bit more excited about

71
00:04:03.509 --> 00:04:05.039
我们今天要学的东西
all the things we're going to learn today.

72
00:04:05.039 --> 00:04:06.370
我们所学到的一切
All the things we have learned already.
