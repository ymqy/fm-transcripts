WEBVTT

1
00:00:00.060 --> 00:00:03.089
如果您从未见过请求动画框架，那么这一问题很有挑战性。
This one is challenging if you've
never seen a request animation frame.

2
00:00:03.089 --> 00:00:07.610
所以如果没别的的话那就是一个很好的例子
So, if nothing else, it's a good example
of how you'd move something smoothly

3
00:00:07.610 --> 00:00:10.929
你可能要做的就是做一个 UI 工程师
into the dom which is something you would
probably have to do as a UI engineer.

4
00:00:10.929 --> 00:00:11.970
让我们从这个功能开始。
So let's start with this function.

5
00:00:15.630 --> 00:00:17.190
我们会把它叫做动元件
And we'll call it move elements.

6
00:00:18.800 --> 00:00:20.338
这需要持续的时间。
And it takes the duration.

7
00:00:22.711 --> 00:00:25.010
它有一个距离，它是一个元素。
Takes the distance, and
it takes an element.

8
00:00:28.179 --> 00:00:31.370
好吧这次我们不回来了
Okay, in this one we're not returning

9
00:00:31.370 --> 00:00:34.979
因为这不是这个功能的关键
anything necessarily because that's
not the point of this function.

10
00:00:34.979 --> 00:00:37.210
我们所做的一切都将会更新我们的天地
Everything we do is
going to update the dom.

11
00:00:37.210 --> 00:00:38.479
它会更新元素本身
It's gonna update the element itself.

12
00:00:38.479 --> 00:00:40.640
所以我们实际上不需要归还任何东西。
So we don't actually
have to return anything.

13
00:00:40.640 --> 00:00:45.280
但在这种情况下我想用请求动画来呼叫
But in this case,
I wanna use request animation to call

14
00:00:46.520 --> 00:00:49.179
元素，找出该元素所在的位置，以及
the element,
find out where that element is, and

15
00:00:49.179 --> 00:00:52.960
然后根据我要移动的持续时间逐渐地移动它。
then move it incrementally based on
the duration that I wanna move over.

16
00:00:54.009 --> 00:00:56.429
所以我要做的第一件事就是呼叫请求动画的框架
So the first thing I'm gonna do is I'm
gonna call request animation frame.

17
00:00:59.280 --> 00:01:04.290
这也是窗口上可用的功能。
Which again, is a function that
is available on the window.

18
00:01:04.290 --> 00:01:06.670
所以，如果你进入控制台，输入请求动画帧，
So it's there, if you go in your console
and type request animation frame,

19
00:01:06.670 --> 00:01:07.299
它会弹出来的
it'll pop right up.

20
00:01:08.890 --> 00:01:11.489
我想搬动
And I wanna start off by moving.

21
00:01:12.569 --> 00:01:13.245
我想叫这个功能
I wanna call this function.

22
00:01:13.245 --> 00:01:17.432
我要给它打个电话然后给它打电话让我们在这里创造创意
I'm gonna call this function in and
we'll call it, let's get creative here,

23
00:01:17.432 --> 00:01:18.566
我们会叫它动
we'll call it move.

24
00:01:23.603 --> 00:01:27.230
这就是我的工作，这就是所有逻辑的所在。
And this is my workhorse,
this is where all the logic is gonna be.

25
00:01:27.230 --> 00:01:31.569
requestAnimationFrame 只是回调，如果您愿意，或者
requestAnimationFrame is just a callback,
if you will, or

26
00:01:31.569 --> 00:01:33.460
移动在技术上是一个回调。
move is technically a callback.

27
00:01:33.460 --> 00:01:35.448
那么 requestAnimationFrame ，我们将对此进行调用。
So requestAnimationFrame,
we're gonna call move on this.

28
00:01:37.876 --> 00:01:41.960
因此，这将首次调用此函数。
So this will invoke this
function the first time around.

29
00:01:41.960 --> 00:01:44.930
我想做的就是因为我正在移动一段时间
And what I wanna do is because I'm
moving something over a duration,

30
00:01:44.930 --> 00:01:47.340
我们会说 const.
we'll say const.

31
00:01:47.340 --> 00:01:50.950
我们会得到开始时间等于绩效。
We'll get the start time
equals performance.now.

32
00:01:50.950 --> 00:01:52.250
您也可以执行新日期。
You can also do new date.

33
00:01:52.250 --> 00:01:53.391
这并不重要。
It doesn't really matter.

34
00:01:53.391 --> 00:01:56.140
我喜欢 performance.now 的语法很短。
I like performance.now cuz
it's pretty short in syntax.

35
00:01:56.140 --> 00:02:01.239
这会给我这个动画开始的时间
That's gonna give me the time
that this animation started.

36
00:02:01.239 --> 00:02:02.989
当 requestAnimationFrame 调用函数时，
When requestAnimationFrame
calls a function,

37
00:02:02.989 --> 00:02:06.650
它还会传递到高分辨率 DOM 时间戳记。
it also passes in
a high-resolution DOM timestamp.

38
00:02:06.650 --> 00:02:08.469
这是事实的真实名称，等等。
That is the actual name of the thing,
wait.

39
00:02:08.469 --> 00:02:10.497
我能看到人们不相信我
I can see people don't believe me.

40
00:02:10.497 --> 00:02:15.981
让我们看看高分辨率的时间戳
Let's see, high-resolution timestamp.

41
00:02:19.397 --> 00:02:21.530
看它是真实的 Dom High Res 时间戳记
See it's a real thing,
Dom High Res Time Stamp.

42
00:02:21.530 --> 00:02:24.810
我不知道那里有一些怀疑论者我知道
I don't know,
there's some skeptics out there, I know.

43
00:02:24.810 --> 00:02:27.509
但我们知道它会在某个地方
But, we know that it's
gonna be somewhere along

44
00:02:27.509 --> 00:02:31.481
在准确性和移动方面未知的性能线。
the lines of performance unknown in terms
of accuracy and in terms of moving.

45
00:02:31.481 --> 00:02:35.110
因为 requestAnimationFrame 几乎总是用于动画某些东西。
Because requestAnimationFrame is almost
always used to animate something.

46
00:02:35.110 --> 00:02:40.396
所以我要说时间戳记，我们现在就叫它。
So I'm gonna say Timestamp,
we'll call it current time.

47
00:02:44.710 --> 00:02:49.110
好的，我想到这个问题的下一个方法是什么 ?
Okay, what's the next way
I think of this problem?

48
00:02:50.490 --> 00:02:53.326
那么 requestAnimationFrame 将调用一次移动。
Well, requestAnimationFrame
is gonna call move one time.

49
00:02:53.326 --> 00:02:55.639
然后就这样了
And then that's it.

50
00:02:55.639 --> 00:02:59.560
因此，我们需要 requestAnimationFrame 再次调用移动。
So we need requestAnimationFrame
to call move again.

51
00:02:59.560 --> 00:03:02.669
所以它会一直自我定位直到满足某些条件
So it's gonna keep referencing
itself until some condition is met.

52
00:03:03.909 --> 00:03:07.030
所以我想用一个 if 语句把它包起来因为我们不希望它持续
So I wanna wrap this in an if statement
because we don't want it to continually

53
00:03:07.030 --> 00:03:08.421
一次又一次地打过去
call over and over and over again.

54
00:03:08.421 --> 00:03:11.849
我们会说如果有什么事我们会回来的
We'll say if something,
we'll come back to that.

55
00:03:11.849 --> 00:03:12.699
好吧好吧
All right.

56
00:03:12.699 --> 00:03:15.229
现在我们有了一个动画循环。
So now we have an animation loop of sorts.

57
00:03:15.229 --> 00:03:17.900
它什么都没做但它会自打过去
It's not doing anything, but
it will call itself over and over and

58
00:03:17.900 --> 00:03:19.159
再次转移到元素中
over again to move in elements.

59
00:03:20.329 --> 00:03:21.819
下一步我们想做什么 ?
What do we want to do next?

60
00:03:25.719 --> 00:03:28.379
我们想把它的元素右移。
We want to actually
move the element right.

61
00:03:28.379 --> 00:03:30.099
我们如何在 JavaScript中做到这一点 ?
And how would we do that in JavaScript?

62
00:03:30.099 --> 00:03:36.229
我们可以说 elements.style。
We can say elements.style.

63
00:03:36.229 --> 00:03:45.090
我们会改变我们的地位我们要翻译 x
And we're gonna run a transform equals,
we're gonna wanna translate x.

64
00:03:47.270 --> 00:03:49.150
我们要把它移动一段距离
And we're gonna wanna
move it some distance.

65
00:03:49.150 --> 00:03:53.175
所以，我们还没有真正了解到距离，所以我要把它留空。
So, we don't actually know the distance
yet, so I'll leave that blank.

66
00:03:53.175 --> 00:03:55.843
这将以像素为单位。
And that's gonna be in pixels.

67
00:03:55.843 --> 00:03:59.086
这听起来很熟悉吗
This sounding familiar to anybody?

68
00:03:59.086 --> 00:04:02.629
你已经做过了你可能是在 CSS里做的
You've done it,
you've probably done it in CSS.

69
00:04:02.629 --> 00:04:06.490
用 JavaScript 来做是非常相似的，只是不同的名字。
Doing it in JavaScript is very similar,
it's just different names of things.

70
00:04:07.490 --> 00:04:09.990
现在你是警察了你都挂在里面了
Now you're troopers,
you're all hanging in there.

71
00:04:09.990 --> 00:04:15.229
好吧，这就是数学进来的地方，这不好听，我开玩笑的。
All right, this is where the math comes
in and it's not pleasant, I'm kidding.

72
00:04:15.229 --> 00:04:18.550
这只是你怎么想的方法
It's just a way of how you think about it.

73
00:04:18.550 --> 00:04:23.480
所以给出一个时间，距离，时间，我们怎么计算，
So given a duration, distance, and
time, how do we calculate out,

74
00:04:23.480 --> 00:04:28.675
有什么粗略的公式来计算每个循环应该移动多少 ?
what's the rough formula to figure
out how much we should move per loop?

75
00:04:28.675 --> 00:04:32.187
让我们从开始开始吧
Well let's start with
let's start with elapsed.

76
00:04:32.187 --> 00:04:34.295
我们想想过去有多少时间
Let's figure out how
much time has passed and

77
00:04:34.295 --> 00:04:37.079
然后我们就可以用它来计算我们需要的距离
then we can use that to calculate
the distance that we need.

78
00:04:43.980 --> 00:04:44.480
好的。
Okay.

79
00:04:45.689 --> 00:04:49.670
到目前为止，我们所花的时间是相当的，现在是什么时候 ?
Pretty follow so far to get the elapsed
time we take, what time is it now?

80
00:04:49.670 --> 00:04:51.310
我们什么时候开始
What time did we start?

81
00:04:51.310 --> 00:04:55.639
4 点开始， 4 点 05分， 5 分钟已经过去了。
We started at 4 o'clock and
it's now 4:05, five minutes have elapsed.

82
00:04:55.639 --> 00:04:57.709
这才是经过时间给我们的好吧
That's what elapsed time is gonna give us,
okay.

83
00:04:58.829 --> 00:05:01.560
为了取得进步，这就是你的主要部分。
So to get the progress,
this is were the mathy part comes in.

84
00:05:06.987 --> 00:05:08.410
Hm .
Hm.

85
00:05:09.699 --> 00:05:16.110
我们可以说在总时间内耗用了多少时间。
We can say how much time has
elapsed over the total duration.

86
00:05:17.959 --> 00:05:22.029
那么花费了多少时间与我们的时间有多大的比例
So what's the ratio of how much time
has been spent versus how much time we

87
00:05:22.029 --> 00:05:23.269
想花花花去
want to spend.

88
00:05:23.269 --> 00:05:25.199
这使我们取得了进展。
That gives us the progress.

89
00:05:26.569 --> 00:05:27.759
到目前为止还好吗
Good so far?

90
00:05:27.759 --> 00:05:33.199
这就是为什么如果你要找出动画循环
This is why, if you got to
figure out the animation loop,

91
00:05:33.199 --> 00:05:35.209
我想说你做得非常好
I'd say you're doing pretty well so far.

92
00:05:35.209 --> 00:05:37.420
最重要的是它变得有点棘手
The mathy part is where
it gets a little tricky.

93
00:05:37.420 --> 00:05:40.189
老实说这就是我被人蔑视的地方
And honestly, this is where I got
flustered because I just got stuck and

94
00:05:40.189 --> 00:05:41.379
我不知道数学是什么
I couldn't figure out the math part.

95
00:05:41.379 --> 00:05:44.269
我只是在概念上无法做到
I just conceptually couldn't do it.

96
00:05:44.269 --> 00:05:46.300
没关系我是说 会发生的
That's okay.
It's going to happen.

97
00:05:46.300 --> 00:05:50.290
我觉得如果你表现得好的话，大多数的访问员都会好起来的。
I think if you demonstrate a good effort,
most interviewers will be like okay.

98
00:05:50.290 --> 00:05:52.120
他们还没得到公式
They didn't get quite the formula but

99
00:05:52.120 --> 00:05:54.550
如果他们有真正的编码他们可能会想出来的
if they had a real coding they
would probably figure this out.

100
00:05:54.550 --> 00:05:56.920
就像你能把距离和那样的东西弄明白
Like you can figure out the distance and
the stuff like that.

101
00:05:58.050 --> 00:06:01.910
接下来我们想弄清楚的是，我们想弄清楚这里发生了什么。
So next thing we want to figure out is,
we want to figure out what goes in here.

102
00:06:01.910 --> 00:06:04.560
我们应该在每个回路上移动多少钱 ?
How much should we move
it on every single loop?

103
00:06:04.560 --> 00:06:07.716
所以我就会打电话给你
So I'll call that amounts to move.

104
00:06:10.018 --> 00:06:15.639
所以我们可以说，我们会想办法的。
And so for that we can say,
we'll figure out.

105
00:06:18.850 --> 00:06:23.319
我们现在所取得的进展，基本上是一个已经过去的比率。
We have now the progress is essentially
a ratio of how much has elapsed.

106
00:06:23.319 --> 00:06:28.298
因此，如果我们将这个比率乘以我们想要移动的距离。
So if we multiply that ratio times
the distance that we want to move.

107
00:06:29.879 --> 00:06:35.148
我们能得到的
we can get, Yeah.

108
00:06:37.567 --> 00:06:39.670
数学在概念上是微妙的。
The math is tricky conceptually.

109
00:06:39.670 --> 00:06:44.040
所以说，好吧，我们得走了，五分钟已经过去了。
So it helps to say, all right,
we gotta last, five minutes have elapsed.

110
00:06:44.040 --> 00:06:45.709
我只是用几分钟的时间来简单
I'm just using minutes cuz it's easier.

111
00:06:45.709 --> 00:06:47.600
五秒已经过去了
Five seconds have elapsed.

112
00:06:47.600 --> 00:06:51.060
因此，我们得到的是经过了多少时间和耗用了多少时间。
So we get the ratio of how much has
elapsed versus how much should elapse.

113
00:06:51.060 --> 00:06:57.877
5 秒后，我们会说， 500 毫秒，那是什么 ?
So 5 seconds over, we'll say,
500 milliseconds, what is that?

114
00:06:57.877 --> 00:07:04.446
那是 1%， 10%，好，等等，是 10%，对，好的。
That's 1%, 10%, okay, wait,
is that 10%, yes, okay.

115
00:07:06.586 --> 00:07:07.221
别对我说
Don't judge me.

116
00:07:07.221 --> 00:07:08.547
500 [ LAUGH] 500 以上
500 [LAUGH], 5 over 500.

117
00:07:08.547 --> 00:07:13.651
好吧那是 1%
All right, so it's 1%.

118
00:07:13.651 --> 00:07:20.069
所以在这一点上，我想要 1% 的距离，因为这就是要移动的程度。
So at this point I want 1% of the distance
because that's how much should be moving.

119
00:07:20.069 --> 00:07:22.112
这就是以像素为单位移动的量。
And then that's the amount
to move in pixels.

120
00:07:22.112 --> 00:07:28.740
好的，所以这都是关于改变你在这个特定场景下的想法的。
Okay, so it's all about changing your
thinking in this particular scenario.

121
00:07:28.740 --> 00:07:32.170
我没有，我在数学上挂上了挂断。
I didn't, and
I got hung up on the math and it got me.

122
00:07:33.670 --> 00:07:36.540
所以，我们还得在某个时候退出，因为如果不
So, we still need to exit at
some point because if we don't

123
00:07:36.540 --> 00:07:38.139
穿过这么多的溪流我们可以继续
cross that many streams,
we can keep going over and

124
00:07:38.139 --> 00:07:40.540
在不停地移动和移动的过程中
over and over to the keep moving and
moving and moving.

125
00:07:40.540 --> 00:07:44.480
所以我可以说如果
So I can say if the amount to move is

126
00:07:44.480 --> 00:07:48.939
比我们要移动的距离还要低然后再打一次
less than the distance that we're actually
supposed to move, then call it again.

127
00:07:48.939 --> 00:07:52.040
一旦 ToMove ToshMove 过去了
And once that amountToMove has gone over,

128
00:07:52.040 --> 00:07:55.720
它比距离还大，然后我们就不再称呼它了，我们完成了。
it's greater than the distance, then we
don't call it anymore, and we're done.

129
00:07:56.779 --> 00:07:58.769
这就是如何使用 requestAnimationFrame 移动元素。
And that's how to move an element
using requestAnimationFrame.

130
00:07:58.769 --> 00:08:01.055
当你这么做的时候它会很光滑的
And when you do it, it's gonna be very
smooth, it's gonna be like [SOUND] and

131
00:08:01.055 --> 00:08:01.786
那就停了
then it's gonna stop.

132
00:08:01.786 --> 00:08:06.920
如果你在想，我怎么才能让它快速移动呢 ?
Now if you're thinking,
how do I get it to move quickly?

133
00:08:06.920 --> 00:08:10.122
然后我可以快速移动，就像放松
And then I can move it quickly,
which would be like easing

134
00:08:10.122 --> 00:08:13.262
一些放松的功能让我们迅速地行动
some sort of easing function
that gives move quickly and

135
00:08:13.262 --> 00:08:16.685
然后慢慢地慢慢地慢慢地动作
then slow down at the end or
start slow and move really quick.

136
00:08:16.685 --> 00:08:19.932
我也不一定要你参加技术面试
Which, I wouldn't necessarily ask
you to in a technical interview, but

137
00:08:19.932 --> 00:08:21.711
因为它的数学比较重
that's because it's more math heavy,

138
00:08:21.711 --> 00:08:24.768
我们就会改变计算公式的方式
we would change how we calculate
this formula for the amount to move.

139
00:08:24.768 --> 00:08:28.009
好吧好吧
All right, all right.

140
00:08:29.269 --> 00:08:31.139
回家吧我们快到了
Home stretch, we're almost there.

141
00:08:31.139 --> 00:08:36.120
干得好如果你能解决这件事真是太好了
Nice job, if you solved this one,
really good, this one's a little tricky.

142
00:08:36.120 --> 00:08:39.200
但我想让你带走的主要部分是 requestAnimationFrame ，对于
But the main part I want you to take
away is requestAnimationFrame, for

143
00:08:39.200 --> 00:08:41.139
做任何运动
doing any sort of movement.

144
00:08:41.139 --> 00:08:42.669
有人说，哎，这东西是怎么画的呢 ?
Someone says, hey,
how do you animate this thing?

145
00:08:42.669 --> 00:08:44.529
请说， requestAnimationFrame。
Just say, requestAnimationFrame.

146
00:08:44.529 --> 00:08:47.299
你能不能用一个 for 循环来做，绝对的。
Could you do this in a for-loop,
absolutely.

147
00:08:47.299 --> 00:08:49.429
会很顺利吗 ?
Will it be smooth, no.

148
00:08:49.429 --> 00:08:51.340
这总是诡计，动作， requestAnimitionFrame。
That's always the trick,
movement, requestAnimationFrame.
