WEBVTT

1
00:00:00.144 --> 00:00:04.104
这个有约束力，这个很棘手。
Implementing bind, this one is tricky.

2
00:00:04.104 --> 00:00:09.962
这有点棘手，需要了解范围，上下文，调用和应用。
It's a little tricky, you have to know
about scope, and context, call, and apply.

3
00:00:09.962 --> 00:00:13.381
如果你失败了或者你无法得到任何东西
And if you failed on this one or
you couldn't get anything down,

4
00:00:13.381 --> 00:00:14.343
别难过了
don't feel bad.

5
00:00:14.343 --> 00:00:16.477
我们现在要学解决方案了
We're gonna learn the solution now.

6
00:00:16.477 --> 00:00:19.332
学习的最佳部分有时是失败的。
The best part of learning
is sometimes its failure.

7
00:00:19.332 --> 00:00:21.024
你得失败因为你会记得的
You have to fail because you'll remember.

8
00:00:21.024 --> 00:00:24.108
你会记得的因为你就像我花了这么长时间
You'll remember this now because you're
like, I spent so long on this and

9
00:00:24.108 --> 00:00:26.449
然后它就会咔嗒一声，你就会有这个道理。
then it clicks in place,
you're like this makes sense.

10
00:00:26.449 --> 00:00:27.469
这就是 JavaScript 的工作方式。
This is how JavaScript works.

11
00:00:27.469 --> 00:00:28.847
现在我知道更多了
Now I know a little bit more.

12
00:00:28.847 --> 00:00:31.754
说实话我想和那些失败的人合作
And being honest,
I wanna work with people who failed.

13
00:00:31.754 --> 00:00:33.679
我不想和那些只会成功的人一起工作
I don't wanna work with people
who only succeed in life.

14
00:00:33.679 --> 00:00:35.560
这意味着他们没学到什么
That means they didn't learn as much.

15
00:00:35.560 --> 00:00:37.781
并不是说如果你是超级成功的，你没有学到很多东西。
Not saying if you're super successful,
you didn't learn a lot.

16
00:00:37.781 --> 00:00:41.557
但那些失败的人他们知道摔倒的感觉
But people that have failed,
they know what it's like to fall down and

17
00:00:41.557 --> 00:00:42.271
给我回来
get back up.

18
00:00:42.271 --> 00:00:43.470
这就是它的感觉
And that's what it's like.

19
00:00:43.470 --> 00:00:48.060
因为记住你一半的面试都失败了
Because remember,
half the interviews you're gonna fail.

20
00:00:48.060 --> 00:00:51.226
差不多吧你会有一半以上的面试都失败了
Like almost probably, you're gonna fail
over half the interviews you take.

21
00:00:51.226 --> 00:00:51.978
没关系我是说
That's okay.

22
00:00:51.978 --> 00:00:54.743
我失败了很多，我以前在这个问题上失败了。
I failed many,
I failed on this question before.

23
00:00:54.743 --> 00:00:58.378
但现在我知道如何解决这个问题，这只是学习的一部分。
But now I know how to solve it,
and that's just part of learning.

24
00:00:58.378 --> 00:01:03.052
好，我们按标准的方式来处理一个问题，就是，
All right, so let's do the standard way
we always approach a problem, which is,

25
00:01:03.052 --> 00:01:05.989
我需要实现 function.prototype.bind 。
I need to implement
function.prototype.bind.

26
00:01:05.989 --> 00:01:08.635
既然是雏形我就要开始了
Since it's a prototype,
I'm gonna start off there.

27
00:01:08.635 --> 00:01:13.159
因此， function.prototype.bind 。
So function.prototype.bind.

28
00:01:13.159 --> 00:01:16.847
我们知道因为它是我们最终要调用的函数
And we know because it's a function
that we're gonna eventually invoke,

29
00:01:16.847 --> 00:01:18.200
它会成为一个功能
it's gonna be a function.

30
00:01:18.200 --> 00:01:20.557
所以我要说函数
So I'm gonna say function.

31
00:01:20.557 --> 00:01:23.623
现在我要做匿名的工作
And I'm gonna make
an anonymous function for now.

32
00:01:23.623 --> 00:01:26.984
这一功能将会成为一个新的背景
And this function is gonna take
an argument which will be the new context

33
00:01:26.984 --> 00:01:29.090
我们正试图传入
that we're trying to pass in.

34
00:01:29.090 --> 00:01:33.856
我现在就给你打电话
So I'm gonna call you context for now.

35
00:01:33.856 --> 00:01:38.637
我们最终知道我们援引约束的方式是我们正在设定新的环境
And we know eventually the way we invoke
bind is we're setting the new context and

36
00:01:38.637 --> 00:01:40.477
我们待会儿再引用
we're gonna invoke it later.

37
00:01:40.477 --> 00:01:44.856
如果你看到这样的模式或者有人说你正在恢复一个功能
And if you ever see a pattern like this or
someone says, you're returning a function

38
00:01:44.856 --> 00:01:49.497
最终会被调用的你知道它会恢复一个新的功能
that's gonna eventually be invoked later,
you know it's gonna return a new function.

39
00:01:49.497 --> 00:01:54.700
所以，让我们说，返回另一个匿名函数。
So let's say,
return another anonymous function.

40
00:01:54.700 --> 00:01:59.015
我不想再争论这个问题了
And I'm not gonna take any
arguments on this one.

41
00:01:59.015 --> 00:02:04.983
好吧但最终我们要完成什么
Okay, but ultimately,
what do we wanna accomplish with bind?

42
00:02:04.983 --> 00:02:08.497
我们正在尝试返回具有不同上下文的函数。
We're trying to return a function
that has a different context.

43
00:02:08.497 --> 00:02:09.893
我们是如何做到的呢 ?
And how do we do that?

44
00:02:09.893 --> 00:02:15.710
我们的老朋友要么打电话要么申请
We do it with our old
friends either call or apply.

45
00:02:15.710 --> 00:02:18.985
所以我想说这个功能
So I wanna say the function,

46
00:02:20.956 --> 00:02:24.088
我可以说一些函数，然后我想调用或应用它。
I could say some function and
then I wanna call or apply it.

47
00:02:24.088 --> 00:02:26.225
但因为这个有点麻烦
But because this one is
a little trickier and

48
00:02:26.225 --> 00:02:28.724
我可以问一个稍微不同的问题。
I could have asked a slightly
different question.

49
00:02:28.724 --> 00:02:31.540
但我可以说你是怎么做到的
But I could have said,
how do you implement just bind?

50
00:02:31.540 --> 00:02:34.158
这需要一个功能和一个背景。
Which would take a function and a context.

51
00:02:36.722 --> 00:02:37.769
我本可以问的
I could have asked that.

52
00:02:37.769 --> 00:02:39.743
但我想说，这就是现在的雏形。
But I'm saying, this is the prototype now.

53
00:02:39.743 --> 00:02:48.276
所以在这个例子中，我要说，这就是功能本身。
So in this case, so I'm gonna say this,
Is the function itself.

54
00:02:48.276 --> 00:02:51.437
所以我们不需要通过这个功能因为它是隐含在这里的因为我们是
So we don't need to pass in the function
because it's implied in this because we're

55
00:02:51.437 --> 00:02:52.787
在这一功能的雏形上
on the prototype of that function.

56
00:02:54.805 --> 00:02:57.002
好吧我们有了这个功能
Okay, so we have the function.

57
00:02:57.002 --> 00:02:59.110
事实上我要让这更容易
Actually, I'm gonna make
it easier to grock.

58
00:02:59.110 --> 00:03:02.372
我要给你打个电话
I'm gonna call you the function is this.

59
00:03:02.372 --> 00:03:05.209
我需要调用此函数，以便我可以说电话。
And I need to invoke this function so
I can say call.

60
00:03:07.114 --> 00:03:08.651
我将会在此背景下通过。
And I'm going to pass in the context.

61
00:03:11.275 --> 00:03:12.377
就这样了
That's it.

62
00:03:14.611 --> 00:03:17.771
人们点头了，你在家里点头，现在就有道理了。
People are nodding, you're nodding
along at home, it makes sense now.

63
00:03:17.771 --> 00:03:19.873
解决方案很短。
The solution's pretty short.

64
00:03:19.873 --> 00:03:23.473
所以如果我想说如果我不想实施束缚
So if I wanted to say,
if I don't want to just implement bind,

65
00:03:23.473 --> 00:03:27.727
因为我们都有不同的学习方式这是另一种方式
because we all learn differently and
this is a different way of doing it.

66
00:03:27.727 --> 00:03:31.352
退出绑定，它将执行函数和上下文。
Exit bind, it's gonna take a function and
the context.

67
00:03:31.352 --> 00:03:36.819
我可以把它取出来，这个方法也是一样的。
I can just take that out,
and it's the same solution.

68
00:03:36.819 --> 00:03:38.587
好吧有什么问题吗
All right, any questions on this, yes?

69
00:03:38.587 --> 00:03:42.478
>> 我几乎明白，除非我使用的是适用的含义。
&gt;&gt; I almost got it except I used
apply what does apply mean.

70
00:03:42.478 --> 00:03:43.969
>> 是，应用也同样有效。
&gt;&gt; Yes, apply works just as well.

71
00:03:43.969 --> 00:03:45.326
好吧好吧
&gt;&gt; All right, okay.

72
00:03:45.326 --> 00:03:48.305
> > 它会改变方式，而我没有得到更多的进步。
&gt;&gt; It will just change the way,
and I didn't get more advanced.

73
00:03:48.305 --> 00:03:52.793
对我来说这是个完美的解决方案不是完美的解决方案
This to me is a perfect solution or
not a perfect solution, it works for

74
00:03:52.793 --> 00:03:53.712
白板。
white board.

75
00:03:53.712 --> 00:03:55.405
我不是想骗你
I'm not trying to trick you.

76
00:03:55.405 --> 00:03:58.673
如果我想让它变得更困难或者某人是个聪明人
If I wanted to make it more difficult or
someone's being a wise person,

77
00:03:58.673 --> 00:04:00.640
他们是想说我有这个
they're trying to be like, I got this.

78
00:04:00.640 --> 00:04:04.266
我想，好吧，你怎么处理争论呢 ?
I'd be like, okay, so
how do you deal with arguments?

79
00:04:04.266 --> 00:04:07.466
所以你得知道你可以通过电话
So you'd have to know that you can pass or
with call,

80
00:04:07.466 --> 00:04:12.150
这就是这个，电话，我要用的这个说法。
it would be the arguments actually for
this one, for call, I'd use apply.

81
00:04:12.150 --> 00:04:16.125
然后我把它们的论据传播出去。
And then I take the arguments and
I spread them out.

82
00:04:16.125 --> 00:04:20.906
args， arguments，如果我要传递自变量，我就会将它们传播出去。
Args, arguments, and I'd spread them
out if I want to pass arguments.

83
00:04:20.906 --> 00:04:22.923
但我又不想这么深
But, again, I didn't wanna get that deep.

84
00:04:22.923 --> 00:04:27.937
我只想在概念上让人们了解范围和如何
I just wanna know conceptually,
do people understand scope and how to

85
00:04:27.937 --> 00:04:33.379
如果你真的要这么做的话，就会改变它，远远不止是打电话或回复。
change it if you really had to, much
bigger than just calling call or reply.

86
00:04:33.379 --> 00:04:34.802
好吧问题
All right, questions?

87
00:04:34.802 --> 00:04:38.196
>> 我想技术上的问题
&gt;&gt; A more, I guess,
technical question, but

88
00:04:38.196 --> 00:04:43.165
在原型的实施过程中你创造了一个常数
in the implementation of
the prototype you created a constant.

89
00:04:43.165 --> 00:04:47.961
然后你在新的匿名函数中引用了这个常数
And then you referenced that constant in
the new anonymous function that you're

90
00:04:47.961 --> 00:04:48.745
回来了
returning.

91
00:04:48.745 --> 00:04:52.237
那是因为如果你真的用了这个
Is that because if you
actually just used this,

92
00:04:52.237 --> 00:04:57.314
它会被你退回的匿名功能所约束吗
it would be bound to the anonymous
function that you're returning?

93
00:04:57.314 --> 00:04:58.629
> Mm - hm，这就对了。
&gt;&gt; Mm-hm, that's exactly right.

94
00:04:58.629 --> 00:05:01.295
它将绑定到您应用它的复合体。
It would be bound to the complex
that you apply it in.

95
00:05:01.295 --> 00:05:01.831
> > 嗯，好的。
&gt;&gt; Yeah, okay.

96
00:05:01.831 --> 00:05:05.677
>> 但在这种情况下，我们要确保在调用此函数时，
&gt;&gt; But in this case we wanna make sure
that when this function is invoked,

97
00:05:05.677 --> 00:05:09.601
我们要确保这一消息是可以访问的所以我们在范围内声明
we wanna make sure this is accessible,
so we state it within the scope.

98
00:05:09.601 --> 00:05:10.576
问得好
Good question, though.

99
00:05:10.576 --> 00:05:13.129
这就是为什么这个是更先进的
This is why this one's a bit
more advanced, more for

100
00:05:13.129 --> 00:05:16.848
在高级方面，你要了解范围界定之类的。
on the senior side, is you have to
understand scoping and things like that.

101
00:05:16.848 --> 00:05:20.937
好吧如果你再看到这个问题的话
All right, all right,
now if you ever see this question again,

102
00:05:20.937 --> 00:05:23.379
你就会知道一般的结构
you'll know the general structure.

103
00:05:23.379 --> 00:05:25.824
我想如果你得到一般的结构
And I think if you get
the general structure, and

104
00:05:25.824 --> 00:05:29.831
你知道你得打电话或申请点有用的
you realize that you'll have to call or
apply at some point, that's helpful.

105
00:05:29.831 --> 00:05:32.877
但如果你不明白的话
But again, if you didn't get it it's okay.

106
00:05:32.877 --> 00:05:33.816
我们都是从某个地方开始的
We all start somewhere.

107
00:05:33.816 --> 00:05:35.350
我以前都没有回答这些问题。
I have failed all these question before.
