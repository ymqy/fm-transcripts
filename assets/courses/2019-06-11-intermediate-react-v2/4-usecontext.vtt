WEBVTT

1
00:00:00.250 --> 00:00:06.086
>> Brian Holt: 因此，让我们一起使用上下文，因此 Context.js 在此处。
&gt;&gt; Brian Holt: So let's go down to use
Context, so Context.js right here.

2
00:00:08.112 --> 00:00:11.776
>> Brian Holt: 现在，注意我有第一级，第二级，第三级，
&gt;&gt; Brian Holt: Now, notice I have first
level, second level, third level,

3
00:00:11.776 --> 00:00:15.314
第四层我有詹姆斯 - 詹姆森的长子
fourth level, and
then I have James Jameson the firstborn.

4
00:00:17.410 --> 00:00:19.129
我想我喝了几杯威士忌
I think I was a couple of whiskeys deep,
so

5
00:00:19.129 --> 00:00:21.006
那是我最能创造的
that's the most creativity I could muster.

6
00:00:23.045 --> 00:00:25.507
>> Brian Holt: 因此，上下文正在解决此问题。
&gt;&gt; Brian Holt: So
context is solving this problem.

7
00:00:25.507 --> 00:00:28.509
如果你需要了解更多的背景
Which, if you need to
know more about context,

8
00:00:28.509 --> 00:00:33.027
我恳求您让 Intro to React， cuz 关于 context的对话。
I implore you to take the Intro to React,
cuz that talks about context.

9
00:00:33.027 --> 00:00:36.265
但是要告诉你，它解决了
But just to tell you, it solves the
problem of having to do prop drilling of

10
00:00:36.265 --> 00:00:39.820
将父代传递给子代，父级与子代，以及覆盖 Redux 的内容
passing parent to child, parent to child,
as well as covering things that Redux

11
00:00:39.820 --> 00:00:42.776
通常包括应用程序级别状态。
would normally cover,
which is like application-level state.

12
00:00:44.859 --> 00:00:46.875
所以我要用一个假的物体来创造一个情境。
So here I'm creating
a context with a fake object.

13
00:00:46.875 --> 00:00:51.218
这只是让人们知道物体的形状。
This is just letting people
know the shape of the object.

14
00:00:51.218 --> 00:00:55.716
这是一个更新的功能。
And this is an updater function.

15
00:00:55.716 --> 00:00:58.290
或者这在技术上被称为身份功能
Or this would be called
an identity function technically,

16
00:00:58.290 --> 00:01:00.000
但并不是它真的需要这么做
but not that it really needs to be that.

17
00:01:00.000 --> 00:01:02.869
但只要说这就是钩子的形状
But suffice to say this
is the shape of a hook.

18
00:01:02.869 --> 00:01:04.200
好吗 ?
Okay?

19
00:01:04.200 --> 00:01:07.840
这里才是最重要的五级，对吧 ?
Here is actually where this matters,
here on levelFive, right?

20
00:01:07.840 --> 00:01:11.875
我创造这个的地方就在下面
Where I create this, well,
that's down here at the bottom, so

21
00:01:11.875 --> 00:01:15.710
让我们从这一级开始
let's actually start all the way
down here at the level one.

22
00:01:15.710 --> 00:01:18.340
或者是 ContextComponent 。
Or ContextComponent, rather.

23
00:01:18.340 --> 00:01:21.783
我在创造一个用国家的钩子，对吧 ?
So here,
I'm creating a useState hook, right?

24
00:01:21.783 --> 00:01:28.212
詹姆斯 - 詹姆森一号和他的邮箱地址
With the name James Jameson 1 and
his email address.

25
00:01:28.212 --> 00:01:31.713
但我可以把这个完全改变给鲍勃之类的对吧
But I could totally change this to Bob or
something like that, right?

26
00:01:31.713 --> 00:01:33.819
会在这里发生变化的通知。
Notice that would change down here.

27
00:01:33.819 --> 00:01:36.454
但我在顶级组件中创造了这个
But I'm creating this in
the top-level component.

28
00:01:36.454 --> 00:01:38.923
我把这个供应商放在上面
I'm putting this provider above it.

29
00:01:38.923 --> 00:01:41.099
然后我就会下降到第二级
And then I'm rendering down to level two.

30
00:01:42.479 --> 00:01:47.909
3 级， 4 级，然后 5 级。
Level three, level four,
and then level five here.

31
00:01:47.909 --> 00:01:49.140
在这里我正在阅读这方面的内容。
Here I'm reading through the context.

32
00:01:49.140 --> 00:01:52.956
请注意，我没有通过这些不同级别的组件。
Notice I didn't pass it through all these
various different levels of components.

33
00:01:52.956 --> 00:01:56.805
但我正在用 useContext 从这里读出来，好吗 ?
But I'm reading out of the context
here using useContext, all right?

34
00:01:56.805 --> 00:01:59.531
然后我就会得到用户并在这里设置用户。
So then I get user and set user down here.

35
00:01:59.531 --> 00:02:04.409
如果我点击增量就会增加
And here if I click increment,
it's incrementing this

36
00:02:04.409 --> 00:02:09.301
尽管钩子的生命都在这里
despite the fact that the hook
lives all the way up here.

37
00:02:09.301 --> 00:02:13.840
因此 useContext 允许您以这种方式读取和写入上下文。
So useContext allows you to read and
write to context in this fashion.

38
00:02:16.423 --> 00:02:18.925
>> Brian Holt: 有关 useContext的任何问题 ?
&gt;&gt; Brian Holt: Any
questions about useContext?

39
00:02:18.925 --> 00:02:21.075
再一次，在 < 反行为的完整简介 > 中有一个完整的章节。
Again, there’s a whole section on
it in the Complete Intro to React.

40
00:02:21.075 --> 00:02:25.147
所以如果你的背景让你困惑的话，我恳请你看看
So if context itself is confusing to you,
I’d implore you to take a look at that
