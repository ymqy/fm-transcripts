WEBVTT

1
00:00:00.270 --> 00:00:06.865
>> Brian Holt: 这将 >> Brian Holt: 此处的详细信息。
&gt;&gt; Brian Holt: That's going to
&gt;&gt; Brian Holt: Details here.

2
00:00:06.865 --> 00:00:11.022
我想在这里说的第一件事就是通知细节没有概念
Well, first thing I wanted to call out
here is notice the details has no concept

3
00:00:11.022 --> 00:00:13.230
装的是懒惰的对吧
that it's being lazily loaded, right?

4
00:00:13.230 --> 00:00:14.787
我只是写了一个正常的细节
I just wrote a normal details component.

5
00:00:14.787 --> 00:00:17.594
我没有修改里面的东西让它很懒惰
I didn't modify anything inside
of this to make it lazily loaded.

6
00:00:17.594 --> 00:00:21.071
它完全不知道它是如何装载的
It's blissfully unaware
of how it is loaded.

7
00:00:21.071 --> 00:00:24.405
这也很酷，我不需要修改任何细节。
So that's pretty cool as well, I didn't
have to modify anything in details.

8
00:00:24.405 --> 00:00:29.477
但让我们假设第二个
But let's just assume for a second that

9
00:00:29.477 --> 00:00:34.548
我在这里说 import_from 'lodash' 和
here I say import_from 'lodash' and

10
00:00:34.548 --> 00:00:40.094
让我们从现在开始
let's import moment as well from moment.

11
00:00:40.094 --> 00:00:42.707
这些是两个相当大的图书馆，对吧 ?
So these are two pretty big libraries,
right?

12
00:00:42.707 --> 00:00:47.140
在这里我们可以说我们用了它们
And here, just so
that we can say we used them,

13
00:00:47.140 --> 00:00:51.137
我们会说 console.log(_ 时刻)。
we'll say console.log(_ moment).

14
00:00:55.107 --> 00:00:56.597
> > Brian Holt: 现在是时候了，对吧 ?
&gt;&gt; Brian Holt: It is called moment, right?

15
00:00:56.597 --> 00:00:57.485
>> 扬声器 2: 瞬间。
&gt;&gt; Speaker 2: moment.js.

16
00:00:57.485 --> 00:00:58.445
>> Brian Holt: 瞬间?
&gt;&gt; Brian Holt: moment.js?

17
00:01:04.337 --> 00:01:06.612
>> Brian Holt: 我们进行检查。
&gt;&gt; Brian Holt: Let's check.

18
00:01:06.612 --> 00:01:09.138
我只选择两个幼崽我知道它们比较大
I just choose those two cuz I
know that they're relatively big.

19
00:01:11.182 --> 00:01:12.138
> > Brian Holt: 不，是这个。
&gt;&gt; Brian Holt: No, it's this one.

20
00:01:14.936 --> 00:01:17.795
> > Brian Holt: 所以它很快就会开始安装。
&gt;&gt; Brian Holt: So it's gonna go and
install those really quickly.

21
00:01:28.364 --> 00:01:29.745
>> Brian Holt: 但请注意 :
&gt;&gt; Brian Holt: But notice that lodash and

22
00:01:29.745 --> 00:01:32.385
现在不是另一个捆绑软件的一部分吧
moment are not a part of the other bundle,
right?

23
00:01:32.385 --> 00:01:35.801
他们不是 SearchParams 的一部分什么的
They're not a part of SearchParams or
anything like that,

24
00:01:35.801 --> 00:01:37.520
细节都是独一无二的
they're unique to details.

25
00:01:37.520 --> 00:01:39.968
所以包裹是很聪明的说
So parcel is smart enough to say, hey,

26
00:01:39.968 --> 00:01:43.902
我知道这永远不会被加载到另一个捆绑软件中
I know that this is never gonna
be loaded in the other bundle, so

27
00:01:43.902 --> 00:01:48.765
我可以把它包括在这个捆绑软件中， >> Brian Holt: 好吗 ?
I can just include it in this bundle,
&gt;&gt; Brian Holt: Okay?

28
00:01:50.567 --> 00:01:55.549
>> Brian Holt: 那么现在如果我刷新页面，请注意，此捆绑软件具有很大的内容，
&gt;&gt; Brian Holt: So now if I refresh the
page, notice that this bundle got huge,

29
00:01:55.549 --> 00:01:58.370
现在是 747 千字节
right now it's 747 kilobytes.

30
00:01:58.370 --> 00:02:02.420
你可以看到这两个东西正在被加载
And you can see that there were loading
out these two things are logging

31
00:02:02.420 --> 00:02:03.180
好吧
out rather.

32
00:02:05.307 --> 00:02:08.486
>> 布莱恩 - 霍尔特: 所以你不用加载所有时间，不要加载所有冲刺。
&gt;&gt; Brian Holt: So one don't load all of
moment and don't load all the lodash,

33
00:02:08.486 --> 00:02:10.050
我想这可能是我的意思
I think that might be my point.

34
00:02:10.050 --> 00:02:14.554
但除了这一点你想把你的工作
But besides that point, you wanna
find like heavy points to split your

35
00:02:14.554 --> 00:02:18.830
如果你没有刮掉大量的
application and if you're not
shaving off a significant amount,

36
00:02:18.830 --> 00:02:22.366
更糟糕的用户体验必须等待，对吗 ?
it's a worse user experience
having to wait, right?

37
00:02:22.366 --> 00:02:27.462
所以这是一个你应该使用的工具，但是你应该小心使用它。
So it's a tool that you should use, but
you should be careful where you use it.

38
00:02:29.723 --> 00:02:32.078
>> Brian Holt: 因此，我们也可以在这里继续使用应用，并且
&gt;&gt; Brian Holt: So we can go back
over to App here as well, and

39
00:02:32.078 --> 00:02:35.152
我们也能用 SearchParams 做同样的事
we can do the exact same thing
with SearchParams as well.

40
00:02:39.973 --> 00:02:41.567
> > Brian Holt: 现在注意，我没有更改暂挂，
&gt;&gt; Brian Holt: Now notice
I didn't change Suspense,

41
00:02:41.567 --> 00:02:43.695
我们在这里用同样的暂记东西对吧
we're using the same Suspense thing here,
right?

42
00:02:43.695 --> 00:02:49.401
但如果我刷新页面，请注意，如果您转至 " 网络" ，
But if I refresh the page,
now notice that if you go to Network,

43
00:02:49.401 --> 00:02:53.831
SearchParams 也是它自己的捆绑软件，对吧 ?
SearchParams is its own bundle as well,
right?

44
00:02:53.831 --> 00:02:58.920
所以， SearchParams，然后我去另一个，它会加载这个。
So SearchParams, and then I go to
the other one, and it'll load this one.

45
00:02:58.920 --> 00:02:59.793
但是你知道什么很酷吗
But hey, you know what's cool?

46
00:02:59.793 --> 00:03:04.067
如果我回去，现在就到另一个，注意不要再装了，对吧 ?
If I go back, now, to the other one,
notice it doesn't load it again, right?

47
00:03:04.067 --> 00:03:08.938
它已经拥有它，所以它能够立即执行它。
It already has it so
it is able to just instantly execute that.

48
00:03:08.938 --> 00:03:11.831
所以你只会打一次
So, you'll only take that
performance hit once.

49
00:03:14.478 --> 00:03:15.911
> > 布莱恩 - 霍尔特: 你可以在任何地方
&gt;&gt; Brian Holt: And
you can do this anywhere,

50
00:03:15.911 --> 00:03:19.420
不需要只是在路上，我们可以详细了解一下，对吧 ?
it doesn't have to just be on a route,
we could go into details, right?

51
00:03:19.420 --> 00:03:21.931
注意我们在这里装载模型
And notice we're loading model up here,
but

52
00:03:21.931 --> 00:03:26.240
我们不需要莫达尔的正前方我们只需要莫达尔才能点击
we don't actually need Modal up front
right we only need Modal to click on it.

53
00:03:26.240 --> 00:03:31.319
这样我们就能摆脱这个
So we could get rid of this and

54
00:03:31.319 --> 00:03:38.945
say const Modal=lazy import./Modal.
say const Modal=lazy import./Modal.

55
00:03:41.778 --> 00:03:45.973
>> Brian Holt: 对，因为莫达尔不是最初使用的，对吧 ?
&gt;&gt; Brian Holt: Right, because the Modal
is not initially used, right?

56
00:03:45.973 --> 00:03:52.127
莫达尔只会在 showModal 发生时使用，对吗 ?
The Modal is only used if
showModal happens, right?

57
00:03:52.127 --> 00:03:57.167
所以现在如果我把这个保存在这里然后我去一个动物的网页
So now if I save this and go back over
here, and I go to one of the animal pages

58
00:04:10.693 --> 00:04:12.195
>> Brian Holt: 不知道我做了什么。
&gt;&gt; Brian Holt: Not sure what I did there.

59
00:04:12.195 --> 00:04:15.899
是啊你得从 React中导入懒惰的
Yeah, you need to import
lazy as well from React,

60
00:04:15.899 --> 00:04:18.903
这才是真正的功能
cuz that's needs to be a real function.

61
00:04:18.903 --> 00:04:21.957
所以我被告知， >> Brian Holt:
So I'm told,
&gt;&gt; Brian Holt: And

62
00:04:21.957 --> 00:04:25.432
从现在起就可以了
then from there now this works.

63
00:04:25.432 --> 00:04:31.702
现在，如果您进入网络，请注意，我们已装入应用程序，但已装入详细信息，但
Now if you go into network, notice we've
loaded app we've loaded details but

64
00:04:31.702 --> 00:04:35.697
如果我在这里通过我们也会得到莫达尔
if I click Adopt here,
we get Modal there as well.

65
00:04:35.697 --> 00:04:36.981
这也挺酷的
Which is pretty cool as well.

66
00:04:36.981 --> 00:04:39.406
这使得代码在这些地方上分裂很简单
It makes code splitting on
these places really simple, but

67
00:04:39.406 --> 00:04:41.694
更糟糕的是只有 10 千字节，对吧 ?
this is even worse this is
only 10 kilobytes, right?

68
00:04:41.694 --> 00:04:43.295
因为它不是那么多的 JavaScript。
Because it's not that much JavaScript.

69
00:04:43.295 --> 00:04:46.317
但为了让你觉得你可以在图书馆里分家
But just to show you like
you can split on libraries,

70
00:04:46.317 --> 00:04:50.872
你也可以把一堆东西都拆了它不只是在航线上
you can split on a bunch of stuff as well,
it doesn't just have to be on routes.

71
00:04:55.865 --> 00:04:59.346
>> 布莱恩 - 霍尔特: 还有一件很酷的事情，那是值得的。
&gt;&gt; Brian Holt: And the other thing that's
cool as well, that's worth calling out.

72
00:04:59.346 --> 00:05:03.083
我也没在任何地方放新的悬念组件
Notice I didn't put a new Suspense
component anywhere either,

73
00:05:03.083 --> 00:05:05.723
它还在用这个顶级的
it's still using this
top level one up here.

74
00:05:05.723 --> 00:05:09.156
所以您可以在不同位置有不同的暂记组件，也可以
So you can have different Suspense
components in different places, or you can

75
00:05:09.156 --> 00:05:12.540
最重要的是你要如何设计你的应用
one top level one as well, that's up to
you and how you wanna design your app.
