WEBVTT

1
00:00:00.330 --> 00:00:02.000
> > 布莱恩: 让我给你展示一些非常有用的东西。
&gt;&gt; Brian: So let me show you
something else that's really useful.

2
00:00:02.000 --> 00:00:03.387
如果你把它悬浮在这样的东西上
If you just hover over
something like this,

3
00:00:03.387 --> 00:00:04.748
它会给你函数的定义
it'll give you the function definition.

4
00:00:04.748 --> 00:00:08.788
但是如果你真的是 Cmd+click on the ，它会把你纳入到类型定义中
But if you actually Cmd+click on it, it's
gonna take you into the type definition so

5
00:00:08.788 --> 00:00:10.539
你可以看到这里有什么
you can see exactly what's in here.

6
00:00:13.044 --> 00:00:18.859
>> 布莱恩: 这让你回来了， >> Brian: A S 和
&gt;&gt; Brian: So this gives you back,
&gt;&gt; Brian: A S and

7
00:00:18.859 --> 00:00:21.850
分派<SetState。
Dispatch&lt;SetState.

8
00:00:21.850 --> 00:00:24.980
所以它实际上没有它所做的具体类型。
So it actually doesn't have
a specific type of what it does.

9
00:00:24.980 --> 00:00:26.000
好吧那就好
Okay, that's good to know.

10
00:00:30.597 --> 00:00:31.780
> > 布莱恩: 是的，同样的事。
&gt;&gt; Brian: Yep, same thing.

11
00:00:33.530 --> 00:00:36.140
所以我在这里看的是这里的结肠
So what I'm looking at here
is after this colon here,

12
00:00:36.140 --> 00:00:39.161
我想看看钩子是否有特定的类型
I was trying to see if hooks had
a specific type they returned.

13
00:00:39.161 --> 00:00:42.270
它会告诉你，不，它会返回一个数组。
And it just tells you,
no, it returns an array.

14
00:00:42.270 --> 00:00:43.259
所以我们只需要输入这个
So we just have to type that.

15
00:00:46.950 --> 00:00:49.780
> > 布莱恩: 这还不太正确。
&gt;&gt; Brian: So
this isn't quite correct, yet.

16
00:00:49.780 --> 00:00:54.109
我们所希望的是，这个 createContext，即将成为
What we want this to be is,
this createContext, is going to be, and

17
00:00:55.600 --> 00:01:00.789
我们会给它一个叫做类型参数的东西
we're going to give it what's
here called a type parameter.

18
00:01:00.789 --> 00:01:02.590
这将会是一个弦
And it's gonna be a string.

19
00:01:05.191 --> 00:01:12.540
>> Brian: 字符串和 a的数组， >> Brian: 主题: 字符串，
&gt;&gt; Brian: Array of string and a,
&gt;&gt; Brian: Theme: string,

20
00:01:12.540 --> 00:01:16.159
而这回你的空虚
and this returns to you, void.

21
00:01:17.210 --> 00:01:19.503
所以它不会再回来了好吗
So it doesn't return anything, okay?

22
00:01:23.513 --> 00:01:24.739
> > 布莱恩: 另一件我们忘了的事情。
&gt;&gt; Brian: The other thing we forgot to.

23
00:01:24.739 --> 00:01:28.012
我们必须将 ThemeContext 重命名为 .tsx。
We have to rename ThemeContext to be .tsx.

24
00:01:32.594 --> 00:01:35.798
>> Brian: 您也要命名此 .ts cuz ，其中没有任何 JSX ，但是
&gt;&gt; Brian: You also gotta name this .ts
cuz there's not any JSX in it, but

25
00:01:35.798 --> 00:01:38.289
我把这里的所有东西都重命名了
I just rename everything
TSX at this point, so.

26
00:01:45.686 --> 00:01:47.780
> > 布莱恩: 好的，这就是我们要做的。
&gt;&gt; Brian: Okay, and
that's all we have to do for this.

27
00:01:47.780 --> 00:01:51.349
这是在告诉 createContext
What this is doing is this
is telling createContext

28
00:01:51.349 --> 00:01:54.120
我们会给它什么东西对吧
what kind of thing we're gonna give it,
right?

29
00:01:54.120 --> 00:01:55.950
我们告诉过我们要给你一个字符串对吧
And we told it we're gonna
give you a string, right?

30
00:01:55.950 --> 00:01:58.270
我们会给你一个以一个字符串和一个
And we're gonna give you a function
that takes in a string and

31
00:01:58.270 --> 00:01:59.783
什么都没做对吧
doesn't give back anything, right?

32
00:01:59.783 --> 00:02:02.340
这就是现在的情况
Which is what this is.

33
00:02:02.340 --> 00:02:03.370
有道理吗
Make sense?

34
00:02:03.370 --> 00:02:04.668
它就像一个类型的参数。
It's like a parameter to a type.

35
00:02:04.668 --> 00:02:05.168
>> 演讲者 2: 不是这样的
&gt;&gt; Speaker 2: It's not like that
