WEBVTT

1
00:00:00.000 --> 00:00:05.634
>> Brian Holt: 如果您还没有，请克隆 GitHub 存储库。
&gt;&gt; Brian Holt: I need you to, if you
haven't already, go clone the GitHub repo.

2
00:00:05.634 --> 00:00:08.855
所以如果你做了 " 雷法" 的完整简介
So if you've taken
the complete intro to React,

3
00:00:08.855 --> 00:00:12.391
很明显我在修理修理公司的码头上
obviously what I have in
the docs in the repo is going to

4
00:00:12.391 --> 00:00:17.045
与我在课程中所写的内容有很大的不同
differ very slightly from what I've
actually written in the course.

5
00:00:17.045 --> 00:00:19.984
因为有些写在苍蝇上面有问题
Because some of that's written on the fly,
and there's questions and

6
00:00:19.984 --> 00:00:20.774
如此来来去
so on and so forth.

7
00:00:20.774 --> 00:00:24.397
所以我要开始一个全新的，干净的雷波克隆。
So I'm actually just gonna start with
a fresh, clean clone of the repo.

8
00:00:24.397 --> 00:00:28.888
所以我要说， >> Brian Holt: 在这里，
So I'm gonna say,
&gt;&gt; Brian Holt: Right here,

9
00:00:28.888 --> 00:00:33.384
获取克隆 git@gitHub.com.btholt 。
get clone git@gitHub.com.btholt this.

10
00:00:35.625 --> 00:00:41.198
>> Brian Holt: 您可以通过转至 repo，克隆或
&gt;&gt; Brian Holt: You can get this URL as
well just by going to the repo, clone or

11
00:00:41.198 --> 00:00:47.334
下载，复制该屏幕按钮，在此处克隆或下载。
download, copy that,
the screen button here clone or download.

12
00:00:50.732 --> 00:00:55.223
> > Brian Holt: 然后，我要去做这个，然后把它贴在那里，
&gt;&gt; Brian Holt: And then, I'm gonna go
into this and then paste that there,

13
00:00:55.223 --> 00:00:56.996
把它克隆好吗
git clone that, okay?

14
00:00:59.729 --> 00:01:04.625
> > 布莱恩 - 霍尔特: 好的，然后我要去找我刚克隆的
&gt;&gt; Brian Holt: Okay, and then I'm going to
go into the repo that I just cloned and

15
00:01:04.625 --> 00:01:06.942
我要说 npm 的安装
I'm going to say npm install.

16
00:01:16.171 --> 00:01:20.834
>> 布莱恩 - 霍尔特: 在你的每一个时间，大概都是个好主意
&gt;&gt; Brian Holt: So probably a good idea
every single time that you go from

17
00:01:20.834 --> 00:01:23.317
模块，用于在此之后进行模块。
module to module after this.

18
00:01:23.317 --> 00:01:27.277
如果您要克隆新的存储库，或者
To you can just either clone
a new repo if you want to or

19
00:01:27.277 --> 00:01:30.700
至少要再次运行 npm 安装，直至您。
at least run an npm install again,
up to you.

20
00:01:34.444 --> 00:01:36.415
>> Brian Holt: 好， >> Brian Holt: 因此
&gt;&gt; Brian Holt: Okay,
&gt;&gt; Brian Holt: So

21
00:01:36.415 --> 00:01:37.979
我要在密码里打开这个
I'm gonna open this in code.

22
00:01:48.799 --> 00:01:51.593
>> Brian Holt: 所以让我们来了解一下这个项目
&gt;&gt; Brian Holt: So let's just get you
acquainted with this project really

23
00:01:51.593 --> 00:01:52.108
啊，快啊。
quickly.

24
00:01:52.108 --> 00:01:55.120
我就在这里做密码
I'll just do it here from code.

25
00:01:55.120 --> 00:02:00.106
如果你去看你的容器 .json， >> Brian Holt:
If you go look in your package.json,
&gt;&gt; Brian Holt: It's

26
00:02:00.106 --> 00:02:01.573
用包裹来建造这个
using parcel to build this.

27
00:02:01.573 --> 00:02:06.293
这是一个 React 项目，它有 ESLint 和 Pretier 。
It's a React project, it has ESLint and
Prettier built into it.

28
00:02:06.293 --> 00:02:09.606
如果你对这些事有疑问的话
If you have questions about
any of these things, again,

29
00:02:09.606 --> 00:02:11.275
请参阅 " 追溯 " 。
refer to the intro to React.

30
00:02:11.275 --> 00:02:15.639
它有一个前端主控/宠物客户端，这将使 API 请求
It has a frontendmasters/pet client,
which will make API requests for

31
00:02:15.639 --> 00:02:17.365
你可以看到动物收养
you to see animals to adopt.

32
00:02:17.365 --> 00:02:20.120
它也使用了 roach/router 。
And it uses reach/router, as well.

33
00:02:20.120 --> 00:02:24.200
在下面，您可以看到您有一些要使用的脚本。
Down here you can see that
you have some scripts to use.

34
00:02:24.200 --> 00:02:29.038
这里有一个如果你出于任何原因需要清理建筑
So one of these here, if you need to clear
the build cache for whatever reason,

35
00:02:29.038 --> 00:02:33.091
此处有明确的构建高速缓存功能，将除去该功能。
there is a clear build cache
function here that will remove that.

36
00:02:33.091 --> 00:02:36.848
有一个设备将运行此项目。
There is a dev thing which
will run this project.

37
00:02:36.848 --> 00:02:42.027
因此，如果我打开我的客户端，请说 npm 运行 dev。
So if I open my client right on,
say npm run dev.

38
00:02:42.027 --> 00:02:46.978
它将开始运行我可以访问的开发者服务器。
It'll start running the developer
server that I can reach that.

39
00:02:46.978 --> 00:02:49.111
如果出于任何原因您处于脱机状态，或者
If for whatever reason you're offline, or

40
00:02:49.111 --> 00:02:53.158
我们的 API 不像你期待的那样，你可以做鬼鬼子。
our API isn't working the way that you're
expecting it to, you can do dev:mock.

41
00:02:53.158 --> 00:02:57.664
所以就像这个，呜， npm 跑 : 模拟。
So like this, whoops, npm run dev:mock.

42
00:02:57.664 --> 00:02:59.401
这将以模拟方式运行 API 客户机，
And this will run the API
client in mock mode,

43
00:02:59.401 --> 00:03:02.206
这意味着你将会得到假数据它不会出去的
which means that you'll be getting
fake data and it won't be going out.

44
00:03:02.206 --> 00:03:05.185
所以如果你在火车上观看这些视频
So if you're on the train
watching these videos offline,

45
00:03:05.185 --> 00:03:07.872
感谢前端主控服务器执行脱机视频。
thanks Front End Masters for
doing offline videos.

46
00:03:07.872 --> 00:03:11.056
实际上，您可以脱机运行此客户机，并且
You can actually run
this client offline and

47
00:03:11.056 --> 00:03:14.764
整个项目都下线了，这很酷。
the entire project works offline,
which is cool.

48
00:03:14.764 --> 00:03:19.103
好，您可以运行 npm，运行格式，该格式将格式化所有与 Pretier的格式。
Okay, you can run npm, run format which
will format everything with Prettier.

49
00:03:19.103 --> 00:03:23.983
然后我最喜欢的就是现在的测试
And lint it, and then my favorite
are the existing tests that if you

50
00:03:23.983 --> 00:03:28.875
send npm run test" 它说，日志没有测试， [LAUGH] 正确。
send npm run test" it says,
log there are no tests, [LAUGH] right.

51
00:03:28.875 --> 00:03:33.233
没有指定测试，在那里。
No test specified, right there.

52
00:03:33.233 --> 00:03:41.116
就这样了，所以现在我要用 npm 的方式来运行，就像这样。
That's it, so right now I'm gonna run
this in npm run dev mode, like that.

53
00:03:41.116 --> 00:03:44.326
这将在 1234上打开一个开发服务器。
And this will open
a development server on 1234.

54
00:03:49.795 --> 00:03:50.896
>> Brian Holt: 最终，我们开始。
&gt;&gt; Brian Holt: Eventually, there we go.

55
00:03:53.651 --> 00:03:56.978
>> Brian Holt: 这是我们一起构建的项目
&gt;&gt; Brian Holt: And this is the project
that we built together in the complete

56
00:03:56.978 --> 00:03:57.900
intro，对吧 ?
intro, right?

57
00:03:57.900 --> 00:04:01.632
因此，在书面结果中，它的位置在西雅图。
So as of writing results,
it's location is in Seattle.

58
00:04:01.632 --> 00:04:07.919
所以如果我在这里提交，这将会打开这些特定的动物。
So if I submit here,
this will open these particular animals.

59
00:04:07.919 --> 00:04:12.574
现在这两处地方都是西雅图
The only two locations this
works in right now is Seattle,

60
00:04:12.574 --> 00:04:16.093
华盛顿和旧金山加利福尼亚
Washington and San Francisco California.

61
00:04:16.093 --> 00:04:18.773
我们会在每一个地点工作
We'll work to make this work
in every location, but for

62
00:04:18.773 --> 00:04:21.057
现在只在这两个地方工作
now it's only working
in these two locations.

63
00:04:21.057 --> 00:04:24.882
我去看看西奥你很可爱
I'll look at Theo, you're adorable.

64
00:04:26.437 --> 00:04:28.367
>> Brian Holt: 在这里，您可以单击 " Theo" 。
&gt;&gt; Brian Holt: And so
here you can click adopt Theo.

65
00:04:28.367 --> 00:04:29.221
如果您单击 " 是" ，
If you click Yes,

66
00:04:29.221 --> 00:04:32.653
它会带你到领养的地方
it'll actually take you to the adoption
page where you can adopt Theo.

67
00:04:38.067 --> 00:04:39.435
>> 布莱恩 - 霍尔特:
&gt;&gt; Brian Holt: So go back.

68
00:04:42.540 --> 00:04:44.117
>> Brian Holt: 然后您可以选择，
&gt;&gt; Brian Holt: And then you can select,

69
00:04:44.117 --> 00:04:48.713
如果你从狗到马， >> Brian Holt: 你可以
if you move from dog to horse,
&gt;&gt; Brian Holt: You can

70
00:04:48.713 --> 00:04:52.497
看它改变了马的微风
see it changes the breeds of
the horses like miniature

71
00:04:52.497 --> 00:04:56.956
马， >> Brian Holt: Like Gidget。
horses,
&gt;&gt; Brian Holt: Like Gidget.

72
00:04:58.793 --> 00:05:01.762
>> Brian Holt: 然后您也可以更改应用程序的主题。
&gt;&gt; Brian Holt: And then you can change
the theme of your application as well.
