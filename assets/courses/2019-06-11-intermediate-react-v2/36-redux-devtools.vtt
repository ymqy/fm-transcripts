WEBVTT

1
00:00:00.270 --> 00:00:03.557
>> Brian Holt: 让我向您展示有关 Redux 的部分，实际上非常，
&gt;&gt; Brian Holt: Let me show you the part
about Redux that's actually very,

2
00:00:03.557 --> 00:00:05.351
在我看来很有说服力
very compelling in my opinion.

3
00:00:05.351 --> 00:00:09.983
因此，我希望您安装 redux dev 工具。
So I want you to go
install redux dev tools.

4
00:00:13.747 --> 00:00:17.439
>> Brian Holt: 因此我有 Firefox，所以在这里，我已经安装了它，但是
&gt;&gt; Brian Holt: So I have Firefox, so
that's here, I've already installed it but

5
00:00:17.439 --> 00:00:19.532
这里也有 Chrome 的
there's also Chrome up here as well.

6
00:00:22.916 --> 00:00:25.309
>> Brian Holt: 好的，我安装了那些
&gt;&gt; Brian Holt: Okay,
I have those installed, so

7
00:00:25.309 --> 00:00:30.766
我要回到我的项目我要打开雷达克斯的设备
I'm gonna go back to my project here,
and I'm gonna open the redux dev tools.

8
00:00:33.872 --> 00:00:36.073
>> Brian Holt: 你可以看到这里有一个 INIT 对象
&gt;&gt; Brian Holt: So
you can see here there's an INIT object or

9
00:00:36.073 --> 00:00:39.582
一个 INIT 的行动如果我把所有这些都删除
an INIT action that happens but
let's say if I delete all this at once,

10
00:00:39.582 --> 00:00:42.572
有一个更改位置操作，您可以看到右边的位置吗 ?
there's a change location
action you can see there right?

11
00:00:42.572 --> 00:00:47.947
你可以看到有一个动作改变了
And you can see that there
was an action that changes

12
00:00:47.947 --> 00:00:52.706
从 CLWA 到任何内容，因此您可以看到该 dev。
from CLWA to nothing,
so you can see the dev.

13
00:00:52.706 --> 00:00:56.161
你可以看到行动的样子，你可以看到国家是什么，或者
You can see what the action looks like,
you can see what the state was, or

14
00:00:56.161 --> 00:00:57.476
现在的状态是这样。
the current state is like.

15
00:00:57.476 --> 00:01:00.408
因此，位置为空，主题为深蓝色。
So the location is empty and
the theme is dark blue.

16
00:01:00.408 --> 00:01:02.945
我可以在这里打字
And I could start typing in here, so

17
00:01:02.945 --> 00:01:06.590
他们会对每个按键都采取行动吗
they'll be one action for
every keystroke right?

18
00:01:06.590 --> 00:01:12.313
所以盐湖城
So Salt Lake City,

19
00:01:12.313 --> 00:01:15.537
UT right?
UT right?

20
00:01:15.537 --> 00:01:20.501
你可以在这里看到， >> Brian Holt: 你可以
And you can see here,
&gt;&gt; Brian Holt: You can

21
00:01:20.501 --> 00:01:23.912
有点向前看但看看这个
kind of go forward, but check this out.

22
00:01:23.912 --> 00:01:26.760
我可以和雷德克斯一起去旅行对吧
I can actually time travel with redux,
right?

23
00:01:26.760 --> 00:01:31.719
你可以看到我的时间线如果我开始点击
So, you can see here in my timeline here,
if I started clicking back,

24
00:01:31.719 --> 00:01:35.939
我从舞台上开始走回头路对吧
I start walking backwards
through my stage changes right?

25
00:01:35.939 --> 00:01:37.557
然后我就能再向前走了
And then I can go forward again.

26
00:01:39.033 --> 00:01:43.024
>> Brian Holt: 这就是重阳的酷，对吧 ?
&gt;&gt; Brian Holt: So
that's what cool about redux, right?

27
00:01:43.024 --> 00:01:44.817
它允许此时间运行调试。
It allows this time traveling debugging.

28
00:01:44.817 --> 00:01:50.430
所以我可以回到这里，然后我就可以点击 Play。
So I can actually just go all the way
back here, and I can just click Play.

29
00:01:50.430 --> 00:01:54.502
然后就开始做我刚刚做的一切
And then it's gonna just start doing
everything that I just did back to me.

30
00:01:57.054 --> 00:02:00.192
>> Brian Holt: 你知道吗，我们应该跳过那个。
&gt;&gt; Brian Holt: And you know what,
we should probably skip that one.

31
00:02:00.192 --> 00:02:01.733
所以你可以说，船长
So you can say, Skip.

32
00:02:05.640 --> 00:02:08.330
>> Brian Holt: 对，所以注意到它实际上只是经过
&gt;&gt; Brian Holt: Right, and so notice
it will actually just go through and

33
00:02:08.330 --> 00:02:10.806
跳过这些然后跳到下一个
skip these and
then it'll just jump to the next one.

34
00:02:13.689 --> 00:02:14.991
>> Brian Holt: 很有说服力，对吧 ?
&gt;&gt; Brian Holt: Pretty compelling, right?

35
00:02:14.991 --> 00:02:16.963
那么这项工作是如何进行的呢 ?
So how does this work?

36
00:02:16.963 --> 00:02:20.485
这叫做事务性编程对吧
Well, this is called
transactional programming, right?

37
00:02:20.485 --> 00:02:23.225
这些行动中的每一个都是技术上的交易，对吧 ?
Each one of these actions is
technically one transaction, right?

38
00:02:23.225 --> 00:02:27.430
交易的关键是你能回到起点
And the thing about transactions is you
can just roll back to the beginning and

39
00:02:27.430 --> 00:02:29.378
回放事务，对吗 ?
replay the transactions, right?

40
00:02:29.378 --> 00:02:31.628
你不能做些交易对吧
And you can just not do some
of the transactions, right?

41
00:02:31.628 --> 00:02:34.146
所以当我说要跳的时候，这其实是在做什么，对吧 ?
So what this is actually
doing when I say skip, right?

42
00:02:34.146 --> 00:02:37.305
它只是经过然后说好的
It's just going through and saying okay,

43
00:02:37.305 --> 00:02:41.888
就是不去申请那个，然后再申请其他的。
just don't apply that one, and
then reapply all the other ones.

44
00:02:41.888 --> 00:02:47.108
同一件事如果我来改变主题我可以到这里
Same thing here, if I come and
change the theme, I can go down here and

45
00:02:47.108 --> 00:02:53.146
请参阅更改主题并查看外观，这也非常酷。
see the change theme and see what that
looks like, which is pretty cool as well.

46
00:02:56.427 --> 00:02:58.562
> > Brian Holt: 这里还有一个很酷的东西。
&gt;&gt; Brian Holt: One more
pretty cool thing here.

47
00:02:58.562 --> 00:03:03.413
所以说我有这个权利我就在这里
So let's say I have this right here,
and I go here and

48
00:03:03.413 --> 00:03:08.156
我可以点击上面写的测试
I can click on this thing
that says Test right here,

49
00:03:08.156 --> 00:03:12.256
给我做了一个单位测试对吧
and it generated a unit test for
me, right?

50
00:03:12.256 --> 00:03:15.114
我真的可以复制
I can actually literally copy and

51
00:03:15.114 --> 00:03:20.022
把它贴在我的单位测试里就能为我工作了
paste this Into my unit tests and
it'll just work for me.

52
00:03:20.022 --> 00:03:22.253
它正在为您生成用户测试。
It's really generating user tests for you.

53
00:03:22.253 --> 00:03:23.461
用户测试?
User test?

54
00:03:23.461 --> 00:03:28.231
我不知道我为什么一直说那单元是给你测试的
I don't know why I keep saying
that unit tests for you.

55
00:03:28.231 --> 00:03:31.733
这是 Jest ，但也有 Mocha，磁带和 Ava 。
So this is Jest but it also does Mocha,
Tape, and Ava as well.

56
00:03:37.525 --> 00:03:41.990
>> Brian Holt: 因此， dev 工具非常惊人，我看到一个公司
&gt;&gt; Brian Holt: So the dev tools are pretty
amazing, I saw one company what they would

57
00:03:41.990 --> 00:03:46.379
如果用户发生崩溃，那么他们将转储用户的所有操作
do if a user had a crash, they would
dump all the actions that the user

58
00:03:46.379 --> 00:03:51.384
已落实并将其发送至日志记录服务，因此它们实际上可以
committed and send it off to the air
logging service, so they could literally

59
00:03:51.384 --> 00:03:55.945
通过所有用户正在执行的操作来导致崩溃。
step through everything that their
user was doing to cause the crash.

60
00:03:55.945 --> 00:03:56.741
很酷吧
Pretty cool, right?

61
00:03:56.741 --> 00:03:58.055
很有说服力
Pretty compelling.

62
00:03:58.055 --> 00:04:03.364
同样地，在这种情况下，你需要对 GDPR 非常小心，
Again, with that kind of stuff you
need to be really careful with GDPR,

63
00:04:03.364 --> 00:04:05.671
但还是挺酷的
but nonetheless pretty cool.
