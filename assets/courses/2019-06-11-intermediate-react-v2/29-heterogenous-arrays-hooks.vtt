WEBVTT

1
00:00:00.180 --> 00:00:01.399
> > 布莱恩: 让我们去使用 Dropdown.
&gt;&gt; Brian: Let's go to useDropdown.

2
00:00:02.509 --> 00:00:08.433
所以我们要重命名 useDropdown.js
So we're gonna rename useDropdown.js,

3
00:00:08.433 --> 00:00:12.060
重命名为点 tsx。
rename that to be dot tsx.

4
00:00:16.769 --> 00:00:18.719
它认为它很开心现在很不安
It thinks it's happy, now it's upset.

5
00:00:18.719 --> 00:00:19.562
好的好的
Okay, great.

6
00:00:23.711 --> 00:00:27.030
>> Brian: 因此，我们需要更新或获取更多内容。
&gt;&gt; Brian: So we need to update or
get a couple more things from this.

7
00:00:27.030 --> 00:00:33.289
我们需要此操作来导入设置状态操作和分派。
We need this to import set
state action and dispatch.

8
00:00:36.414 --> 00:00:37.850
>> 布莱恩: 好吧，标签是什么 ?
&gt;&gt; Brian: Okay, what is label?

9
00:00:37.850 --> 00:00:44.243
标签是 a， >> Brian: String。
Label is a,
&gt;&gt; Brian: String.

10
00:00:44.243 --> 00:00:51.006
我在注释中粘贴了错误的内容， >> Brian: DefaultState
I pasted the wrong thing in my notes so,
&gt;&gt; Brian: DefaultState

11
00:00:51.006 --> 00:00:52.212
将会是任何一个
is going to be an any.

12
00:00:55.134 --> 00:00:58.762
>> Brian: 选项将成为一系列字符串。
&gt;&gt; Brian: And
options is going to be a array of strings.

13
00:01:09.706 --> 00:01:12.834
>> Brian: 因此，下拉内容本身就是一个功能组件。
&gt;&gt; Brian: So drop down in and
of itself is a function component.

14
00:01:18.378 --> 00:01:20.337
>> 布莱恩: 这样也可以从 React 中获取。
&gt;&gt; Brian: So
it will grab that from React as well.

15
00:01:22.947 --> 00:01:24.420
>> 布莱恩: 那么，它是否知道 updateState ?
&gt;&gt; Brian: And then,
does it know updateState is?

16
00:01:24.420 --> 00:01:27.060
是啊这就是调度和下拉的状态
Yeah, that's a dispatch and
dropdown, and state.

17
00:01:28.650 --> 00:01:35.409
所以我们甚至可以说， >> 布莱恩: 让我们看看，国家。
So we could even go as far and say,
&gt;&gt; Brian: Let's see, state.

18
00:01:39.329 --> 00:01:40.015
>> Brian: 状态。
&gt;&gt; Brian: State.

19
00:01:48.215 --> 00:01:48.832
> > Brian: 是的。
&gt;&gt; Brian: Yeah.

20
00:01:52.298 --> 00:01:54.534
> > 布莱恩: 那么在这个情况下，我们不知道什么是什么国家，
&gt;&gt; Brian: So in this case, we don't
actually know what states gonna be,

21
00:01:54.534 --> 00:01:55.560
我们真的做到了不是吗
actually we do, don't we?

22
00:01:55.560 --> 00:01:58.920
状态始终是字符串。
State is always going to be a string.

23
00:02:01.081 --> 00:02:01.875
>> 布莱恩: 这是真的。
&gt;&gt; Brian: That's true.

24
00:02:01.875 --> 00:02:03.215
所以请将此字符串作为字符串。
So make this a string.

25
00:02:07.052 --> 00:02:10.063
> > 布莱恩: 因为你在处理一个选择，对吗 ?
&gt;&gt; Brian: Because you're
dealing with a select, right?

26
00:02:10.063 --> 00:02:12.043
而这一选择总是要处理字符串。
And that select is always going
to be dealing with strings.

27
00:02:12.043 --> 00:02:16.146
所以你可以强迫每个人给你个条件
So you can just go ahead and
force everyone to give you strings.

28
00:02:18.611 --> 00:02:20.384
> > 布莱恩: 好吧，然后我估计我们不需要这些了，所以
&gt;&gt; Brian: Okay, and then I guess we
didn't actually need these ones, so

29
00:02:20.384 --> 00:02:21.360
你可以把这些都删除
you can go ahead and delete those.

30
00:02:22.870 --> 00:02:24.611
SetStateAction 和 Dispatch， okay.
SetStateAction and Dispatch, okay.

31
00:02:32.307 --> 00:02:34.379
> > 布莱恩: 酷，关于 useDropdown的任何问题 ?
&gt;&gt; Brian: Cool,
any questions about useDropdown?

32
00:02:34.379 --> 00:02:35.530
这很直接
It was pretty straightforward.

33
00:02:35.530 --> 00:02:38.430
你只需要确定参数，其他的东西就会发生。
You just have to identify the parameters
and everything else kinda fell into place.

34
00:02:38.430 --> 00:02:42.170
然后我们只需要一点点的精练来确定
And then, we just kind of refined
useDropdown a little bit to make sure this

35
00:02:42.170 --> 00:02:46.590
绝对是函数组件，而不仅仅是通用 JSX。
is definitely a function component and
not just generic JSX.

36
00:02:46.590 --> 00:02:50.286
你真的要区分这一点，但也可能是这样。
Nothing you've really have to distinguish
that very often, but might as well.

37
00:02:53.828 --> 00:03:00.811
> > 布莱恩: 我现在还有 10 分钟，还有 8 分钟的时间，好吗 ?
&gt;&gt; Brian: I got like ten more minutes now,
eight more minutes to finish it, okay?

38
00:03:03.531 --> 00:03:05.657
> > 布莱恩: 现在我们去完成搜索程序
&gt;&gt; Brian: So
let's go finish search params now.

39
00:03:09.849 --> 00:03:18.250
>> Brian: 我们重命名为 .tsx。
&gt;&gt; Brian: We renamed that to .tsx.

40
00:03:18.250 --> 00:03:21.270
我们需要知道这是一个 FunctionComponent ，我们去拿吧。
We need to tell that this is a
FunctionComponent, so let's go grab that.

41
00:03:22.729 --> 00:03:26.139
结果可能会很沮丧，因为我们还没有确定结果。
Results can be upset at,
because we haven't defined results yet.

42
00:03:27.319 --> 00:03:33.045
而且我们也要进口
And we're also need to get import

43
00:03:33.045 --> 00:03:40.622
路由器的 RouteCmponentProps 。
RouteCmponentProps from reach/Router.

44
00:03:40.622 --> 00:03:43.438
好的我们会在上面移动的
Okay, we'll move that up there.

45
00:03:48.551 --> 00:03:54.099
> > 布莱恩: 然后，我们还需要主人/宠物的动物。
&gt;&gt; Brian: And then,
we also need animal from the master/pet.

46
00:03:54.099 --> 00:03:55.110
像那样的动物
So animal, like that.

47
00:03:56.539 --> 00:03:58.713
所以搜索参数是一个功能组件。
So search params is a function component.

48
00:04:03.358 --> 00:04:08.669
> > 布莱恩: 它的组件，一个路线组件道具，
&gt;&gt; Brian: And it takes its components,
a route component props,

49
00:04:08.669 --> 00:04:16.132
它本身不期望任何类型的标识或来自 Reach 路由器的任何内容。
It itself is not expecting any sort of
ID or anything coming from Reach Router.

50
00:04:16.132 --> 00:04:20.250
它的 URL 中没有任何通配符或变量。
It doesn't have any wildcards or
variables in its URL.

51
00:04:20.250 --> 00:04:23.324
所以我们不需要给出任何参数
So we don't have to give this
one any sort of parameters,

52
00:04:23.324 --> 00:04:25.062
而我们以前做过对吧
whereas we did before, right?

53
00:04:28.132 --> 00:04:33.637
> > 布莱恩: 那我们要做的就是
&gt;&gt; Brian: Then,
the one that we have to do here is

54
00:04:33.637 --> 00:04:39.639
useDropdown， "Animal"， ANIMALS。
useDropdown, "Animal", ANIMALS.

55
00:04:39.639 --> 00:04:44.134
我想找的就是 > > 布莱恩: 这是
The one that I'm looking for is,
&gt;&gt; Brian: This is

56
00:04:44.134 --> 00:04:48.149
另一个就是宠物变成永远的地方对吧
another one of this where
the pets becomes a never, right?

57
00:04:48.149 --> 00:04:51.360
它为我们提供了一个阵列，但它不让我们触摸它，所以你必须在这里说。
It gives us an array but it won't let us
touch it, so you have to tell it here.

58
00:04:51.360 --> 00:04:55.603
这是一个阵列，但最终将会是一个动物的阵列。
This is an array, but this is eventually
going to be an array of animal,

59
00:04:55.603 --> 00:04:57.677
从空气污染指数中恢复过来的
that are coming back from the API.

60
00:05:02.572 --> 00:05:04.949
> > 布莱恩: 和品种一样。
&gt;&gt; Brian: And same with thing with breeds.

61
00:05:04.949 --> 00:05:07.685
这将作为字符串数组。
This is going to be as string array.

62
00:05:11.199 --> 00:05:15.776
>> Brian: 类型，位置字符串，品种字符串或分派，对吗 ?
&gt;&gt; Brian: Type, location string,
breed string, or dispatch, right?

63
00:05:15.776 --> 00:05:20.637
这就是我们需要改变的事情。
So this is what we needed to
change about us drop down.

64
00:05:20.637 --> 00:05:27.331
问题是我们把布雷德和他们的每一个都看做了
So here's the issue, we're giving back
Breed and it's sees each one of these and

65
00:05:27.331 --> 00:05:32.771
就好像我不知道这是否会有同样的顺序
is like I don't know if this is
always gonna come in the same order.

66
00:05:32.771 --> 00:05:35.129
所以我就假设它总是不秩序的
So I'm just gonna assume that
it comes always out of order.

67
00:05:35.129 --> 00:05:36.199
我们知道情况不是这样
We know this isn't the case.

68
00:05:36.199 --> 00:05:40.389
如果我们回到使用下拉菜单和状态更新的下拉菜单中，
If we go back to use dropdown that
state dropdown and state update,

69
00:05:40.389 --> 00:05:42.490
状态始终以此顺序返回。
state always comes back in this order.

70
00:05:42.490 --> 00:05:45.819
所以我们其实要比以前更具体，
So we actually have to be more
specific than we were previously,

71
00:05:45.819 --> 00:05:49.399
尽管 useDropdown 以前很快乐
despite the fact that
useDropdown was happy before.

72
00:05:49.399 --> 00:05:51.029
使用的是不快乐的
What's being used is unhappy and

73
00:05:51.029 --> 00:05:53.699
问题并不在于它是否在使用中。
the problem is not there it's
actually in the useDropdown.

74
00:05:55.090 --> 00:05:57.066
所以我们得把它还给它
So here we have to give it back,

75
00:05:57.066 --> 00:06:01.399
这就好像不太会是弦功能
it's like no this is very much
gonna be string FunctionComponent.

76
00:06:02.449 --> 00:06:07.536
它将成为 ReactComponentElement。
It's actually gonna be
a ReactComponentElement.

77
00:06:10.021 --> 00:06:16.836
> > Brian: Nope，是 a， >> Brian:
&gt;&gt; Brian: Nope, it's a,
&gt;&gt; Brian: Let's just go FunctionComponent,

78
00:06:16.836 --> 00:06:18.709
这才是技术上的问题
cuz that's technically what it is.

79
00:06:18.709 --> 00:06:23.206
然后这将成为 SetStateAction。
And then this is gonna
be a SetStateAction.

80
00:06:29.252 --> 00:06:30.334
> > 布莱恩: 这将会是一个字符串。
&gt;&gt; Brian: And
this is gonna take in a string.

81
00:06:35.831 --> 00:06:37.829
>> 布莱恩: 让我们去看看这是否解决了我们的问题。
&gt;&gt; Brian: And
let's go see if that fixed our problem.

82
00:06:37.829 --> 00:06:39.029
好的
Okay, it did.

83
00:06:39.029 --> 00:06:42.040
所以，让我们先聊一聊这里发生了什么。
So let's go ahead and just chit chat for
a second about what happened here.

84
00:06:43.250 --> 00:06:45.473
这可能是一个非常好的问题
This was actually probably
a really good problem for

85
00:06:45.473 --> 00:06:48.252
因为我觉得我重新写了三次
you to ,because I think I've
rewritten this like three times and

86
00:06:48.252 --> 00:06:51.047
我每次都这样想，我忘记了，我需要这样做。
I run into it every single time that
I forget that I need to do this.

87
00:06:53.784 --> 00:06:58.682
>> 布莱恩: 那么当你给 Typesscript 一个数组，它是一个混合的数组，对，或者
&gt;&gt; Brian: So when you give Typescript an
array, and it's a mixed array, right, or

88
00:06:58.682 --> 00:07:00.269
一个异种阵列
a heterogenous array.

89
00:07:01.319 --> 00:07:04.850
它会假设所有元素都能出现在任何顺序上，对吗 ?
It's going to assume that all the elements
can come in any order, right?

90
00:07:04.850 --> 00:07:09.750
所以我给了它一个字符串，一个元素和一个函数。
So I gave it here a string,
an element, and a function.

91
00:07:09.750 --> 00:07:12.269
我想这可以按任何顺序来找我
I assume that this can come
back to me in any order.

92
00:07:12.269 --> 00:07:14.120
所以我得回去说，不。
So I had to go back and say, nope.

93
00:07:14.120 --> 00:07:17.735
这个，这个，这个，这个，什么都没有，对吧 ?
It's very much this, this, this,
and never anything else, right?

94
00:07:19.639 --> 00:07:22.542
所以现在如果我回到佩特去看看
So now if I go back to
Pet it's gonna look at,

95
00:07:22.542 --> 00:07:25.529
或者不是宠物我们在 SearchParams
or not Pet,
we were in SearchParams rather.

96
00:07:27.129 --> 00:07:30.649
知道这会是个字串我知道
It knows that's gonna be a string,
I know that.

97
00:07:30.649 --> 00:07:31.473
所以没关系的
So it's okay.

98
00:07:31.473 --> 00:07:34.259
这有道理吗
Does that makes sense?

99
00:07:37.843 --> 00:07:41.904
> > 布莱恩: 我们去做个结果吧
&gt;&gt; Brian: So let's go do results.

100
00:07:47.798 --> 00:07:51.504
>> Brian: 将其重命名为 Results.tsx。
&gt;&gt; Brian: Rename this to be Results.tsx.

101
00:07:56.427 --> 00:08:00.641
>> Brian: 因此我们需要从此处抓取 FunctionComponent ，
&gt;&gt; Brian: So we need to grab
FunctionComponent from up here,

102
00:08:00.641 --> 00:08:02.507
FunctionComponent。
FunctionComponent.

103
00:08:02.507 --> 00:08:08.211
我们需要抓住进口动物
And we need to grab Import Animal

104
00:08:08.211 --> 00:08:15.404
从 @frontendmasters/pet ，好吗 ?
from @frontendmasters/pet, okay?

105
00:08:15.404 --> 00:08:20.990
我们会说这需要一个接口
We're gonna say this takes an interface

106
00:08:20.990 --> 00:08:26.252
" IProps " 的 " 宠物: 动物 "
of IProps being pets: Animal array.

107
00:08:26.252 --> 00:08:32.423
然后，此处的结果是带有 IProps的 FunctionComponent 。
And then results here is
a FunctionComponent with IProps.

108
00:08:38.582 --> 00:08:39.749
> > 布莱恩: 我认为是这样。
&gt;&gt; Brian: And I think that's it.

109
00:08:39.749 --> 00:08:41.647
我认为现在的结果应该是快乐的。
I think now results should be happy.

110
00:08:44.419 --> 00:08:46.611
> > 布莱恩: 这些宠物现在是一种动物阵列。
&gt;&gt; Brian: And
those pets is an animal array now.

111
00:08:46.611 --> 00:08:51.409
现在，如果我们回到 SearchParams ，我认为现在应该是快乐的了。
And now if we go back to SearchParams,
I think this should be happy too now.

112
00:08:53.490 --> 00:08:54.120
我的错在哪里
Where's my error?

113
00:08:55.690 --> 00:08:57.230
UpdateBreed 这不开心
UpdateBreed, this wasn't happy.

114
00:08:57.230 --> 00:08:58.059
这有什么问题
What's wrong with this?

115
00:09:01.159 --> 00:09:02.775
向前迈进好吗
New state strings forward, okay.

116
00:09:02.775 --> 00:09:05.720
所以我们一定要回来
So rather than do that,
we're gonna come back here and

117
00:09:05.720 --> 00:09:08.477
说这就是 SetStateAction
say this is actually gonna
be the SetStateAction.

118
00:09:08.477 --> 00:09:09.619
我以为是那样的
I thought that's what that was.

119
00:09:17.894 --> 00:09:18.806
> > Brian: Dispatch ，也许?
&gt;&gt; Brian: Dispatch, maybe?

120
00:09:21.325 --> 00:09:22.169
> > 布莱恩: 我们来试试
&gt;&gt; Brian: Let's try that.

121
00:09:28.792 --> 00:09:34.009
> > 布莱恩: 还有布莱恩: 好的，看起来很开心
&gt;&gt; Brian: And,
&gt;&gt; Brian: Okay, it seems happy with that.

122
00:09:35.039 --> 00:09:35.539
好的。
Okay.

123
00:09:38.977 --> 00:09:41.840
> > 布莱恩: 为了重新说明那里发生的事情，我给出了错误的类型。
&gt;&gt; Brian: So to recap what happened there,
I gave it the wrong type.

124
00:09:41.840 --> 00:09:44.289
后来我在看我是怎么叫 updateBreeds 的
So I was looking at what I was
calling updateBreeds later,

125
00:09:44.289 --> 00:09:46.700
我就像是不明白这是什么对吧
I was like I don't understand
what this is, right?

126
00:09:46.700 --> 00:09:48.090
所以我做了什么我去了
So instead what I did is, I went and

127
00:09:48.090 --> 00:09:52.820
从名为 " Dispatch " 的 " React " 中获取了另一个类型，它很开心。
grabbed a different type from React called
Dispatch, and that one it was happy with.
