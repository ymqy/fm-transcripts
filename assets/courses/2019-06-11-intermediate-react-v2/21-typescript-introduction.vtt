WEBVTT

1
00:00:00.200 --> 00:00:01.700
>> Brian Holt: 因此，让我们先谈谈 TypeScript 。
&gt;&gt; Brian Holt: So let's just talk
about TypeScript for a second.

2
00:00:01.700 --> 00:00:05.169
首先这就是 React 和 React
First of all, this is going to
be specifically how React and

3
00:00:05.169 --> 00:00:06.160
TypeScript 相交。
TypeScript intersect.

4
00:00:07.299 --> 00:00:10.763
所以当我要解释 TypeScript 的时候
So while I'm going to be
explaining TypeScript as I go,

5
00:00:10.763 --> 00:00:15.263
FrontendMasters 上有来自 Mike North 的完整的 TypeScript 课程
there is a full TypeScript course from
Mike North on FrontendMasters and

6
00:00:15.263 --> 00:00:16.902
迈克是个伟大的老师
Mike's a great teacher.

7
00:00:16.902 --> 00:00:20.905
我以前和他在 LinkedIn 一起工作所以如果你需要更深入的话
I used to work with him at LinkedIn and
so if you need like a more in depth

8
00:00:20.905 --> 00:00:25.620
引入和探究 Mike的课程是一个很棒的开始。
introduction and delve into that Mike's
course is a great place to get started.

9
00:00:27.030 --> 00:00:31.620
那么，什么是 TypeScript，为什么我要使用它。
So what is TypeScript,
why do I wanna use it.

10
00:00:31.620 --> 00:00:34.500
对于这些问题的回答，为什么有用。
Why is it useful with react this
answer some of those questions.

11
00:00:35.710 --> 00:00:44.429
所以我要在这里打开一个新的文件，然后再开一个。
So if I have I'm just gonna open a new
file here and closes for just a second.

12
00:00:44.429 --> 00:00:47.985
我要把这个放进去换语言模式 TypeScript
And I'm gonna put this in,
Change Language Mode, TypeScript.

13
00:00:50.143 --> 00:00:56.408
>> Brian Holt: 因此，如果我在此处有一个变量，那么变量 x = 5，对吗 ?
&gt;&gt; Brian Holt: So if I have a variable
here that says var x = 5, right?

14
00:00:56.408 --> 00:01:04.198
然后我说， x.toUpperCase()， >> Brian Holt: 现在
And then I say, x.toUpperCase(),
&gt;&gt; Brian Holt: Now,

15
00:01:04.198 --> 00:01:08.400
通常 JavaScript 是很酷的我会给你机会的
normally JavaScript's like cool,
I'll give that a shot.

16
00:01:08.400 --> 00:01:10.909
就像你不知道那样会不会正常对吧
Like you have no idea if that's
gonna work or not, right?

17
00:01:10.909 --> 00:01:13.456
你和我能看出来这是个数字
You and I can see right away
that this is a number and

18
00:01:13.456 --> 00:01:16.378
这个肯定没有两个大写，对吧 ?
this definitely doesn't have
a two UpperCase, right?

19
00:01:18.099 --> 00:01:22.564
> > Brian Holt: 但是 TypeScript 会对你大喊，说嘿，白痴，
&gt;&gt; Brian Holt: But TypeScript is
gonna yell at you and say hey, idiot,

20
00:01:22.564 --> 00:01:26.120
就像号码没有两个 UpperCase
like number doesn't have a two UpperCase.

21
00:01:26.120 --> 00:01:29.289
这是一个很简单的例子，对吧 ?
Now this is a very simplified case, right?

22
00:01:29.289 --> 00:01:34.799
但这将会使我们无法在运行时因类型而产生错误，对吧 ?
But this is going to save us from run time
production errors because of types, right?

23
00:01:34.799 --> 00:01:38.200
现在我可以做的是我可以说
Now what I could do here
is I could say that and

24
00:01:38.200 --> 00:01:44.140
一下子就好了这就行了吧
all of a sudden, okay that's a string,
that's gonna work, right?

25
00:01:46.420 --> 00:01:51.460
这就是各种类型的东西，可以把你从这里拯救出去。
So these are the kinds of things that
types of going to save you from.

26
00:01:51.460 --> 00:01:56.270
它会把你从电话中省下来
It's gonna save you from calling
to application a number it's

27
00:01:56.270 --> 00:02:00.180
把你从呼叫 UpperCase 来救你
gonna save you from calling toUpperCase,
right.

28
00:02:01.250 --> 00:02:04.989
这事很容易但它会说嘿， toUpperCase 不是件事
That's an easy one to do but it's gonna
say hey, toUpperCase isn't a thing.

29
00:02:04.989 --> 00:02:08.810
你是说我是你的意思吗谢谢
Did you mean toUpperCase I did, thank you.

30
00:02:08.810 --> 00:02:15.030
你可以说，换个拼写，它只会为你解决。
And you can actually say, change
spelling it will just fix it for you.

31
00:02:15.030 --> 00:02:17.659
就像那种 TypeScript 能做的很酷的事情
Like there's some pretty cool stuff like
that that TypeScript can just do for

32
00:02:17.659 --> 00:02:18.430
你会自动的
you automatically.

33
00:02:19.719 --> 00:02:24.115
但在我看来如果我说 X 点就好了
But in my opinion, one of the better
parts about this if I just say x dot,

34
00:02:24.115 --> 00:02:27.060
我甚至不用再看 MDN 了
right I don't even have
to look at MDN anymore.

35
00:02:27.060 --> 00:02:30.379
它马上就出现在我的编辑中。
It just immediately appears in my editor.

36
00:02:30.379 --> 00:02:34.750
就像嘿我们还是分开吧
It's like hey, let's do split and

37
00:02:34.750 --> 00:02:37.680
那么我得弄清楚分割器是什么
then well,
I need to figure out what the splitter is.

38
00:02:37.680 --> 00:02:40.430
我们去吧，对吧，然后我就会好了
Let's do /, right, and
then I'm gonna do, okay,

39
00:02:40.430 --> 00:02:42.460
有多少人是我想做的对吗
how many of them do I want to do, right?

40
00:02:42.460 --> 00:02:46.210
当我写代码时它会把我的文件给我
And it's giving me in line
documentation as I'm writing code,

41
00:02:47.650 --> 00:02:49.509
就像那个神奇的权利一样
like that's magical right.

42
00:02:53.389 --> 00:03:00.919
或者就像我从宠物/宠物中进口宠物一样
Or let's just say like I import
pet from afrontendmaster/pet.

43
00:03:00.919 --> 00:03:05.349
这是一个你不知道的 API ，我知道是我写的，对，但你不知道。
This is an API that you don't know, I know
it cuz I wrote it, right, but you don't.

44
00:03:05.349 --> 00:03:08.240
但我只能说宠物点好吧好吧
But I can just say pet dot,
okay, well cool.

45
00:03:09.400 --> 00:03:15.180
那么让我们来看看动物，我能有什么样的堂堂堂堂堂堂堂堂堂堂堂堂们呢 ?
So let's get animals and
what kind of params can I have?

46
00:03:15.180 --> 00:03:20.562
所以我可以放，我可以给它性别，组织，大小，
So I can put, well I can give it gender or
organization or size,

47
00:03:20.562 --> 00:03:27.716
但是我们一起去， >> Brian Holt: 让我们按类型搜索。
but let's go with like,
&gt;&gt; Brian Holt: Let's search by type.

48
00:03:30.174 --> 00:03:33.530
> > 布莱恩 - 霍尔特: 好的，我们把猫放在那儿，对吧 ?
&gt;&gt; Brian Holt: Okay, and
we'll put cat there, right?

49
00:03:35.009 --> 00:03:38.349
好了现在我在找猫然后如果我打了点就好了
Okay, so now I'm searching by cat and
then if I hit dot that's like okay,

50
00:03:38.349 --> 00:03:40.110
这是一个承诺好吗
well this is a promise, okay?

51
00:03:40.110 --> 00:03:44.061
那是干净的数据
That's neat and then data.

52
00:03:44.061 --> 00:03:46.710
我不知道数据是什么但我们会花很多钱的对吧
I don't know what data is, but
we're gonna take a lot at it, right?

53
00:03:46.710 --> 00:03:51.400
然后我会说数据，动物，动物或分页，
And then I'll say data.,
animals, animals or pagination,

54
00:03:53.079 --> 00:03:59.740
然后动画好吧这看起来是个阵列吧
and then animals., okay,
this looks like this is an array, right?

55
00:03:59.740 --> 00:04:05.840
因此，每一个动物都是如此。
So forEach and then animal.

56
00:04:08.889 --> 00:04:14.340
Animalal，好吧，这可以有年龄和颜色
Animal., okay, so
this can have age and colors and

57
00:04:14.340 --> 00:04:20.040
描述，这就像关于飞行的交互式文档，对吧 ?
description and this is like interactive
documentation on the fly, right?

58
00:04:20.040 --> 00:04:23.720
这太酷了我连码头都不去看了
This is so cool that I don't even have to
look at the docs anymore, and, Joke's on

59
00:04:23.720 --> 00:04:26.860
你，我没有写文件，所以没有文档去看，对吧 ?
you, I didn't write any documentation,
so there is no docs to look at, right?

60
00:04:26.860 --> 00:04:27.737
这就是你的一切
So this is all you get.

61
00:04:29.927 --> 00:04:32.620
> > Brian Holt: 但我只能在指尖处得到这些东西，对吧 ?
&gt;&gt; Brian Holt: But I get all this
just at my fingertips, right?

62
00:04:32.620 --> 00:04:37.659
如果我试着说 " 动物 " 我不知道
And if I try and say animal.,
I don't know, what's

63
00:04:37.659 --> 00:04:40.329
你可能会想到的东西，腿，对吧 ?
something that you might think,
legs, right?

64
00:04:40.329 --> 00:04:43.807
这并不是一件事情，它会说，嘿，这不是件事。
That's not really a thing,
it's gonna say, hey, that's not a thing.

65
00:04:43.807 --> 00:04:51.240
你不能这样做，或者这是另一个有用的方法。
You can't do that or
this is another way this could be helpful.

66
00:04:51.240 --> 00:04:54.060
还有一个叫做动物的 API 。
There is another API called animal.

67
00:04:54.060 --> 00:05:01.829
如果我说动物，然后说点，那就会对我感到不安了。
If I say animal and then say dot then
it's gonna be upset at me because.

68
00:05:02.930 --> 00:05:04.800
就像这个东西需要一个身份证
It's like, hey, this thing requires an ID,

69
00:05:04.800 --> 00:05:07.779
如果你不给它身份证就不起作用了吧
if you don't give it an ID
then this doesn't work, right?

70
00:05:08.959 --> 00:05:11.500
所以就有这么多的东西
So there's just a bunch of stuff
like this that it's gonna do for

71
00:05:11.500 --> 00:05:14.459
你的幕后主使那些你之前从未想过的事情
you behind the scenes, stuff that you
would have never thought about before.

72
00:05:16.430 --> 00:05:21.480
它和视觉演播室的代码很有效果，因为，让我告诉你，
And it just works beautifully with visual
studio code because, let me just tell you,

73
00:05:21.480 --> 00:05:25.600
我坐在视觉上做你的代码团队，而 TypeScript 团队就在其中，
I sit with the visuals to do your code
team, and the TypeScript team is across,

74
00:05:25.600 --> 00:05:26.230
大厅对吧
the hall, right?

75
00:05:26.230 --> 00:05:29.250
所以他们只是不停地在大厅里相互叫嚷
So, they're just constantly yelling each
other back and forth across the hall.

76
00:05:30.769 --> 00:05:34.529
你最喜欢的视觉效果是你的代码来自
So, a lot of your favorite features in
visuals to do your code are coming from

77
00:05:34.529 --> 00:05:35.821
TypeScript 团队的实际情况。
the TypeScript team actually.
