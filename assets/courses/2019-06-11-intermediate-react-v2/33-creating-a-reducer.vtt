WEBVTT

1
00:00:00.000 --> 00:00:01.300
> > 布莱恩: 我们要做一个新的文件。
&gt;&gt; Brian: We're gonna make a new file.

2
00:00:01.300 --> 00:00:06.509
实际上，让我们做一个全新的目录而不是源。
Actually, let's just make a whole
new directory instead of source.

3
00:00:06.509 --> 00:00:11.846
它会被称为还原器，或者仅仅是还原器。
And it's gonna be called reducers.,
or just reducers, rather.

4
00:00:11.846 --> 00:00:15.974
在简化程序中，我们将有一个名为 index.js。
Inside of reducers,
we're gonna have one called index.js.

5
00:00:15.974 --> 00:00:18.550
这将是根减速器
This is gonna be the root reducer.

6
00:00:18.550 --> 00:00:21.207
所以我们要说进口
So we're gonna say import.

7
00:00:21.207 --> 00:00:30.480
combineReducer， combineReducers from 'redux'。
combineReducers, combineReducers
from 'redux'.

8
00:00:30.480 --> 00:00:33.530
这只是写根减速器的小帮手方法
This is just a little helper method
that makes writing the root reducer

9
00:00:33.530 --> 00:00:39.039
然后我们就会再去一个叫进口的地方
a little bit easier, and then we're gonna
make another one called import location.

10
00:00:39.039 --> 00:00:43.310
我们还没做的地方减压器
The location reducer from ./location
which we haven't made yet, but

11
00:00:43.310 --> 00:00:45.347
我们就能在这里做个第二次了
we'll make here in just a second.

12
00:00:45.347 --> 00:00:51.468
我想说出口默认的组合减速器
And I want to say export
default combineReducers and

13
00:00:51.468 --> 00:00:56.484
为其提供位置选项 : 位置。
give it an option of location: location.

14
00:00:58.274 --> 00:01:00.161
> > 布莱恩: 但因为这两者都是一样的
&gt;&gt; Brian: But
because these two are the same things,

15
00:01:00.161 --> 00:01:02.740
我们可以把它们组合成一件事对吧
we can actually just combine
them into one thing, right?

16
00:01:02.740 --> 00:01:06.500
所以，如果我这样说，我们其实可以做到这一点。
So if I say that,
we can actually just do that.

17
00:01:10.290 --> 00:01:12.953
>> 布莱恩: 那么组合减速器会做什么，
&gt;&gt; Brian: So what combineReducers does,

18
00:01:12.953 --> 00:01:17.989
你可以把 Redux 商店想象成一个大对象，对吧 ?
you can think of a Redux store
as a really big object, right?

19
00:01:17.989 --> 00:01:20.920
它应该是一个数据树。
It's supposed to be a tree of data.

20
00:01:20.920 --> 00:01:26.067
所以我们要在这里跟踪我们的位置
So we're gonna keep track of our
location here, do I still have.

21
00:01:26.067 --> 00:01:27.603
这个是吧
This one, right?

22
00:01:27.603 --> 00:01:32.364
我们会在 Redux 内部追踪这个位置
We're gonna keep track of this location
inside of Redux instead of being inside of

23
00:01:32.364 --> 00:01:33.340
雷法对吧
React, right?

24
00:01:35.210 --> 00:01:40.049
所以我们只能让这个位置减速
So we're gonna make this
location reducer only

25
00:01:40.049 --> 00:01:45.460
影响此位置参数或状态树。
affect this location parameter or
piece of the state tree.

26
00:01:47.719 --> 00:01:50.659
所以我们说任何时间地点都被修改了
So we're saying any time that
the location gets modified,

27
00:01:50.659 --> 00:01:52.799
基本上是这样做的
run this reducer, basically.

28
00:01:52.799 --> 00:01:55.090
有道理吗
Does that make sense?

29
00:01:55.090 --> 00:01:58.406
太酷了
Cool.

30
00:01:58.406 --> 00:02:02.018
我们再做一个叫做 location.js的文件，
So let's go make another file
here called location.js,

31
00:02:02.018 --> 00:02:04.679
在这个减速器的目录里
inside of this Reducer's's directory.

32
00:02:04.679 --> 00:02:10.264
这将会是一个简单的减压器
And this is gonna be a really simple
reducer, it's gonna be export

33
00:02:10.264 --> 00:02:16.072
缺省功能位置，您将为其提供缺省状态。
default function location,
you're gonna give it a default state.

34
00:02:16.072 --> 00:02:20.360
州 = ，不管你想要什么，西雅图，华盛顿
The state = and make it whatever you want,
Seattle, Washington or

35
00:02:20.360 --> 00:02:22.329
旧金山加利福尼亚
San Francisco, California.

36
00:02:22.329 --> 00:02:26.865
而且这也要采取行动
And that's gonna take
in an action as well.

37
00:02:26.865 --> 00:02:29.883
所以如果你以前没见过这个
So if you've never seen
this in a parameter before,

38
00:02:29.883 --> 00:02:32.009
它说，嘿，如果我得到国家的支持，
it's saying, hey, if I get state,

39
00:02:32.009 --> 00:02:36.659
那就用这个，如果我不处于任何状态，那么默认状态是这个，对吗 ?
then use that, if I don't get any state
then default state is this, right?

40
00:02:36.659 --> 00:02:37.977
只是让它更容易些
Just makes that a little bit easier.

41
00:02:40.137 --> 00:02:45.030
> > 布莱恩: 然后我就会说
&gt;&gt; Brian: And then I'm just gonna say if

42
00:02:45.030 --> 00:02:48.948
(action.type ===
(action.type ===

43
00:02:48.948 --> 00:02:57.775
"CHANGE_LOCATION") 返回 action.payload。
'CHANGE_LOCATION') return action.payload.

44
00:02:59.245 --> 00:03:01.695
>> Brian: Else 返回状态。
&gt;&gt; Brian: Else return state.

45
00:03:06.105 --> 00:03:08.259
>> Brian: 现在，我们也可以将此转换为 switch 语句。
&gt;&gt; Brian: Now, we can turn this
into a switch statement as well.

46
00:03:08.259 --> 00:03:10.556
我觉得在我的笔记里我是这么做的
I think actually in my notes,
I do it that way, but

47
00:03:10.556 --> 00:03:12.377
它基本上就是一个 if 语句
it's basically just an if statement.

48
00:03:17.388 --> 00:03:19.280
>> 布莱恩: 那么，什么是行动?
&gt;&gt; Brian: So, what is action?

49
00:03:19.280 --> 00:03:22.460
行动将成为我的目标
Action is gonna be an object that I get

50
00:03:23.930 --> 00:03:28.539
把行动分派给雷德克斯
from whatever is dispatching
the action to redux.

51
00:03:28.539 --> 00:03:33.699
所以我说，嘿， redux ，只在这个减速器里回应
So I'm saying, hey, redux,
only respond in this reducer

52
00:03:33.699 --> 00:03:37.418
如果操作类型等于 CHANGE_LOCATION，那么是吗 ?
if the action type equals CHANGE_LOCATION,
right?

53
00:03:37.418 --> 00:03:41.310
要不什么都不做就把对象传过去吧
Otherwise don't do anything,
just pass the object on, right?

54
00:03:41.310 --> 00:03:45.870
所以在这个特殊情况下，如果我有一个动作类型的 CHANGE_ANIMAL，
So in this particular case,
if I got an action type of CHANGE_ANIMAL,

55
00:03:45.870 --> 00:03:47.740
它会忽略它对吧
it would just ignore it, right?

56
00:03:47.740 --> 00:03:51.579
但在这个特定的情况下，它说，如果是 CHANGE_LOCATION，
But in this particular case it's saying,
if this is CHANGE_LOCATION,

57
00:03:51.579 --> 00:03:53.670
然后我想让你把它更新为有效载荷
then I want you to update it
to be whatever the payload is.

58
00:03:53.670 --> 00:03:58.050
如果现在是加利福尼亚州旧金山，那就更新它。
If it's now San Francisco, California,
then update it to be that.

59
00:03:58.050 --> 00:03:59.090
有道理吗
Does that make sense?

60
00:04:00.340 --> 00:04:06.530
现在，我们在这里有了这个功能，这个减速器，这个是非常稳定的，对吧 ?
Now, we have this function here, this
reducer, and this is so testable, right?

61
00:04:06.530 --> 00:04:08.439
我可以用不同的方法测试这一百万种方法。
I can test this a million different ways.

62
00:04:08.439 --> 00:04:11.139
好，如果这个国家是这个的话，如果这个国家是这个国家是空的，
Okay, if the state is this, if the state
is that, if the state is empty,

63
00:04:11.139 --> 00:04:14.500
如果状态为空，那么状态为数字，对吗 ?
if the state is null,
if the state is numbers, right?

64
00:04:14.500 --> 00:04:16.970
你可以说鉴于这个国家和这个行动
And you can say,
given this state and this action,

65
00:04:16.970 --> 00:04:18.925
我应该把这东西弄回来的对吧
I should always get this thing back,
right?

66
00:04:18.925 --> 00:04:23.540
那就是计算机科学术语
It's which is the computer
science term that means

67
00:04:23.540 --> 00:04:27.470
我可以用同样的参数运行这 1001 次
I can run this 1,001 times
with the same parameters,

68
00:04:27.470 --> 00:04:30.589
而在第一次的时候它会以同样的方式运作
and on the 1,001st time,
it's gonna work exactly the same way.

69
00:04:32.680 --> 00:04:40.951
现在，如果我在做这样的事情，让 x = 0，
Now, if I was doing something
like this where I had let x = 0,

70
00:04:40.951 --> 00:04:46.877
然后说 X++ x ，对吧 ?
and then I was saying x++ and + x, right?

71
00:04:46.877 --> 00:04:48.920
我不知道这很好笑
I didn't know this was, that's funny.

72
00:04:48.920 --> 00:04:49.680
把它们放在一起
It puts those together.

73
00:04:51.220 --> 00:04:52.850
这是个问题对吧
This is a problem, right?

74
00:04:52.850 --> 00:04:54.800
这不再是纯粹的功能。
This is no longer a pure function.

75
00:04:54.800 --> 00:04:57.779
这有副作用，这不再是对吧 ?
This has side effects,
this is no longer right?

76
00:04:57.779 --> 00:05:01.860
如果我把这个叫做 1001 次，在 1002 的时候是什么呢 ?
If I call this a 1001 times,
on the 1002nd time what's it gonna be?

77
00:05:02.879 --> 00:05:04.160
答案是不一样的对吧
Something different is the answer, right?

78
00:05:04.160 --> 00:05:05.533
不管它是什么都不重要
It doesn't matter actually what it is.

79
00:05:05.533 --> 00:05:09.971
在一千二零零的时候就不一样了。
It's just not the same
on the 1,002nd time.

80
00:05:09.971 --> 00:05:10.983
所以别这么做
So don't do this.

81
00:05:10.983 --> 00:05:15.238
这些应该是纯函数，您可以根据需要多次运行这些函数，
These should be pure functions that you
can run them as many times as you want,

82
00:05:15.238 --> 00:05:17.605
周围的环境都没有改变
and nothing ambient is changing about it.

83
00:05:22.809 --> 00:05:25.108
>> Brian: 它必须具有缺省状态，因此请确保您这样做。
&gt;&gt; Brian: It must have a default state,
so make sure you do that.

84
00:05:27.149 --> 00:05:31.959
另一件事就是行动类型不是你付的钱
And the other thing here is if the action
type is not the one that you're paying

85
00:05:31.959 --> 00:05:34.840
请注意确保您刚刚恢复状态，对吗 ?
attention to make sure that you
just return the state, right?

86
00:05:34.840 --> 00:05:38.389
因为它假定您总是要返回某种状态。
Because it assumes that you're always
going to return a state of some sort.

87
00:05:38.389 --> 00:05:40.659
这是非常关键的事情。
That's a very key thing here.

88
00:05:40.659 --> 00:05:43.300
所以如果我没有这一部分
So if I didn't have this part and

89
00:05:43.300 --> 00:05:48.860
我有一些我不认识的行动对吧
I had some action that I didn't recognize,
right?

90
00:05:48.860 --> 00:05:53.550
因此，如果这是 CHANGE_ANIMAL ，那么新的状态将是未定义的，对吗 ?
So if this was CHANGE_ANIMAL,
the new state would be undefined, right?

91
00:05:53.550 --> 00:05:55.290
这可能不是你想要的
Which is probably not what you want.

92
00:05:56.620 --> 00:06:00.790
请注意，我在此处使用 action.payload 和 action.type。
Notice I'm using action.payload here,
and action.type.

93
00:06:00.790 --> 00:06:04.779
你的行动唯一需要的就是一种类型，那是很困难的要求，
The only thing that your action has to
have is a type, that's hard requirement,

94
00:06:04.779 --> 00:06:05.870
一定有类型好吗
must have a type, okay?

95
00:06:07.149 --> 00:06:09.379
你说的有效载荷是你的
What you call the payload is up to you.

96
00:06:09.379 --> 00:06:15.843
我选择遵守一个叫流量标准行动的东西
I'm choosing to adhere to something
called a flux standard action.

97
00:06:17.435 --> 00:06:20.279
> > 布莱恩: 我没有真正的理由要这样做。
&gt;&gt; Brian: There's no real
reason I have to do this.

98
00:06:20.279 --> 00:06:24.560
只是安德鲁的光，谁是 ACD 的光。
It's just Andrew light,
who's or Andrew ACD light.

99
00:06:24.560 --> 00:06:27.000
克拉克 - 安德鲁是他的名字，在 Facebook 上工作。
Clark Andrew, Clark is his name,
works at Facebook and

100
00:06:27.000 --> 00:06:29.439
他是 Redux公司的联合创始人之一
one of the co-creators of Redux.

101
00:06:29.439 --> 00:06:34.259
他说这就是行动应该是什么样的，
Made this and he just described that
this is what actions should look like,

102
00:06:34.259 --> 00:06:39.639
类型，有效内容，错误和元。
types, payloads, error, and meta.

103
00:06:39.639 --> 00:06:42.026
这是他们唯一能拥有的东西，对。
That's the only thing that they can have,
right.

104
00:06:42.026 --> 00:06:47.550
所有其他东西都应该直接进入有效载荷
Everything else should just
go into payload basically.

105
00:06:47.550 --> 00:06:49.269
你不必遵守这些
You don't have to adhere to that.

106
00:06:49.269 --> 00:06:51.079
但我只是没有更好的主意
But I just don't have a better idea.

107
00:06:51.079 --> 00:06:55.550
所以我选择遵守它
So I just choose to adhere to it.

108
00:06:58.783 --> 00:07:01.382
> > 布莱恩: 好的
&gt;&gt; Brian: Okay, good.

109
00:07:01.382 --> 00:07:05.968
我们要再做一个减压器
We're gonna make one more reducer for

110
00:07:05.968 --> 00:07:09.848
主题我想说 theme.js
theme, I wanna say theme.js.

111
00:07:09.848 --> 00:07:11.399
我们可以复制并粘贴这些信息。
We can actually just copy and paste this.

112
00:07:11.399 --> 00:07:12.569
看起来就差不多了
It's gonna look almost the same.

113
00:07:13.910 --> 00:07:19.168
对初始状态来说这将会是深蓝色的
So this is gonna be darkblue for
the initial state, and this is gonna be

114
00:07:19.168 --> 00:07:24.266
CHANGE_THEME 和此函数的名称将成为主题。
CHANGE_THEME, and the name of this
function is going to be theme.

115
00:07:27.442 --> 00:07:30.697
> > 布莱恩: 现在，我知道你可能坐在那里想一些事情，
&gt;&gt; Brian: Now, I know you're probably
sitting there thinking things like,

116
00:07:30.697 --> 00:07:34.430
我能把它变成抽象的还原剂发生器吗
could I make this into some,
like, abstract reducer generator?

117
00:07:34.430 --> 00:07:38.040
你可以，还有图书馆能帮你。
You can, and there are libraries
that will help you with that.

118
00:07:38.040 --> 00:07:39.975
但是现在，让我们明确地说，对吧 ?
But for now,
let's just be explicit, right?

119
00:07:42.523 --> 00:07:47.409
>> 布莱恩: 我是粉丝，你听说过干代码，对吗 ?
&gt;&gt; Brian: I'm of the fan,
have you heard the term dry code, right?

120
00:07:47.409 --> 00:07:48.329
不要重复自己
Do not repeat yourself.

121
00:07:48.329 --> 00:07:51.490
我是个很喜欢湿码的人写了三遍
I'm very much a fan of wet code,
write everything three times.

122
00:07:51.490 --> 00:07:55.399
第四次之后，再把它改写成某种东西，对吧 ?
And then after the fourth time,
then rewrite it into some thing, right?

123
00:07:57.019 --> 00:08:00.855
因为过早的优化会杀死项目，对吧 ?
Because premature optimization
kills projects, right?

124
00:08:00.855 --> 00:08:03.589
你写了几遍抽象的东西，对吧 ?
How many times have you written
something abstract, right?

125
00:08:03.589 --> 00:08:07.750
然后就不会用它的抽象部分了，现在就很难用了，对吧 ?
And then never use the abstract part of it
and now it's just difficult to use, right?

126
00:08:07.750 --> 00:08:09.720
这种情况经常发生在我
That frequently happens to me.

127
00:08:09.720 --> 00:08:14.293
顺便说下我没说过这个
I didn't make that up, by the way,
someone else made that up.

128
00:08:14.293 --> 00:08:19.276
好吧我要说进口主题
Okay, so I'm gonna say import theme

129
00:08:19.276 --> 00:08:23.625
来自 ./theme and theme here.
from ./theme and theme here.
