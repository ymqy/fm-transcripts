WEBVTT

1
00:00:00.040 --> 00:00:05.285
>> Brian Holt: 因此，我们的地址 "React" 未定义，但从未使用过。
&gt;&gt; Brian Holt: So let's address
'React' is undefined but never used.

2
00:00:05.285 --> 00:00:08.359
如果你想的话那也不是真的
Well, that's not actually true
if you think about it, right?

3
00:00:08.359 --> 00:00:10.532
什么是被转至的 div ?
What is div being transpiled to?

4
00:00:12.789 --> 00:00:15.897
>> Brian Holt: 好吧，它正转至 React.createElement，对吧 ?
&gt;&gt; Brian Holt: Well, it's being
transpiled to React.createElement, right?

5
00:00:15.897 --> 00:00:19.245
这意味着正在使用 React 。
Which means that React is being used.

6
00:00:19.245 --> 00:00:22.966
在你有 Jsx 的地方你必须要在范围内采取行动
So anywhere that you have jsx,
you actually have to have React in scope,

7
00:00:22.966 --> 00:00:24.501
这要求很困难
that's a hard requirement.

8
00:00:24.501 --> 00:00:29.634
原因是所有东西都被转至 React.createElement。
And the reason being is everything's
being transpiled to React.createElement.

9
00:00:29.634 --> 00:00:33.197
但埃斯特林特不知道
But eslint doesn't know that.

10
00:00:33.197 --> 00:00:38.362
所以说你要进口这个而且从不使用它，那是什么呢 ?
So it's saying you're importing this and
never using it, so what the hell?

11
00:00:38.362 --> 00:00:40.886
> > Brian Holt: 所以，让我们来解决这个问题。
&gt;&gt; Brian Holt: So
let's go actually fix that.

12
00:00:42.988 --> 00:00:45.231
> > Brian Holt: 我们现在就这样做，动作非常快。
&gt;&gt; Brian Holt: We'll just do
that right now, really quick.

13
00:00:46.365 --> 00:00:51.863
> > Brian Holt: 所以回到你的， >> Brian Holt:
&gt;&gt; Brian Holt: So come back to your,
&gt;&gt; Brian Holt: Desktop right here,

14
00:00:55.170 --> 00:00:59.578
>> Brian Holt: 并且说 npm install -D
&gt;&gt; Brian Holt: And say npm install -D

15
00:00:59.578 --> 00:01:07.698
babel-eslint eslint-plugin-import
babel-eslint eslint-plugin-import

16
00:01:07.698 --> 00:01:13.962
eslint-plugin-jsx-a11y
eslint-plugin-jsx-a11y

17
00:01:13.962 --> 00:01:19.298
eslint-plugin-反应。
eslint-plugin-react.

18
00:01:22.302 --> 00:01:23.519
>> Brian Holt: 这只是几件事，但是
&gt;&gt; Brian Holt: So that's a few things, but

19
00:01:23.519 --> 00:01:26.789
我们需要所有这些工具来确保它能正确理解 React 。
we need all of these tools to make sure
that it understands React correctly.

20
00:01:28.715 --> 00:01:30.650
>> Brian Holt: 我会给你第二次把它输入出去。
&gt;&gt; Brian Holt: I'll give you
a second to type that out.

21
00:01:36.275 --> 00:01:38.331
>> Brian Holt: 让我们来谈谈这些包是什么。
&gt;&gt; Brian Holt: So
let's talk about what these packages are.

22
00:01:38.331 --> 00:01:45.204
巴伯 - 埃弗林特允许埃弗林特被巴贝尔扩充，它是一个错位的人，对吧 ?
babel-eslint allows eslint to be augmented
by Babel, which is the transpiler, right?

23
00:01:45.204 --> 00:01:50.625
所以，现成的，通常是不理解 React 超级好的。
So out-of-the-box, typically,
it doesn't understand React super well.

24
00:01:52.121 --> 00:01:53.906
> > Brian Holt: 这就是宝宝的工作。
&gt;&gt; Brian Holt: So
that's what babel-eslint does.

25
00:01:53.906 --> 00:01:59.198
esIint-plugin-import 为您提供了一些有关导入的新规则和
esIint-plugin-import gives you some
new rules around importing and

26
00:01:59.198 --> 00:02:04.593
出口这些东西，就这样你就有很好的习惯了。
exporting things, just so you have
good habits with that kind of stuff.

27
00:02:04.593 --> 00:02:10.697
eslint-plugin-jsx-accessibility ，即 a11y 代表的内容，
eslint-plugin-jsx-accessibility, which
is what a11y stands for,

28
00:02:10.697 --> 00:02:17.004
只是一堆无脑的让人去做的事情，对吧 ?
is just a bunch of kind of no-brainer
things to do for accessibility, right?

29
00:02:17.004 --> 00:02:22.847
比如说，不要让 div 和 clickable ，对，比如说。
Like, don't make divs clickable,
right, for example.

30
00:02:22.847 --> 00:02:25.665
这只会帮你抓住那些真正的
This will just kind of help
you catch those really

31
00:02:25.665 --> 00:02:27.675
容易获取的内容。
easy accessibility things to do.

32
00:02:27.675 --> 00:02:32.483
而埃斯皮林插件的反应将会帮助我们
And eslint-plugin-react is going to
actually help us with some other

33
00:02:32.483 --> 00:02:35.536
我们需要的是额外的补救规则好吗
additional React rules that we need, okay?

34
00:02:35.536 --> 00:02:36.805
把所有东西都装上
So install all that stuff.

35
00:02:40.340 --> 00:02:45.951
>> Brian Holt: 在安装时，我们将转至 package.json。
&gt;&gt; Brian Holt: And while it's installing,
we're gonna go to our package.json.

36
00:02:47.775 --> 00:02:51.472
>> Brian Holt: 或者不是 package.json，而是我们的 eslint 插件，
&gt;&gt; Brian Holt: Or not package.json,
rather, but our eslint plugin,

37
00:02:51.472 --> 00:02:52.478
这里就有这个
this one here.

38
00:02:55.485 --> 00:02:57.425
>> Brian Holt: 因此，让我们把它放在多行上，
&gt;&gt; Brian Holt: So
let's put this on multiple lines, so

39
00:02:57.425 --> 00:02:59.259
这会更容易读读
it'll be a little bit easier to read.

40
00:03:03.866 --> 00:03:06.403
>> Brian Holt: 好， >> Brian Holt: 因此
&gt;&gt; Brian Holt: Okay,
&gt;&gt; Brian Holt: So

41
00:03:06.403 --> 00:03:12.771
在下面的eslint:推荐下，这些都不是超级重要的。
underneath eslint:recommended,
the order of these is not super important.

42
00:03:12.771 --> 00:03:16.694
唯一的就是两个漂亮的人要到最后来，对吗 ?
The only thing is the two prettier
ones have to come at the end, right?

43
00:03:16.694 --> 00:03:18.692
所以上面的一切都能符合我们的要求
So everything above it can be
in whatever order we want.

44
00:03:18.692 --> 00:03:22.612
这些都是最后来的，因为这两条规则都做了
These one just have to come at the end
because all these two rules do is turn

45
00:03:22.612 --> 00:03:23.781
东西都关了吧
things off, right?

46
00:03:23.781 --> 00:03:26.372
你得让他们最后才能离开对吧
And you need them to be last so
that they're off, right?

47
00:03:26.372 --> 00:03:30.239
但如果我放了埃皮林特 :第一，最后一件事将会发生
Whereas if I put eslint:recommended first,
the last thing that will happen will be

48
00:03:30.239 --> 00:03:32.807
把那个漂亮的东西翻了
turning things on that
prettier's trying to turn off.

49
00:03:36.054 --> 00:03:41.199
>> Brian Holt: 因此，第一个是 plugin:import/errors。
&gt;&gt; Brian Holt: So the first one's
gonna be plugin:import/errors.

50
00:03:43.058 --> 00:03:47.771
>> Brian Holt: plugin:reet/推荐。
&gt;&gt; Brian Holt: plugin:react/recommended.

51
00:03:50.168 --> 00:04:00.115
>> Brian Holt: 和 plugin:jsx- a11y/推荐，类似。
&gt;&gt; Brian Holt: And
plugin:jsx- a11y/recommended, like that.

52
00:04:04.820 --> 00:04:08.979
>> Brian Holt: 好的，这只是一堆规则
&gt;&gt; Brian Holt: Okay, so this is just gonna
be a bunch of rules that are gonna coming

53
00:04:08.979 --> 00:04:11.598
从我们安装的那些插件中
in from those plugins that we installed.

54
00:04:11.598 --> 00:04:13.771
我们要在这里装几个插件
We're gonna install
a couple of plugins here.

55
00:04:13.771 --> 00:04:19.177
其中一个会做出反应其中一个是进口的
One of them is gonna be react,
one of them is gonna be import,

56
00:04:19.177 --> 00:04:23.002
其中一个将是 jsx-a11y
and one of them is going to be jsx-a11y.

57
00:04:28.327 --> 00:04:31.487
>> Brian Holt: 因此扩展了我们的规则集，对，
&gt;&gt; Brian Holt: So
extends our sets of rules, right, and

58
00:04:31.487 --> 00:04:35.108
插件是针对 eslint 的新能力，对吧 ?
plugins are new abilities for
eslint, right?

59
00:04:35.108 --> 00:04:39.808
所以导入，这将允许它关联如果此文件
So import, this is going to allow
it to associate that if this file

60
00:04:39.808 --> 00:04:43.574
导出某些内容，此其他文件可以将其导入。
exports something,
this other file can import it.

61
00:04:43.574 --> 00:04:46.995
如果不出口，就不能再进口到别的地方了，对吧 ?
And if it doesn't export, then it can't
be imported somewhere else, right?

62
00:04:46.995 --> 00:04:48.786
这就是进口的原因
That's kind of what import does.

63
00:04:48.786 --> 00:04:53.418
这将在了解辅助功能选项时提高一些能力。
This is going to do some more abilities
with understanding accessibility.

64
00:04:53.418 --> 00:04:56.959
反应会解决很多我们的雷法问题，好吗 ?
And react is going to fix a lot
of our React problems, okay?

65
00:04:59.923 --> 00:05:03.870
> > Brian Holt: 然后我们会有另一个叫做规则。
&gt;&gt; Brian Holt: Then we're gonna
have another one here called rules.

66
00:05:07.502 --> 00:05:09.887
>> Brian Holt: 这是我们实际可以开启和关闭特定规则的地方。
&gt;&gt; Brian Holt: This is where we can
actually turn on and off specific rules.

67
00:05:09.887 --> 00:05:12.672
我们今天不打算做道具
We're not gonna be doing prop-types today.

68
00:05:12.672 --> 00:05:20.047
所以请你先关掉反动 / prop-types ， >> Brian Holt: 哪个是 0 做的，
So go ahead and turn off react/prop-types,
&gt;&gt; Brian Holt: Which is what 0 does,

69
00:05:20.047 --> 00:05:20.792
把它关了
it turns it off.

70
00:05:25.396 --> 00:05:28.172
>> Brian Holt: prop-类型类似于非常弱的类型
&gt;&gt; Brian Holt: prop-types
are like a very weak type

71
00:05:28.172 --> 00:05:30.865
检查 React 是否可以为您执行。
checking that React can do for you.

72
00:05:30.865 --> 00:05:37.072
我们将在稍后的 React 研讨会中输入 " TypeScript " 。
We're gonna get to TypeScript later
in the intermediate React workshop.

73
00:05:37.072 --> 00:05:41.745
因此，当您使用 TypeScript时， prop-types 是有用的。
So prop-types are a useful
when you're using TypeScript.

74
00:05:43.459 --> 00:05:48.173
> > 布莱恩 - 霍尔特: 接下来，我们会说，没有控制台，那个，
&gt;&gt; Brian Holt: And then another one,
we're gonna say, no-console, that one,

75
00:05:48.173 --> 00:05:49.920
把那个就在 1 号上
just turn that one on 1.

76
00:05:51.459 --> 00:05:52.286
>> Brian Holt: Whoops.
&gt;&gt; Brian Holt: Whoops.

77
00:05:54.502 --> 00:05:59.055
>> Brian Holt: 我经常使用 console.log 来调试内容，对吗 ?
&gt;&gt; Brian Holt: I frequently use
console.log to debug things, right?

78
00:05:59.055 --> 00:06:03.951
因此，如果您没有启用控制台，那么它将不会让您，并且
And so if you have no-console enabled,
it will not let you, and

79
00:06:03.951 --> 00:06:05.954
它会被排除在这方面
it will error out on that.

80
00:06:05.954 --> 00:06:08.797
而 1 则是警告，对，所以
Whereas 1 will be a warning, right, so

81
00:06:08.797 --> 00:06:12.738
它会是绿色的而不是红色的下划线
it'll be green underlined
instead of red underlined.

82
00:06:14.543 --> 00:06:19.057
>> 布莱恩 - 霍尔特: 酷，那就是我们现在要打开的那两个。
&gt;&gt; Brian Holt: Cool, so those are the two
that we're gonna turn on right now.

83
00:06:21.798 --> 00:06:25.850
> > Brian Holt: 好的，然后在下面我们再做一件事，其中一个是
&gt;&gt; Brian Holt: Okay, and then down here we
gotta do one more thing, one of them is

84
00:06:25.850 --> 00:06:31.403
在 env，此处，设置， >> Brian Holt: 和反应。
underneath env, here, settings,
&gt;&gt; Brian Holt: And react.

85
00:06:35.011 --> 00:06:39.538
>> Brian Holt: 然后你必须告诉埃斯皮林的 React 版本
&gt;&gt; Brian Holt: And then you have to
tell eslint which version of React

86
00:06:39.538 --> 00:06:40.954
你在用
you're using.

87
00:06:40.954 --> 00:06:45.018
但是你也可以说，你能自己弄明白吗 ?
But you can also just say,
can you just figure it out yourself?

88
00:06:45.018 --> 00:06:46.990
这就是检测的结果。
So that's what detect does.

89
00:06:50.961 --> 00:06:52.840
>> Brian Holt: 这意味着它会从您的 package.json中找到它。
&gt;&gt; Brian Holt: Which means it'll
figure it out from your package.json.

90
00:06:54.682 --> 00:06:56.550
> > Brian Holt: 在这个时候我会告诉你，
&gt;&gt; Brian Holt: So
at this point I'll tell you,

91
00:06:56.550 --> 00:07:00.024
这是我几乎在所有项目上使用的 React 配置。
this is my React config that I
use on almost all my projects.

92
00:07:01.456 --> 00:07:05.458
>> Brian Holt: 非常好。
&gt;&gt; Brian Holt: It's pretty good.

93
00:07:05.458 --> 00:07:09.750
我要说的一件事是 eslint 反应/建议有一些规则
The one thing I'll say here is eslint
react/recommended has some rules that I

94
00:07:09.750 --> 00:07:11.581
也不一定同意。
don't necessarily agree with.

95
00:07:11.581 --> 00:07:14.668
我想我们最终会把更多的人关掉
And I think we'll actually end up
turning a few more of them off later.

96
00:07:14.668 --> 00:07:19.057
所以就因为反应/建议说的是一条规则，
So just because react/recommended
says something is a rule,

97
00:07:19.057 --> 00:07:21.389
你可以有点问题
you can question it a little bit.

98
00:07:21.389 --> 00:07:24.213
而不要在 eslint : 建议的内容中询问任何内容
Whereas don't question anything
in eslint:recommended,

99
00:07:24.213 --> 00:07:26.230
那是真理的真理对吧
that's gospel truth right there, right?

100
00:07:26.230 --> 00:07:29.106
你可以用它说的一切都很好
That one you can just,
everything it says is great.

101
00:07:29.106 --> 00:07:32.298
重新获取 / 推荐，您可以对其中的内容进行提问。
react/recommended, you can
question what's in there.

102
00:07:33.798 --> 00:07:34.528
>> Brian Holt: 好的。
&gt;&gt; Brian Holt: Okay.

103
00:07:36.906 --> 00:07:38.988
> > Brian Holt: 那么现在，如果我保存它，
&gt;&gt; Brian Holt: So now, if I save that,

104
00:07:38.988 --> 00:07:43.279
你会注意到这不再是红的了
you'll notice now that
this is not red anymore.

105
00:07:43.279 --> 00:07:47.937
实际上如果我评论它，它会说，嘿， React 必须在范围内，或者
And actually if I comment it, it's gonna
say, hey, React has to be in scope or

106
00:07:47.937 --> 00:07:49.927
这不会有效的对吧
this isn't gonna work, right?

107
00:07:49.927 --> 00:07:52.019
所以现在要用更多的 React 内容来帮助你
So it's actually gonna help you
out with more React stuff now.
