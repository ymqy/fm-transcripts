WEBVTT

1
00:00:00.200 --> 00:00:04.349
>> Brian Holt: 因此，我们将返回 " React" ，不再使用工具。
&gt;&gt; Brian Holt: So we're going back to
React, away from tooling for a while.

2
00:00:04.349 --> 00:00:06.891
所以我要让我的服务器在后台运行
So I'm just gonna leave my server
running in the background here.

3
00:00:09.074 --> 00:00:10.310
> > Brian Holt: 是的，然后我们继续。
&gt;&gt; Brian Holt: Yeah, and
then we'll keep going.

4
00:00:11.820 --> 00:00:18.370
到目前为止我一直在给你展示
So far, I've been showing you
how to write React without

5
00:00:18.370 --> 00:00:22.257
任何真正的示爱或者任何类似的东西都是在兜帽下面
any really transpilation or anything like
that just raw React underneath the hood.

6
00:00:22.257 --> 00:00:25.179
但我想让你看看这个叫 JSX的功能
But I wanna show you how to
use this feature called JSX,

7
00:00:25.179 --> 00:00:28.609
因为我们现在使用包裹可以使用 JSX
because we're using parcel
now we can use JSX,

8
00:00:28.609 --> 00:00:31.600
而我们之前不可能因为包裹没有在我们的代码上运行
whereas we could not before because
parcel was not running on our code.

9
00:00:31.600 --> 00:00:34.979
包裹在用一个叫巴贝尔的项目进行变换
And parcel do transformations
using a project called Babel,

10
00:00:34.979 --> 00:00:36.460
是个很酷的项目
which is a really cool project.

11
00:00:36.460 --> 00:00:39.600
这只是建在一个包裹里好吗
And that's just built into parcel, okay?

12
00:00:40.689 --> 00:00:46.055
所以我们来了，我们还是先去做 pet.js 吧。
So here we have,
let's actually go do pet.js first.

13
00:00:47.710 --> 00:00:51.362
>> Brian Holt: 好的，现在你在看这个项目，你可以看到
&gt;&gt; Brian Holt: Okay, so you're looking at
this project right now, and you can see

14
00:00:51.362 --> 00:00:55.539
这会用 h1 和两个 h2的内部创建一个 div ，对吧 ?
that this is gonna create a div with
an h1 and two h2's inside of it, right?

15
00:00:56.840 --> 00:01:00.969
所以我们在用 JavaScript 来模仿标记，对吧 ?
So we're writing JavaScript
to mimic markup, right?

16
00:01:02.200 --> 00:01:05.394
所以当你考虑好的时候大脑内部
So inside of your brain when
you're thinking about okay, well,

17
00:01:05.394 --> 00:01:08.371
我要在里面有一个我要有一个 h1 和 h2的 div 。
I need to have a div inside of
that I need to have an h1 and h2.

18
00:01:08.371 --> 00:01:10.679
你得想想你想要的 HTML
You have to think about
the HTML that you want and

19
00:01:10.679 --> 00:01:15.609
那就得把你大脑里的那个转化为能做的 JavaScript ，对吧 ?
then have to translate that in your brain
to JavaScript that React can do, right?

20
00:01:15.609 --> 00:01:18.969
如果我们能把我们想要的 HTML 写得更好
Wouldn't it be nice if we could just write
the HTML that we wanted in the first place

21
00:01:18.969 --> 00:01:21.799
而不是在我们的大脑里有那个翻译层吗
rather than having to have that
translation layer in our brain?

22
00:01:21.799 --> 00:01:25.680
这就是 JSX 的情况，就像所有 JSX 都一样。
Well, that's what JSX is and
like that is all JSX is.

23
00:01:25.680 --> 00:01:26.867
这不是别的事
It's not anything else,

24
00:01:26.867 --> 00:01:29.951
除了我刚才告诉你的事情外还有其他的特点
there's not additional features
beyond just what I just told you.

25
00:01:31.289 --> 00:01:34.209
>> Brian Holt: 所以我就像这样评论这个。
&gt;&gt; Brian Holt: So I'll comment this
out for just a second just like this.

26
00:01:35.780 --> 00:01:42.599
我想让你说回来，然后我想你这样写，好吗 ?
And I want you to say return, and then I
want you to write div like this, okay?

27
00:01:43.729 --> 00:01:48.129
然后我想让你把一个 h1 放在那个 h1 里面
And then inside of that div I want you
to put an h1 and then inside of that h1,

28
00:01:48.129 --> 00:01:52.390
我要你用花括号括起来
I want you to put curly braces
like that and put name.

29
00:01:55.310 --> 00:02:01.719
然后一个 h2，而不是花在里面的背带，我们可以做动物。
Then an h2, and instead of curly braces
inside of that, we could do animal.

30
00:02:01.719 --> 00:02:06.096
在另一个 h2中
And inside of another h2,

31
00:02:06.096 --> 00:02:11.430
可能猜中了吧
probably guessed breed, yeah?

32
00:02:11.430 --> 00:02:17.129
>> 扬声器 2: 在 JSX 中是否有写快捷方式 ?
&gt;&gt; Speaker 2: Are there any Emmit
shortcuts for writing in JSX?

33
00:02:17.129 --> 00:02:19.009
>> Brian Holt: 有，当然有。
&gt;&gt; Brian Holt: There are, yeah, for sure.

34
00:02:19.009 --> 00:02:25.858
我是否有，嗯， > > Brian Holt: 我很确定
Do I have it, yeah, so
&gt;&gt; Brian Holt: I'm pretty sure

35
00:02:25.858 --> 00:02:30.611
你现在要做的就是， >> Brian Holt: 让我们试试吧。
the way you have to do that right now is,
&gt;&gt; Brian Holt: Let's just try it.

36
00:02:37.864 --> 00:02:40.378
>> Brian Holt: 是，如果我将此更改为 .jsx，
&gt;&gt; Brian Holt: Yeah, so
if I change this to be .jsx,

37
00:02:40.378 --> 00:02:43.250
就能把它从盒子里取出来
it would just work out of the box.

38
00:02:43.250 --> 00:02:47.240
有一种可以为 JS 文件启用的方法，我忘了怎么做。
There's a way to enable it for
JS files, and I forgot how to do it.

39
00:02:47.240 --> 00:02:53.055
但让我们先谈一下为什么我不改变一切
But so let's just talk for a second about
why I'm not changing everything to be

40
00:02:53.055 --> 00:02:57.349
.jsx，我不这么做的真正原因是因为 React
.jsx, the real reason I'm not doing that
in teaching that too is because the React

41
00:02:57.349 --> 00:03:03.590
核心小组说他们认为没必要这样我就不这么做了
core team said that they don't think it's
necessary, so I don't do it and that's it.

42
00:03:03.590 --> 00:03:08.120
但如果你做的改变是 .jsx ，你会得到一些免费的东西。
But if you do changes it be .jsx you'll
get some of that stuff for free.

43
00:03:08.120 --> 00:03:12.473
>> 扬声器 3: 其他方法只是更改类型
&gt;&gt; Speaker 3: The other way
is just to change the type in

44
00:03:12.473 --> 00:03:16.699
VS 到 JavaScript 的 JavaScript 代码。
VS Code to JavaScript React
from JavaScript.

45
00:03:16.699 --> 00:03:19.865
所以在底部上面写着 JavaScript
So on the bottom there
it's says JavaScript,

46
00:03:19.865 --> 00:03:22.473
如果您将其更改为 JavaScript React。
if you change it to JavaScript React.

47
00:03:26.097 --> 00:03:26.681
>> Brian Holt: 这也会起作用。
&gt;&gt; Brian Holt: That'll work as well.

48
00:03:26.681 --> 00:03:28.009
>> 演讲者 3: 这也会起作用。
&gt;&gt; Speaker 3: That'll work as well.

49
00:03:28.009 --> 00:03:30.400
>> Brian Holt: 现在我可以这样做了。
&gt;&gt; Brian Holt: So
now I can do h2 like that.

50
00:03:32.824 --> 00:03:34.728
>> Brian Holt: 有一种方法可以始终配置这些 .js 文件
&gt;&gt; Brian Holt: There's a way to
configure those .js files always

51
00:03:34.728 --> 00:03:36.469
也有这方面的资料
have that available as well.

52
00:03:36.469 --> 00:03:41.180
但我相信如果你谷歌它，它会成为最大的栈溢出问题。
But I'm sure if you Google it,
it'll be the top stack overflow question.

53
00:03:43.430 --> 00:03:46.759
所以我们现在把这个翻译成
So we've now translated this

54
00:03:48.079 --> 00:03:53.079
这些都是等同的，对吧 ?
to this and
these are equivalent right now, right?

55
00:03:53.079 --> 00:03:58.289
我个人告诉你，我认为这更容易阅读，对吧 ?
I will personally tell you that I think
this is far more readable, right?

56
00:03:58.289 --> 00:04:01.900
没有代码，密度不高，没有对象和引号，
There's less code, it's less dense,
there's not objects and quotes and

57
00:04:01.900 --> 00:04:02.539
就像这样
things like that.

58
00:04:03.930 --> 00:04:07.300
但当雷法首次启动时，这是一个巨大的障碍
But when React was first starting out,
this was a big barrier for

59
00:04:07.300 --> 00:04:08.110
有很多人
a lot of people.

60
00:04:08.110 --> 00:04:11.750
这是个大障碍因为我们花了很长时间从我们的
It was a big barrier because we took
a long time getting JavaScript out of our

61
00:04:11.750 --> 00:04:14.610
HTML，现在我们把 HTML 放到我们的 JavaScript 里，对吧 ?
HTML, and now we're putting HTML
into our JavaScript, right?

62
00:04:14.610 --> 00:04:16.220
而这种感觉是错误的。
And that just feels wrong.

63
00:04:16.220 --> 00:04:21.759
但我要告诉你这更好，因为它不一样。
But I'll tell you that this is
better because it's not the same.

64
00:04:23.120 --> 00:04:27.259
把 JavaScript 放到你的 HTML 里是个糟糕的想法
Putting JavaScript inside of your HTML was
a terrible idea, and whoever started doing

65
00:04:27.259 --> 00:04:32.290
他们把我们安排了五年如果我们完全诚实对吗
that, they set us back like five years,
if we're being totally honest, right?

66
00:04:32.290 --> 00:04:37.238
但是，我们只是在编写我们真正想要的 HTML 代码。
But whereas this, we're just writing the
HTML that we actually want in the code.

67
00:04:37.238 --> 00:04:41.620
现在我想让你知道这只小的 div 标记
And now I want you to know
that this little div tag here,

68
00:04:41.620 --> 00:04:45.120
都被翻译成这样了
literally gets translated to this.

69
00:04:45.120 --> 00:04:47.930
如果你看看错位的输出，对吧 ?
If you go look at the transpiled output,
right?

70
00:04:47.930 --> 00:04:49.930
所以在这一经历穿过了 Babble之后
So after this gets ran through Babble,

71
00:04:49.930 --> 00:04:53.879
这里的一切都被翻译成 React.create.ElementCalls ，对吧 ?
everything here is just being translated
into React.create.ElementCalls, right?

72
00:04:53.879 --> 00:04:55.129
所以这里没有什么神秘的
So there's no mystery here.

73
00:04:55.129 --> 00:04:58.699
它不做任何黑魔法或优化之类的事情。
It's not doing any sort of black magic or
optimization or anything like that.

74
00:04:58.699 --> 00:05:03.579
从字面上来说，把它放进密码里的是这个，不是这个，这个。
Literally what gets put it in
the code is this,oops not that, this.

75
00:05:06.240 --> 00:05:10.490
这就是为什么我让你先写这些东西让你明白
That's why I have you write all this stuff
first so you understand that this is all

76
00:05:10.490 --> 00:05:14.891
只是 React.createElementCalls ，这里没有任何 amiss 。
just React.createElementCalls,
and there's nothing amiss here.

77
00:05:14.891 --> 00:05:16.680
有道理吗
Does that make sense?

78
00:05:18.901 --> 00:05:23.009
>> Brian Holt: 我向您保证， JSX 中没有其他内容，这是真的。
&gt;&gt; Brian Holt: And I promise you, there's
nothing else in JSX, this is really it.

79
00:05:23.009 --> 00:05:24.920
还有谁有问题吗
Anyone else have any questions, yeah?

80
00:05:24.920 --> 00:05:29.449
>> 扬声器 4: 我注意到，有时如果您
&gt;&gt; Speaker 4: I have noticed
that sometimes if you

81
00:05:29.449 --> 00:05:32.750
尝试在您的返回中进行多个 div 。
try to make multiple
divs in your return and

82
00:05:32.750 --> 00:05:36.629
你的 JSX 就会黄了你得有办法把它包起来
your JSX it yells at you and
you need to have something to wrap it all.

83
00:05:36.629 --> 00:05:39.430
>> Brian Holt: 对。 >> 演讲者 4: 有具体原因吗 ?
&gt;&gt; Brian Holt: Yep.
&gt;&gt; Speaker 4: Is there specific reason?

84
00:05:39.430 --> 00:05:42.959
我是说我只知道只回来一件事
I mean, I understand the idea
of returning only one thing but.

85
00:05:42.959 --> 00:05:45.639
>> Brian Holt: 我的意思是这样，对吗 ?
&gt;&gt; Brian Holt: I mean that's precisely it,
right?

86
00:05:45.639 --> 00:05:51.310
所以如果我说的话， >> Brian Holt: 如果我把这个放在这里，对吧 ?
So if I put like,
&gt;&gt; Brian Holt: If I put this here, right?

87
00:05:51.310 --> 00:05:54.829
它会说我不知道相邻的 JSX
It's gonna say,
I don't know what to, adjacent JSX

88
00:05:54.829 --> 00:05:58.930
元素必须包装在外层标签中，谢谢， ESLint 为我们捕捉到它，对吗 ?
elements must be wrapped in enclosing tag,
thanks, ESLint caught it for us, right?

89
00:05:58.930 --> 00:06:01.379
所以，让我们先谈这个问题。
So let's talk about this for a second.

90
00:06:01.379 --> 00:06:03.779
如果我有这个，这会被翻译成什么呢 ?
What does this get translated
to if I have this?

91
00:06:04.920 --> 00:06:11.139
如果我没说过的话
Well, if I uncommented this
it would be like having,

92
00:06:13.896 --> 00:06:16.797
>> Brian Holt: React.createElement 或
&gt;&gt; Brian Holt: React.createElement or

93
00:06:16.797 --> 00:06:24.978
contextElement，停止每个 h1 右边的元素，如那样。
contextElement, stop it element
each h1 right, something like that.

94
00:06:27.608 --> 00:06:32.454
> > Brian Holt: 这没有任何意义，因为你不能归还两个东西，
&gt;&gt; Brian Holt: And this doesn't make any
sense because you can't return two things,

95
00:06:32.454 --> 00:06:33.029
对吧 ?
right?

96
00:06:33.029 --> 00:06:36.389
我不能说退货 2，逗号 5，对吧 ?
I can't say return 2, comma 5, right?

97
00:06:36.389 --> 00:06:37.709
JavaScript 没有此能力，
JavaScript does not have this ability,

98
00:06:37.709 --> 00:06:40.240
某些其他语言具有多个返回，但不具有 JavaScript。
some other languages have multiple
returns, but not JavaScript.

99
00:06:40.240 --> 00:06:43.310
所以这就是 React 要求你回去的原因
So that's why React requires you to return

100
00:06:43.310 --> 00:06:46.959
一个顶级的东西，因为这个是 JavaScript 可以做的。
one top level thing because
that's what JavaScript can do.

101
00:06:46.959 --> 00:06:52.180
现在有一种方法可以做到这一点我们稍后会被称为
Now there is a way to accomplish this
which we'll get to later which are called

102
00:06:52.180 --> 00:06:57.966
片段，但是您返回一个包含两个内容的顶级片段，
fragments, but you return one top-level
fragment which encapsulates two things,

103
00:06:57.966 --> 00:07:02.129
有道理 > 布莱恩 - 霍尔特: 好的，
does that make sense
&gt;&gt; Brian Holt: All right,

104
00:07:02.129 --> 00:07:03.360
我们走吧
let's get rid of that.

105
00:07:05.120 --> 00:07:09.189
所以如果你觉得这种感觉很奇怪，很多人还是会觉得奇怪的，
So if this still feels weird to you,
a lot of people will still feel weird to,

106
00:07:09.189 --> 00:07:11.699
我邀请你用这个完成课程
I would invite you to just
finish the course with this.

107
00:07:11.699 --> 00:07:16.629
我要告诉你只有一两个主要的公司
I will tell you that there's only one or
two major holdouts of companies that

108
00:07:16.629 --> 00:07:21.269
没有使用 JSX ，现在我知道的两个大的都使用 JSX，对吧 ?
didn't use JSX and now both of the big
ones that I know of now use JSX, right?

109
00:07:21.269 --> 00:07:25.879
就是 React 社区中的每个人都是 JSX 和其他人
It's just everyone in the React community
is JSX and people like it enough that

110
00:07:25.879 --> 00:07:29.569
甚至 Vue 社区也有人使用 JSX ，对吧 ?
even the Vue community some of
them use JSX as well, right?

111
00:07:29.569 --> 00:07:31.529
所以这是一个非常好的模式。
So it's it's a pretty good pattern.
