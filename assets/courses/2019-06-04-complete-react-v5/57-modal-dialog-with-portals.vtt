WEBVTT

1
00:00:00.250 --> 00:00:03.807
> > 布莱恩: 我们会在这里做一种更先进的反应
&gt;&gt; Brian: So we're gonna do one more kind
of advance feature of react here which is

2
00:00:03.807 --> 00:00:04.711
称为 " 门户网站" 。
called a Portal.

3
00:00:04.711 --> 00:00:06.806
我们想让这个按钮在这里工作
We wanna make this button work here for

4
00:00:06.806 --> 00:00:10.939
你点击的方式就是胖子 Slim cuz 是狗最棒的名字
the way you click adopt Fat boy Slim
cuz that's the greatest name for a dog.

5
00:00:10.939 --> 00:00:15.012
所以你可以去收养她但我们想确保人们的感觉
So you can actually go and adopter her,
but we wanna make sure people are like,

6
00:00:15.012 --> 00:00:17.972
你确定要收养这只宠物是个大问题
are you sure you wanna adopt
this cuz adopting a pet is a big

7
00:00:17.972 --> 00:00:19.413
责任，对吧 ?
responsibility, right?

8
00:00:19.413 --> 00:00:21.995
所以你想让每个人都喜欢斑纹
So you wanna pop up a mottle
cuz everyone loves mottles.

9
00:00:21.995 --> 00:00:24.780
我讨厌飞毛虫但我要教你怎么做 motles，对
I hate mottles, but I'm gonna show
you how to make mottles, right.

10
00:00:24.780 --> 00:00:28.356
所以，一瓶瓶子在你的屏幕上出现了一些类似的东西，
So, a mottle is something that pops over
your screen and says something like,

11
00:00:28.356 --> 00:00:30.210
你确定你要这么做对吧
are you sure you want to do this, right?

12
00:00:30.210 --> 00:00:34.435
这是我们一直在为自己做的很烦人的设计模式。
It's a really annoying design pattern
that we keep doing to ourselves.

13
00:00:34.435 --> 00:00:36.970
我要用你的方式来延续这个模式
And I'm perpetuating the pattern
by showing you, yeah?

14
00:00:36.970 --> 00:00:39.023
>> 演讲者 2: 如果你讨厌 ttle ，更好的选择是什么 ?
&gt;&gt; Speaker 2: If you hate mottles,
what is the better alternative?

15
00:00:39.023 --> 00:00:45.301
>> Brian: 就像在线确认中一样，我不知道。
&gt;&gt; Brian: Just like in line confirmations,
I don't know.

16
00:00:45.301 --> 00:00:47.856
我觉得要有更好的设计模式
I think there's better design
patterns to lean on than,

17
00:00:47.856 --> 00:00:50.210
好像在我看来只是个懒惰的模式
like it's just kind of a lazy
pattern in my opinion.

18
00:00:51.600 --> 00:00:53.314
警报，我只是开玩笑，这只是个玩笑。
Alerts, no I'm just kidding,
that's a joke.

19
00:00:53.314 --> 00:00:56.482
是的，我不知道.
[LAUGH] Yeah, I don't know.

20
00:00:56.482 --> 00:00:59.546
我得考虑更多的事但我觉得还有更好的办法
I'd have to think more about it,
but I think there's better ways.

21
00:01:02.997 --> 00:01:06.878
> > 布莱恩: 所以，我想在这里做的事情就是这样。
&gt;&gt; Brian: So, the thing that I
wanna accomplish here, is that.

22
00:01:06.878 --> 00:01:12.027
我有这个细节页面，对，我想点点胖子 Slim ，
I have this details page, right, and
I wanna click Adopt Fat Boy Slim and

23
00:01:12.027 --> 00:01:16.682
我想把它弹出来，一个覆盖整个页面的模型，对吧 ?
I want it to pop over,
a model that covers the whole page, right?

24
00:01:16.682 --> 00:01:20.210
这将非常困难，因为这已经嵌套在多层中
Now that would be really hard because this
is already nested within several layers

25
00:01:20.210 --> 00:01:21.109
标记。
of markup.

26
00:01:21.109 --> 00:01:23.269
所以在整个网页上都可能不可能
So taking over the whole
page might not be possible,

27
00:01:23.269 --> 00:01:25.599
给生活在上面的 CSS 提供的信息
given the CSS that lives above it.

28
00:01:25.599 --> 00:01:27.599
那你是怎么做到的
So, how do you do that?

29
00:01:27.599 --> 00:01:29.099
这并不是一个很好的方法。
There's not really a good way of doing it.

30
00:01:29.099 --> 00:01:35.170
如果你看我在这里的标记，我就在这里。
It'd be much better, if you look at my
markup here, I have root right here.

31
00:01:35.170 --> 00:01:39.500
如果上面有一个模型，我就会很酷，我可以把它变成，对。
It'd be cool if there was a model above
it, that I could render into, right.

32
00:01:39.500 --> 00:01:42.789
所以我们要用入口来做
And so, we're gonna do that with portals.

33
00:01:44.629 --> 00:01:48.680
所以我想让你打开你的 index.html 文件
So, what I want you to do is I want
you to open your index.html file,

34
00:01:48.680 --> 00:01:53.409
在源目录的内部，然后在根之上，
inside of the source directory,
and then above root,

35
00:01:53.409 --> 00:01:58.710
将 #modal 置于其中的任何内容中。
put #modal with nothing in it.

36
00:02:00.069 --> 00:02:02.957
所以一旦你做到了第 11 行
So once you've done that, line 11 there,

37
00:02:02.957 --> 00:02:06.763
我希望您创建一个名为 Modal.js ， Modal.js 的新文件。
I want you to make a new file
called Modal.js, Modal.js.

38
00:02:06.763 --> 00:02:13.156
你要去进口雷法和
And you go into import, React and

39
00:02:13.156 --> 00:02:17.729
useEffect 和 useRef。
useEffect and useRef.

40
00:02:17.729 --> 00:02:24.555
我们将在第二次，从 React中讨论 useRef 在这里的情况。
We'll talk about what useRef is
here in just a second, from React.

41
00:02:24.555 --> 00:02:31.574
我想让你从反应界进口 createPortal 。
And that I want you to import
createPortal from react-dom.

42
00:02:36.237 --> 00:02:42.263
> > Brian: 我想说， const modalRoot
&gt;&gt; Brian: I wanna say, const modalRoot

43
00:02:42.263 --> 00:02:50.218
= document.getElementById 模态。
= document.getElementById modal.

44
00:02:50.218 --> 00:02:55.352
然后我就会说，我们的模式是儿童的一种功能。
And then here, I'm gonna say, const modal
= a function which takes in children.

45
00:02:58.394 --> 00:03:04.515
>> Brian: 并返回， >> Brian: 函数，
&gt;&gt; Brian: And returns,
&gt;&gt; Brian: Function,

46
00:03:06.393 --> 00:03:08.163
> > 布莱恩: 所以我要用一个
&gt;&gt; Brian: So I'm gonna use a thing

47
00:03:08.163 --> 00:03:12.859
这里叫 refs ，所以我要说 const elRef = useRef，
called refs here, so
I'm gonna say const elRef = useRef, and

48
00:03:12.859 --> 00:03:15.259
我现在就给它空空
I'm gonna give it null for now.

49
00:03:16.259 --> 00:03:19.329
所以 useRef是个有趣的事情
So useRef, it's an interesting thing.

50
00:03:19.329 --> 00:03:22.491
所以我要创造一个我要创造的元素
So I'm gonna have this element
that I'm going to create,

51
00:03:22.491 --> 00:03:25.473
我想经常提到同一个要素，对。
and I want to always refer
to the same element, right.

52
00:03:25.473 --> 00:03:28.810
因为，当我创建模态的时候，我将会创建标记和
Because, when I create a modal,
I'm gonna be creating markup and

53
00:03:28.810 --> 00:03:30.550
当我毁了它的时候对吧
when I destroy the modal, right.

54
00:03:30.550 --> 00:03:33.510
还，我一下来，就得回去销毁了，
It's still, as soon as I pop down the
modal, I need to go back and destroy it,

55
00:03:33.510 --> 00:03:35.400
好吧我得去把它解开
right, and I need to go un-render it.

56
00:03:35.400 --> 00:03:38.864
如果我不破坏它我就会泄露内存
Because if I don't destroy it,
then I'm gonna leak memory if I open and

57
00:03:38.864 --> 00:03:40.435
一帮不开放的时代
unopen modals a bunch of times.

58
00:03:40.435 --> 00:03:43.560
我只会继续创造标记而不是毁掉它
I'm just gonna keep creating markup and
not destroying it.

59
00:03:43.560 --> 00:03:46.079
所以你得在这里清理自己的垃圾我想说的是
So you kinda have to clean your own
garbage here, is what I'm saying.

60
00:03:46.079 --> 00:03:48.020
useRef 允许您这样做。
And useRef allows you to do that.

61
00:03:48.020 --> 00:03:50.409
因为你已经投降投降了
Because you have renders and re-renders,

62
00:03:50.409 --> 00:03:55.150
您需要在呈现中引用相同的 dom 元素，对吗 ?
you need to refer to the same dom
elements across renders, right?

63
00:03:55.150 --> 00:04:00.669
所以我不能只说，我不能在这里创造一个 DOM 元素。
So I can't just say, I can't just
create the DOM element in here const.

64
00:04:03.900 --> 00:04:07.319
我说的时候 const div =
When I say, const div =

65
00:04:07.319 --> 00:04:13.990
documents.createElements， div， right?
documents.createElements, div, right?

66
00:04:13.990 --> 00:04:16.603
这将会每一次创建一个新的 div ，并且
So this would be creating a new
div every single time, and

67
00:04:16.603 --> 00:04:18.029
这就是我们想要的对吧
that's what we want, right?

68
00:04:18.029 --> 00:04:19.730
我们要一次创建一个 div 。
We want one div created once.

69
00:04:19.730 --> 00:04:25.757
所以我们想说的是
So we're gonna say, here is going to say,

70
00:04:25.757 --> 00:04:28.790
如果 elref.current。
if elref.current.

71
00:04:28.790 --> 00:04:33.858
如果我没有 elref ，请创建 div 。
If I don't have an elref, create a div.

72
00:04:33.858 --> 00:04:39.990
然后说， elRef.current = div .
And then say, elRef.current = div.

73
00:04:39.990 --> 00:04:45.959
现在，我用这个钩子，我总是要有一个 div，对吧 ?
Now, I have using this hook,
I always I'm going to have a div, right?

74
00:04:45.959 --> 00:04:50.470
正确的 div是相同的 div，因为 elRef 是对象，并且
A correct div, the same div,
because elRef is an object and

75
00:04:50.470 --> 00:04:52.840
这个电流总是指向这个区的
this .current is always going
to be pointing at this div.

76
00:04:53.840 --> 00:04:54.461
有道理吗
So makes sense?

77
00:04:58.319 --> 00:05:00.230
> > 布莱恩: 好的，然后我在这里使用效果。
&gt;&gt; Brian: Okay, and
then I'm gonna use effect here.

78
00:05:02.480 --> 00:05:05.627
UseEffect，因此第一次呈现时，
UseEffect, so once this renders for
the first time,

79
00:05:09.264 --> 00:05:12.141
布莱恩: 我要说，
&gt;&gt; Brian: I'm gonna say,

80
00:05:12.141 --> 00:05:20.369
modalRoot.appendChild， elRef.current.
modalRoot.appendChild, elRef.current.

81
00:05:20.369 --> 00:05:21.966
事实上你能在这里做什么
And actually, what you could even do here?

82
00:05:21.966 --> 00:05:23.029
你可以把它搬来这里
You could actually just move this in here.

83
00:05:24.050 --> 00:05:25.290
这样你就不用待在这里了
Just so
you don't even have to be out here.

84
00:05:25.290 --> 00:05:31.165
因此，仅在此处使用效果的模型根，而不是使用效果。
So instead of use effect, just say model
root inside of the use effect here.

85
00:05:31.165 --> 00:05:36.271
AppendChild.elRef.current，所以我创建了这个 div，对吧 ?
AppendChild.elRef.current, so,
I created this div, right?

86
00:05:36.271 --> 00:05:37.966
这将会在这里发生
And this is gonna go inside of here.

87
00:05:42.014 --> 00:05:43.850
> > 布莱恩: 然后在这里，我想说回来。
&gt;&gt; Brian: And then here,
I wanna say return.

88
00:05:45.759 --> 00:05:48.860
因此，使用具有我已告诉过您的特殊功能的效果。
So, use effect that has special feature
that I have been told you about.

89
00:05:48.860 --> 00:05:51.649
如果返回是清除功能的功能。
If you return the function
that is the cleanup function.

90
00:05:53.009 --> 00:05:55.259
它会在卸载过程中运行，对吗 ?
So it'll run this when it unmounts, right?

91
00:05:55.259 --> 00:05:58.409
此组件将卸装挂钩。
This is component will unmount of hooks.

92
00:05:58.409 --> 00:06:03.702
所以如果我能恢复一个在它最后的功能
So, if I return a function that,
at the end of it,

93
00:06:03.702 --> 00:06:07.612
将会说， modalRoot.removeChild
will say, modalRoot.removeChild

94
00:06:07.612 --> 00:06:14.942
elRef.current >> Brian: 因此
elRef.current
&gt;&gt; Brian: So

95
00:06:14.942 --> 00:06:18.685
仅当模态根关闭时，才会运行此函数。
it's only going to run this function
whenever the modal root gets closed.

96
00:06:18.685 --> 00:06:19.788
有道理吗
Does that make sense?

97
00:06:26.807 --> 00:06:30.964
> > 布莱恩: 好的，然后在下面我们会说回来， createPortal，
&gt;&gt; Brian: Okay, and then down here
we're gonna say return, createPortal,

98
00:06:39.622 --> 00:06:42.005
> > Brian: div，我们将全部打包
&gt;&gt; Brian: div, we're gonna wrap it all in

99
00:06:42.005 --> 00:06:43.336
div孩子们
div, children.

100
00:06:47.731 --> 00:06:50.699
>> Brian: 和 elref.current。
&gt;&gt; Brian: And elref.current.

101
00:06:50.699 --> 00:06:56.129
我又要把一个二夫子带回来的原因是我用一个 div 的方式给它做了造型，就这样了。
The reason why I'm wrapping a div, again,
is cuz I styled it with a div, that's all.

102
00:06:59.600 --> 00:07:01.922
然后在底部出口缺省的莫达尔
And then down at the bottom,
export default Modal.

103
00:07:07.620 --> 00:07:11.600
>> 布莱恩: 这样，就能让这个模式的整个生命周期重新开始。
&gt;&gt; Brian: So, just to kinda recap
the whole life cycle of this modal.

104
00:07:11.600 --> 00:07:12.480
顺便说下另一件事
The other thing, by the way,

105
00:07:12.480 --> 00:07:15.970
我不想在这里做你该做的事
that I'm not doing here that you
should do if you're gonna do a modal.

106
00:07:15.970 --> 00:07:19.060
我认为我最大的抱怨是他们无法获得
I think one of my biggest complaints about
modal as well is they're not accessible,

107
00:07:19.060 --> 00:07:20.410
而且很难让他们接触
and they're hard to make accessible.

108
00:07:20.410 --> 00:07:25.319
你必须把焦点放在 Cuz 上，捕捉焦点并不容易。
Cuz you have to trap focus, and
trapping focus is not easy all the time.

109
00:07:25.319 --> 00:07:27.529
我们在这里不做的是捕捉焦点。
And what we're not doing
here is trapping focus.

110
00:07:27.529 --> 00:07:32.341
所以我不知道怎么用我的头来给你展示如何
So, I don't know how to do it well enough
off the top of my head to show you how to

111
00:07:32.341 --> 00:07:35.749
做，只是 google 如何把焦点集中在模态下，
do, it but just google how to
trap focus in a modal, and

112
00:07:35.749 --> 00:07:39.108
你会比我更聪明的人
you'll have a lot more smart
people than me doing it.

113
00:07:42.502 --> 00:07:47.608
> > 布莱恩: 所以我想说的是我们在这里
&gt;&gt; Brian: So what I wanna say
here is we grab the modal here,

114
00:07:47.608 --> 00:07:51.483
是我们创造的那个身份证对吧
that ID one that we created, right?

115
00:07:51.483 --> 00:07:55.800
那我们就追加这个 div ，对吧 ?
Then we append this div, right?

116
00:07:55.800 --> 00:07:57.062
在 div的内部
And inside of the div,

117
00:07:57.062 --> 00:08:01.910
我们会有所有的孩子， >> 布莱恩: 对吧 ?
we're gonna have all the children,
&gt;&gt; Brian: Right?

118
00:08:01.910 --> 00:08:05.264
这就是我们在这里追加孩子的地方
That's where we'll do
the append child here, and

119
00:08:05.264 --> 00:08:07.608
最后我们会把它移走
then at the end, we'll remove it.

120
00:08:07.608 --> 00:08:11.053
但凉爽的部分就好像是被变成另一个部分，对，
But the cool part is like this is actually
getting rendered to another part, right,

121
00:08:11.053 --> 00:08:12.569
使用此创建门户网站功能。
using this create portal function.

122
00:08:12.569 --> 00:08:15.523
这将被呈现给 DOM 的不同部分
This is getting rendered to
a different part of the DOM, and

123
00:08:15.523 --> 00:08:18.661
一旦它被卸载了我就会被拆去
then once it gets unmounted I'll
get room unmounted for that.

124
00:08:18.661 --> 00:08:21.481
但酷的是我能用所有状态
But what's cool is like,
I can use all of the state and

125
00:08:21.481 --> 00:08:26.011
将其呈示为另一部分，然后使用相同功能将其取消呈示。
render that into a different part and then
unrender it later using the same function.

126
00:08:31.430 --> 00:08:32.940
>> 布莱恩: 到目前为止 ?
&gt;&gt; Brian: Follow me so far?

127
00:08:32.940 --> 00:08:38.034
好了我们去做这个工作吧我要你去详细的
All right, let's go make this work,
I want you to go into details.js.

128
00:08:45.665 --> 00:08:49.051
>> 布莱恩: 我们不做的一件事就是如果我们
&gt;&gt; Brian: One thing we didn't do that
would have been a disaster if we

129
00:08:49.051 --> 00:08:50.028
没定吗
hadn't fixed?

130
00:08:51.549 --> 00:08:53.240
我们希望这种效果多久才能运行 ?
How often do we want this effect to run?

131
00:08:55.644 --> 00:08:56.586
> > 布莱恩:
&gt;&gt; Brian: Once right?

132
00:08:56.586 --> 00:08:58.638
那么，我们如何实现一次有效的效果 ?
So how do we make an effect run once?

133
00:08:58.638 --> 00:09:04.340
逗号，空数组。
Comma, empty array.

134
00:09:04.340 --> 00:09:07.629
这没有依赖性，因此我们希望它运行一次。
This has no dependencies so
we want it to run once.

135
00:09:10.759 --> 00:09:14.730
否则，每次在此更新子代时，这些都不是 true。
Otherwise every time that the children
get updated here, that's not true.

136
00:09:14.730 --> 00:09:16.070
这个帖子会好起来的
This post would have been okay,

137
00:09:16.070 --> 00:09:19.539
因为这里没有状态会随着时间的推移而改变
because there's this has no
state that's changing over time.

138
00:09:19.539 --> 00:09:21.419
但我们还想再跑一次
But even still we only wanted to run once.

139
00:09:21.419 --> 00:09:24.590
这可能是未来潜在的错误来源。
That that would have could have been
a potential future source of bugs.
