WEBVTT

1
00:00:00.560 --> 00:00:03.549
>> 演讲者 1: 请解释该加号
&gt;&gt; Speaker 1: Could you explain the plus

2
00:00:03.549 --> 00:00:06.980
在 eventTargetDataSetIndex 前再次登录吗 ?
sign in front of
eventTargetDataSetIndex again?

3
00:00:06.980 --> 00:00:09.169
>> Brian Holt: 从数据集中返回某些内容时，
&gt;&gt; Brian Holt: When you get back
something from the data set,

4
00:00:09.169 --> 00:00:10.130
就会是个字符串对吧
it's gonna be a string, right?

5
00:00:10.130 --> 00:00:11.669
就像绳子五
Like a string five.

6
00:00:11.669 --> 00:00:15.070
我需要它是一个数字，而不是一个字符串，对吧 ?
And I need it to be a number,
not a string, right?

7
00:00:15.070 --> 00:00:18.170
所以如果我放了 +string5
So if I put +string5.

8
00:00:18.170 --> 00:00:20.870
我的实际数是 5
I get back the actual number of five.

9
00:00:20.870 --> 00:00:22.986
>> 扬声器 1: 好，当然，它是一个整数。
&gt;&gt; Speaker 1: Okay, so
of course, it's an integer.

10
00:00:22.986 --> 00:00:24.170
>> Brian Holt: 数字，是的。
&gt;&gt; Brian Holt: A number, yeah.

11
00:00:24.170 --> 00:00:30.100
所以你也可以只说 parseInt("5"，10)
So you could have also
just said parseInt("5",10)

12
00:00:30.100 --> 00:00:34.616
这就意味着你要在 10 号的基地里
which just means you want
it to be in base ten.

13
00:00:34.616 --> 00:00:37.020
这也会给你同样的东西
And that would give you
the same thing as well.

14
00:00:37.020 --> 00:00:39.000
但是，加号是远远不够的。
But plus signs is far less work, so.

15
00:00:40.729 --> 00:00:43.539
这里可能有类似的东西，别在这里买东西了。
Very well there might be something
like this, stop buying this here.

16
00:00:45.670 --> 00:00:46.579
那就这样吧
So.

17
00:00:46.579 --> 00:00:49.340
>> 扬声器 3: 然后对该调用添加索引。
&gt;&gt; Speaker 3: And
then adding index to that call.

18
00:00:50.439 --> 00:00:52.965
>> Brian Holt: 是的，你也可以这样做
&gt;&gt; Brian Holt: Yeah, and you could have
done this as well right, for sure and

19
00:00:52.965 --> 00:00:54.240
那么此处没有数据集。
then not had the data set here.

20
00:00:59.265 --> 00:01:02.322
>> Brian Holt: 这样做就像这样，而不是得到
&gt;&gt; Brian Holt: So then this would have
had worked like this instead of getting

21
00:01:02.322 --> 00:01:02.863
活动。
an event.

22
00:01:06.468 --> 00:01:08.311
>> Brian Holt: 会有这样的索引，并且
&gt;&gt; Brian Holt: There would have
been an index like this and

23
00:01:08.311 --> 00:01:10.265
那你就只会打指数了
then you would've just been calling index.

24
00:01:13.746 --> 00:01:15.700
>> Brian Holt: 是，此工作。
&gt;&gt; Brian Holt: Yes, this works.

25
00:01:15.700 --> 00:01:18.631
那么让我告诉你们为什么人们在历史上没有这样做，
So let me tell you why people have
historically not done this, and

26
00:01:18.631 --> 00:01:22.066
那我就告诉你为什么没有人这样做
then I'll tell you why that's silly
that people haven't done it this way.

27
00:01:26.775 --> 00:01:28.840
>> Brian Holt: 这样做会起作用。
&gt;&gt; Brian Holt: So this does work.

28
00:01:28.840 --> 00:01:34.030
人员未使用此操作，因为此调用绑定已使用
People did not used to do this,
because this calling bind used

29
00:01:34.030 --> 00:01:39.599
比你预想的要贵得多
to be very expensive, far more expensive
than you would have ever expected.

30
00:01:39.599 --> 00:01:41.539
它曾经是你在 Chrome中可以做的最慢的事情之一。
It used to be one of the slowest
things you could do in Chrome.

31
00:01:42.770 --> 00:01:50.490
大约两年前， Chrome 固定了这个，使点的绑定更快。
Now about two years ago, Chrome fixed
this and made dot bind much faster.

32
00:01:52.629 --> 00:01:55.659
但为什么这与构造函数不同呢 ?
But why is this different from
doing it in the constructor?

33
00:01:55.659 --> 00:02:00.189
这就不一样了，因为每次我打电话给人，都是有约束力的，对吧 ?
This is different because every time I
call render, this is calling bind, right?

34
00:02:00.189 --> 00:02:02.959
如果真的这么做意味着你放慢了投降的速度
And if that was really so
that means you slow down your renders,

35
00:02:02.959 --> 00:02:06.390
这意味着您将降低整个应用程序的性能。
which means that you're slowing down the
performance of your entire application.

36
00:02:06.390 --> 00:02:10.289
所以人们建立了最好的做法，不要这样做。
So people have established the best
practice of, don't do it this way.

37
00:02:11.669 --> 00:02:13.770
但好消息是他们确定了
But the good news is, they fixed it.

38
00:02:13.770 --> 00:02:14.879
现在的速度要快得多。
It is much faster now.

39
00:02:14.879 --> 00:02:19.020
所以这其实是有效的，但是我们还是要处理旧的浏览器
And so this does actually work okay, but
we still have to deal with old browsers

40
00:02:19.020 --> 00:02:22.389
所以在旧的浏览器中，这还是很缓慢的。
and so in old browsers,
this is still really slow.

41
00:02:22.389 --> 00:02:25.590
所以它运作缓慢而且很缓慢
So it works and it's slow,
it's creating and

42
00:02:25.590 --> 00:02:27.635
每次都破坏功能
destroying functions every single time.

43
00:02:27.635 --> 00:02:33.159
你把这个跑了现在又有钩子了
That you run this,
which hooks do now anyway.

44
00:02:33.159 --> 00:02:36.400
所以我不太确定那是什么大不了的
So I'm not really too sure if
that's a big deal anymore.

45
00:02:36.400 --> 00:02:40.360
但这个问题的真正答案是，点绑定最终会变得昂贵。
But the real answer to that question is
the dot bind ends up being expensive.
