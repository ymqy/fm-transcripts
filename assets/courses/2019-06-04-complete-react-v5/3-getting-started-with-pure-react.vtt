WEBVTT

1
00:00:04.105 --> 00:00:06.067
>> Brian Holt: 好，这是一个箭头函数，对吗 ?
&gt;&gt; Brian Holt: Okay, so
this is an arrow function, right?

2
00:00:06.067 --> 00:00:08.980
我们要放进去的是
And what we're gonna
put inside of here is,

3
00:00:08.980 --> 00:00:10.881
我们要回去了
we're going to put return,

4
00:00:13.417 --> 00:00:19.306
>> Brian Holt: React.createElement， >> Brian Holt: 好吗 ?
&gt;&gt; Brian Holt: React.createElement,
&gt;&gt; Brian Holt: Okay?

5
00:00:19.306 --> 00:00:23.256
然后你不一定能看到这个自动完成的
And then you may not necessarily
see this auto-complete,

6
00:00:23.256 --> 00:00:28.233
如果 VS 码能赶上你要做的事
it'll take a second for VS Code to just
catch up with what you are doing, but

7
00:00:28.233 --> 00:00:30.449
你就可以不理会了
you can just ignore that for now.

8
00:00:30.449 --> 00:00:32.895
迪夫 - 迪夫好吧
Div div, okay.

9
00:00:32.895 --> 00:00:36.240
空的物体然后我们再放
Empty object and
then here we are gonna put again,

10
00:00:36.240 --> 00:00:40.950
reet.createElement，然后我们将放入 h1，
react.createElement, then we're
gonna put inside of that an h1,

11
00:00:43.860 --> 00:00:47.155
>> Brian Holt: 使用空对象和
&gt;&gt; Brian Holt: With an empty object and

12
00:00:47.155 --> 00:00:52.737
通过我， >> Brian Holt: 好吗 ?
Adopt Me,
&gt;&gt; Brian Holt: Okay?

13
00:00:54.892 --> 00:00:59.295
>> Brian Holt: 我们在这里做的是创建一个名为 App的组件。
&gt;&gt; Brian Holt: So what we've done here
is we've created a component called App.

14
00:00:59.295 --> 00:01:03.975
而这个特定案例中的一个组件只是一个功能
And a component in this particular case
is just a function that whenever it

15
00:01:03.975 --> 00:01:06.846
返回 reet.createElement 的结果。
returns a result of react.createElement.

16
00:01:06.846 --> 00:01:12.445
让我们聊一聊 createElement 是什么，
So let's chat for
a second about what createElement is,

17
00:01:12.445 --> 00:01:15.837
或者哪个应用程序是第二个
or what app is for a second rather.

18
00:01:15.837 --> 00:01:18.894
我喜欢把这个形容为橡皮图章，对吧 ?
I like to describe this as a rubber stamp,
right?

19
00:01:18.894 --> 00:01:24.158
所以我们在这里制作了一个叫做应用的橡皮图章，对吧 ?
So here we have created our own
rubber stamp called app, right?

20
00:01:24.158 --> 00:01:27.210
现在你可以去店里买个橡皮图章
Now, you can go to the store and
you can buy a rubber stamp, but

21
00:01:27.210 --> 00:01:29.992
自己的邮票本身并不有用，对吧 ?
a stamp by itself is not in and
of itself useful, right?

22
00:01:29.992 --> 00:01:33.944
只是想戳它才有用，对吧 ?
It's only useful when you
actually want to stamp it, right?

23
00:01:33.944 --> 00:01:37.959
所以我们创建了一个，我们还没有使用这个邮票，
So here we've created one,
we haven't actually used the stamp,

24
00:01:37.959 --> 00:01:39.905
我们刚创建了邮票
we've just created the stamp.

25
00:01:39.905 --> 00:01:42.526
这就是这个功能的作用
So that's what this function does,

26
00:01:42.526 --> 00:01:47.697
它能让你像你想要的一样多地去印吗
is it allows you to basically stamp
this as many times as you want, okay?

27
00:01:47.697 --> 00:01:49.043
React.createElement 在此处，
React.createElement in here,

28
00:01:49.043 --> 00:01:51.936
这其实是在戳什么东西对吧
what this is actually doing is it's
stamping something here, right?

29
00:01:51.936 --> 00:01:55.371
所以当应用程序被调用时，它就会戳到一个 div ，
So anytime that app gets called,
it's going to stamp a div, and

30
00:01:55.371 --> 00:01:57.674
它将会在一小时内盖章
inside of that it's going to stamp an h1.

31
00:02:00.417 --> 00:02:03.621
> > Brian Holt: 实际上，所有组件都在 React中，
&gt;&gt; Brian Holt: So
that's really all components are in React,

32
00:02:03.621 --> 00:02:08.039
就是只回报标记的东西对吧
is it's just something that
returns markup basically, right?

33
00:02:08.039 --> 00:02:11.974
所以，我们又创造了应用，但它本身并没有做任何事情，对吗 ?
So again, we've created app, but this in
it of itself doesn't do anything, right?

34
00:02:11.974 --> 00:02:15.099
这就是邮票的创作，所以我们需要去创造它。
This is the creation of the stamp,
so we actually need to go create it.

35
00:02:15.099 --> 00:02:23.556
这样我们就可以通过 ReactDOM.render 来呈现给 DOM 。
So we're going to go render this to
the DOM by saying ReactDOM.render.

36
00:02:23.556 --> 00:02:30.711
React.createElement App ，然后我们将告诉它如何呈现。
React.createElement App and then we're
gonna tell it where to render it.

37
00:02:30.711 --> 00:02:36.829
我们会说 document.getElementById root。
And we're gonna say
document.getElementById root.

38
00:02:47.707 --> 00:02:51.889
>> Brian Holt: 因此，这实际上是由于我们的应用
&gt;&gt; Brian Holt: So this is actually
going to stamp our App because of

39
00:02:51.889 --> 00:02:54.426
此 React.createElement。
this React.createElement.

40
00:02:54.426 --> 00:02:58.365
因此 React.createElement 可以使用您创建的任何一个戳记，或者
So the React.createElement can take
an either stamp that you've created, or

41
00:02:58.365 --> 00:03:01.891
它可以用一个像这样一个字符串
it can take in a string like this
where it's actually going to literally

42
00:03:01.891 --> 00:03:02.973
做一个 h1，对吧 ?
make an h1, right?

43
00:03:02.973 --> 00:03:06.681
而这将是我们所创造的
Whereas this is going to be
something that we've created,

44
00:03:06.681 --> 00:03:11.290
这将会是一个我们将要输出到 DOM的 h1 。
this is going to be literally an h1
that we're going to output to the DOM.

45
00:03:12.328 --> 00:03:13.563
>> Brian Holt:
&gt;&gt; Brian Holt: And as you may guess,

46
00:03:13.563 --> 00:03:17.013
就会变成根在这里的根
it's going into root which is
going to be this root up here.

47
00:03:21.853 --> 00:03:25.627
>> Brian Holt: 因此，您可以构建最简单的 React 应用程序。
&gt;&gt; Brian Holt: So this is about
the simplest React App you can build.

48
00:03:25.627 --> 00:03:30.846
所以如果我保存这个， >> Brian Holt:
So if I save this,
&gt;&gt; Brian Holt: And go back

49
00:03:30.846 --> 00:03:37.052
在我的浏览器中，你可以看到你得到了一个漂亮的 " 采用我 " 的标志。
over to my browser here, you can see here
that you get a nice little Adopt Me logo.

50
00:03:40.093 --> 00:03:43.377
>> Brian Holt: 所以说现在用 CSS 来代替它，对吧 ?
&gt;&gt; Brian Holt: So just say now
replaced that with CSS, right?

51
00:03:43.377 --> 00:03:49.010
所以这就是 h1 去的地方，这其实是我们在那里放的 h1 。
So that's where the h1 went, this is
actually the h1 that we put up there.

52
00:03:53.812 --> 00:03:57.725
> > Brian Holt: 现在我们完成工作坊，你可以回家了，
&gt;&gt; Brian Holt: So now we're done with
the workshop and you can go home,

53
00:03:57.725 --> 00:03:59.153
我开玩笑的
I'm just kidding.

54
00:03:59.153 --> 00:04:03.343
我要再用五次这个玩笑别担心
I'm gonna use that joke five more times,
so don't even worry about it.

55
00:04:05.037 --> 00:04:08.044
> > Brian Holt: 因此，这就是 React 的力量，
&gt;&gt; Brian Holt: So,
this is the power of React is one,

56
00:04:08.044 --> 00:04:11.528
这在我看来不是很复杂。
this is not very
complicated in my opinion.

57
00:04:11.528 --> 00:04:15.062
你可以做这个判断，但最简单的是，这就是 React 的内容。
You can be the judge to that, but
at its simplest, this is what React is.

58
00:04:15.062 --> 00:04:17.713
它是用一个组件，就用它，对吧 ?
It's taking a component and
just using it, right?

59
00:04:17.713 --> 00:04:20.654
而这里的力量是我可以制造组件内部的组件
And the power here is that I can make
components that I put inside of components

60
00:04:20.654 --> 00:04:23.432
我放进了组件里面的组件对吧
that I put inside of components that
I put inside of components, right?

61
00:04:23.432 --> 00:04:28.004
所以你有了这个 " 雷法" 的合成模型
So you kinda have this
composability model with React.
