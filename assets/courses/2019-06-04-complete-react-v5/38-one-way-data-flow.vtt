WEBVTT

1
00:00:00.570 --> 00:00:05.589
> > Brian Holt: 现在我们在这里有宠物，对吧 ?
&gt;&gt; Brian Holt: So what's really good about
this now is we have pets up here, right?

2
00:00:05.589 --> 00:00:08.689
这代表了一组我们从 API中回来的宠物。
And this represents a set of pets
that we've gotten back from the API.

3
00:00:11.779 --> 00:00:13.108
现在我要在这里制造另一个组件
Now, I'm gonna create
another component here.

4
00:00:15.160 --> 00:00:16.246
>> Brian Holt: 您可以除去该控制台日志。
&gt;&gt; Brian Holt: You can get
rid of that console log.

5
00:00:18.637 --> 00:00:21.856
>> Brian Holt: 在表单下面，我们会创建一些已调用的内容
&gt;&gt; Brian Holt: Underneath the form here,
we're gonna create something called

6
00:00:21.856 --> 00:00:25.202
结果，我们只会在宠物中通过，所以宠物 = {宠物}。
Results, and we're just gonna
pass in pets, so pets = {pets}.

7
00:00:28.088 --> 00:00:34.734
> > Brian Holt: 然后在上面，在顶部，我们会说，
&gt;&gt; Brian Holt: And then up here,
at the top, we're gonna say,

8
00:00:34.734 --> 00:00:40.259
从 "./Results" 导入结果。
import results from './Results'.

9
00:00:40.259 --> 00:00:42.728
同样，我们还没有创造这一领域，但我们即将开始。
Again, we haven't created this yet,
but we're about to.

10
00:00:42.728 --> 00:00:47.576
因此，第 3 行， whoops， >> Brian Holt: 导入结果
So, line 3, whoops,
&gt;&gt; Brian Holt: import results

11
00:00:47.576 --> 00:00:48.566
来自 "./Results"。
from './Results'.

12
00:00:48.566 --> 00:00:49.954
所以我们把它放进去
So we put that in.

13
00:00:51.780 --> 00:00:55.945
> > Brian Holt: 然后在下面，我们把结果放在
&gt;&gt; Brian Holt: And then down here,
we put Results with

14
00:00:55.945 --> 00:01:00.124
宠物={宠物}，第 54 行。
pets={pets}, there on line 54.

15
00:01:00.124 --> 00:01:02.293
我们即将开始创造新的
And we're about to go create this new

16
00:01:02.293 --> 00:01:05.912
文件， >> Brian Holt: And
file,
&gt;&gt; Brian Holt: And

17
00:01:05.912 --> 00:01:08.777
开始以有用的方式展示我们的宠物
start displaying our pets in a useful way.

18
00:01:11.795 --> 00:01:14.861
>> Brian Holt: 好的，请保存。
&gt;&gt; Brian Holt: Okay, save that.

19
00:01:14.861 --> 00:01:17.203
名为 results.js 的新文件。
New file called results.js.

20
00:01:17.203 --> 00:01:21.990
贡纳进口反应
Gonna import react

21
00:01:21.990 --> 00:01:26.483
从 " React"开始。
from 'React'.

22
00:01:26.483 --> 00:01:30.432
从 "./Pet" 导入 Pet 。
Import Pet from './Pet'.

23
00:01:30.432 --> 00:01:34.405
如果你还记得我们第一次做的事就是创造宠物
If you remember, one the very first things
we did in the course was create the Pet

24
00:01:34.405 --> 00:01:36.377
组件，我们会重复使用。
component, we're gonna reuse that.

25
00:01:36.377 --> 00:01:42.602
我要说的是 const 结果 = ({ pets )}，
And here, I'm gonna say,
const Results = ({ pets )},

26
00:01:45.432 --> 00:01:47.802
>> Brian Holt: Whops 双箭头。
&gt;&gt; Brian Holt: Whops double arrow.

27
00:01:47.802 --> 00:01:49.311
然后我们就回去了
Then we're going to return.

28
00:01:51.783 --> 00:01:56.085
> > Brian Holt: 在这里，我们要做一些标记。
&gt;&gt; Brian Holt: And
here we're just gonna do a bit of markup.

29
00:01:56.085 --> 00:02:00.799
我们会说 div className="search"。
So, we're gonna say div
className="search".

30
00:02:06.509 --> 00:02:12.987
>> Brian Holt: 我们会说，如果 pets.length === 0，
&gt;&gt; Brian Holt: And we're gonna say,
if pets.length === 0,

31
00:02:12.987 --> 00:02:17.366
我们会用三元的
and we're gonna use the ternary.

32
00:02:17.366 --> 00:02:24.728
因此，如果它没有长度，那么表示尚未从 API 返回任何结果，
So if it has no length, which means no
results have come back from the API yet,

33
00:02:24.728 --> 00:02:30.756
我们要返回的是一个 h1 ，上面说没有佩茨。
what we're going to return is
an h1 that says, No Pets Found.

34
00:02:30.756 --> 00:02:35.668
好吧否则我们就得回去了
Okay, otherwise we're going
to return something that

35
00:02:35.668 --> 00:02:38.498
会显示所有的宠物对吧
displays all the pets, right?

36
00:02:38.498 --> 00:02:42.938
所以我们会说地图我们要带宠物
So we're gonna say, pets.map,
and we're gonna take in a pet and

37
00:02:42.938 --> 00:02:46.043
我们要把它从它的部分中取出来
we're going to make a Pet
component out of it.

38
00:02:48.728 --> 00:02:54.860
>> Brian Holt: 因此，我们需要做动物 ={pet.type}。
&gt;&gt; Brian Holt: So
we need to do animal ={pet.type}.

39
00:02:54.860 --> 00:02:58.027
再记得，这些都是从 API来的。
And again, remember,
these are coming from the API.

40
00:03:00.670 --> 00:03:05.243
>> Brian Holt: 对不起，你得做一个宠物组件，宠物。
&gt;&gt; Brian Holt: Sorry, rather,
you have to make a Pet component, Pet.

41
00:03:10.834 --> 00:03:13.330
> > Brian Holt: 在这里我要说动物，
&gt;&gt; Brian Holt: And
inside of here I'm gonna say animal,

42
00:03:15.771 --> 00:03:17.973
>> Brian Holt: ={pet.type}。
&gt;&gt; Brian Holt: ={pet.type}.

43
00:03:21.395 --> 00:03:25.343
>> Brian Holt: 我想说，键={pet.id}。
&gt;&gt; Brian Holt: I'm gonna say,
key={pet.id}.

44
00:03:27.289 --> 00:03:29.655
>> Brian Holt: 名称={pet.name}。
&gt;&gt; Brian Holt: name={pet.name}.

45
00:03:32.103 --> 00:03:36.111
>> Brian Holt: 品种={pet.breeds.primary }。
&gt;&gt; Brian Holt: breed={pet.breeds.primary}.

46
00:03:38.194 --> 00:03:41.396
>> Brian Holt: media={pet.照相}。
&gt;&gt; Brian Holt: media={pet.photos}.

47
00:03:43.510 --> 00:03:48.016
>> Brian Holt: location=，我将使用模板字符串，因此
&gt;&gt; Brian Holt: location=,
I'm gonna use template strings, so

48
00:03:48.016 --> 00:03:50.752
就在那边的后院对吧
the backticks there, right?

49
00:03:52.737 --> 00:03:55.884
> > Brian Holt: 我们会
&gt;&gt; Brian Holt: And we're gonna

50
00:03:55.884 --> 00:04:04.427
表示 ${pet.contact.address.city}，
say ${pet.contact.address.city},

51
00:04:04.427 --> 00:04:12.526
$ {pet.contact.address.state }。
${pet.contact.address.state}.

52
00:04:12.526 --> 00:04:16.529
最后，我们需要标识，它将等于 {pet.id}。
And then lastly, we need the ID,
which will be equal to {pet.id}.

53
00:04:18.855 --> 00:04:21.603
> > Brian Holt: 好的，这样就可以了。
&gt;&gt; Brian Holt: Okay, so that'll do that.

54
00:04:21.603 --> 00:04:24.393
再一次，这张地图，所以这个要回来了，
Again, this is a map, so
this is going to return, for

55
00:04:24.393 --> 00:04:28.312
我从 API 中得到的每一个宠物都能提供一个宠物组件
every pet that I get back from the API,
it will give back one Pet component.

56
00:04:28.312 --> 00:04:32.100
如果它找不到任何东西，那么它就会说，没有宠物发现。
And if it can't find anything,
then it'll just say, No Pets Found.

57
00:04:32.100 --> 00:04:34.283
现在，让这件事变得更成熟是件好事，对吧 ?
Now, it would be good to make
this more sophisticated, right?

58
00:04:34.283 --> 00:04:37.942
如果有一个好的装载指示器和类似的东西会更好。
It would be better if this had a nice
loading indicator and things like that.

59
00:04:37.942 --> 00:04:40.603
这不是我们今天要做的事
That's not something we're gonna do today,
but

60
00:04:40.603 --> 00:04:43.783
显然你能做到最好的 UX
there's obviously better UX
that you could do about this.

61
00:04:43.783 --> 00:04:46.211
再次记住我们要把宠物养在这里
So again,
remember we're getting pets here,

62
00:04:46.211 --> 00:04:48.281
这是从父母来的对吧
this is coming from the parent, right?

63
00:04:48.281 --> 00:04:50.497
我们在父母中搜寻宠物
S we search for the pets in the parent,

64
00:04:50.497 --> 00:04:54.042
然后我们把它传给子组件对吧
and then we pass that down into
the child component, right?

65
00:04:54.042 --> 00:04:57.137
这是 React中的关键模式。
This is a key pattern in React.

66
00:04:57.137 --> 00:05:01.235
这是一个关键模式 React ，因为您有从父级流向子代的数据，
It's a key pattern React because you
have data flowing from parent to child,

67
00:05:01.235 --> 00:05:03.898
孩子和孩子的孩子对吧
child to its child and
child to its child, right?

68
00:05:03.898 --> 00:05:06.672
所以，这些数据是向下流动的。
So it's this data that flows down.

69
00:05:06.672 --> 00:05:09.223
但是通知不会流的对吧
But notice it doesn't flow up, right?

70
00:05:09.223 --> 00:05:11.321
这称为单向数据流。
This is called one-way data flow.

71
00:05:11.321 --> 00:05:16.559
这真的很有用，因为如果我有个搜索参数的问题，
This is really, really useful, because
if I have a problem with search params,

72
00:05:16.559 --> 00:05:21.504
我知道问题不是源于它的任何一个儿童组件，对吗 ?
I know that problem is not arising from
any of its child components, right?

73
00:05:21.504 --> 00:05:24.579
所以它不是因结果而产生的，它不是由 Pet产生的，
So it's not arising from Result,
it's not arising from Pet,

74
00:05:24.579 --> 00:05:28.699
因为当父代影响子代时，子代无法影响其父代。
because while the parent can affect the
child, the child cannot affect its parent.

75
00:05:28.699 --> 00:05:30.415
它甚至不知道自己的父母是谁
It doesn't even know who its parent is.

76
00:05:33.016 --> 00:05:35.562
>> Brian Holt: 再次，这种感觉限制了一些时尚，但
&gt;&gt; Brian Holt: Again,
this feels limiting in some fashions, but

77
00:05:35.562 --> 00:05:38.298
最终实际上是非常有用的。
in the end it actually ends
up being extremely useful.

78
00:05:38.298 --> 00:05:40.692
因为如果我有虫子我知道从何开始
Because if I have any bugs,
I know where to start.

79
00:05:40.692 --> 00:05:42.550
这很有帮助
And that's super helpful.

80
00:05:45.711 --> 00:05:49.846
>> Brian Holt: 现在我说它只流一个，只能
&gt;&gt; Brian Holt: Now I say that it only
flows one way and it can only possibly

81
00:05:49.846 --> 00:05:54.947
以某种方式流，实际上有一些方法可以逆转这一流程。
flow for some way, there actually
are some ways to reverse that flow.

82
00:05:54.947 --> 00:05:59.781
而且是故意的，因为大多数时候你不应该
And it's intentionally difficult, because
most of the time you should not and

83
00:05:59.781 --> 00:06:00.730
不需要。
do not need to.

84
00:06:00.730 --> 00:06:04.377
它真的只对图书馆的作者有用，对吧 ?
It's actually really only useful for
library authors, right?

85
00:06:04.377 --> 00:06:07.471
像雷法路由器之类的人
So someone like React Router or
something like.

86
00:06:07.471 --> 00:06:10.906
最重要的是，这不是你应该采用的模式。
For the most part, that's not
a pattern that you should be adopting.

87
00:06:12.146 --> 00:06:16.028
>> Brian Holt: 但在中间 React 中，我将向您展示。
&gt;&gt; Brian Holt: But in intermediate React,
I'll show you how.

88
00:06:16.028 --> 00:06:22.151
最后，请确保您完成，导出缺省结果。
Last thing down here, make sure you do,
export default Results.

89
00:06:22.151 --> 00:06:23.928
省省吧
Save that.

90
00:06:27.437 --> 00:06:29.600
> > Brian Holt: 然后你就可以回来了。
&gt;&gt; Brian Holt: And then you should
be able to come back over here.

91
00:06:29.600 --> 00:06:31.021
你可能有某种错误
You might have some sort of error,

92
00:06:31.021 --> 00:06:33.576
只要刷新页面可能就会消失在包裹里
just refresh the page,
it probably will go away from Parcel.

93
00:06:35.127 --> 00:06:37.028
> > Brian Holt: 好的，我要点击 " Submit" 。
&gt;&gt; Brian Holt: Okay, so,
I'm just gonna hit Submit.

94
00:06:37.028 --> 00:06:42.377
你可以在这里看到，现在我从 API那里得到了真实的结果。
And you can see here, now I'm getting
real results back from the API.

95
00:06:42.377 --> 00:06:45.920
所以我们有胖子 Slim 和 Cindy 和霍莉
So we have Fatboy Slim and
Cindy and Holly.

96
00:06:48.733 --> 00:06:50.180
> > Brian Holt: 看来这些大多是狗。
&gt;&gt; Brian Holt: And
looks like these are mostly dogs.

97
00:06:53.269 --> 00:06:55.661
> > Brian Holt: 但你也应该能找到猫。
&gt;&gt; Brian Holt: But
you should be able to find cats as well.

98
00:06:55.661 --> 00:06:57.543
那是只搜寻狗的线索
That's cuz it is only searching for dogs.

99
00:06:57.543 --> 00:06:58.822
所以它在做它的工作。
So it's doing its job.

100
00:07:00.382 --> 00:07:02.168
> > 布莱恩 - 霍尔特: 但我们可以切换到猫身上，对吗 ?
&gt;&gt; Brian Holt: But
we're able there to switch to cats, right?

101
00:07:02.168 --> 00:07:03.834
现在这些也是猫的领养方式。
And now these are cats to adopt as well.
