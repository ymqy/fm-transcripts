WEBVTT

1
00:00:00.040 --> 00:00:03.944
> > 布莱恩 - 霍尔特: 所以我再给你看一个有误差的地方
&gt;&gt; Brian Holt: So I'm gonna show you one
more thing here with error boundaries,

2
00:00:03.944 --> 00:00:06.578
这样我就能给你展示组件更新
just so I can show you componentDidUpdate.

3
00:00:06.578 --> 00:00:10.695
你知道的你完全可以这样做
Now, just so you know, you could
totally instead of do this with just

4
00:00:10.695 --> 00:00:13.973
componentDidCatch 不使用 componentDidUpdate。
componentDidCatch and
not use componentDidUpdate.

5
00:00:13.973 --> 00:00:16.254
但我想展示如何使用 componentDidUpdate。
But I just wanna show you how
to use componentDidUpdate.

6
00:00:17.449 --> 00:00:20.846
所以在 componentDidCatch 下面，输入 componentDidUpdate，
So under componentDidCatch here,
put componentDidUpdate,

7
00:00:20.846 --> 00:00:25.170
所以你可以看到这里有几种生命周期的方法
so you can see here there's actually
quite a few lifecycle methods.

8
00:00:25.170 --> 00:00:27.843
如果您有兴趣了解有关生命周期方法的更多信息，
If you're interested in learning
more about lifecycle methods,

9
00:00:27.843 --> 00:00:30.527
你可以查看这个课程的较旧版本，对吧 ?
you can actually check out older
versions of this course, right?

10
00:00:30.527 --> 00:00:35.417
所以我深入的，但通常是 componentDidMount 是你可以用的
So I go over them in depth but normally
componentDidMount is one that you can use

11
00:00:35.417 --> 00:00:39.362
要把事情安排好，跟其他图书馆整合一下。
quite a bit to set things up,
integrate with other libraries.

12
00:00:39.362 --> 00:00:42.030
这是你第一次开始的时候
It's what you run when you first start.

13
00:00:42.030 --> 00:00:45.049
componentDidUpdate，您仍在使用，但不一定如此。
componentDidUpdate, you still use but
not necessarily as much.

14
00:00:45.049 --> 00:00:49.189
这将会对一些更新做出反应，我将在这里展示第二个信息。
This will be reacting to kind of updates,
which I'll show you here in just a second.

15
00:00:49.189 --> 00:00:52.137
componentWillUnmount，如果您执行 setInterval 或
componentWillUnmount, if
you do a setInterval or

16
00:00:52.137 --> 00:00:54.055
如果你要清理任何东西
if you have to clean up anything,

17
00:00:54.055 --> 00:00:58.386
这将允许您在组件离开 DOM 之前清除内容。
this will allow you to clean up things
before the component leaves the DOM.

18
00:00:58.386 --> 00:01:00.390
然后还有几个这些
And then there's a couple
of these as well,

19
00:01:02.383 --> 00:01:03.671
>> Brian Holt: 与组件相似
&gt;&gt; Brian Holt: Like component will

20
00:01:03.671 --> 00:01:07.927
接收道具，就像我要接收全新的道具。
receive props, it's like I'm
about to receive brand new props.

21
00:01:07.927 --> 00:01:13.016
然后还有其他的那些不安全的
And then there's some other ones
in here as well, the unsafe ones,

22
00:01:13.016 --> 00:01:17.230
那些不允许你使用的东西好吗
which react.stricts will
not allow you to use, okay?

23
00:01:17.230 --> 00:01:20.388
还记得我们在整个申请中都放了反反剂
And remember we put react.stricts
around our entire application,

24
00:01:20.388 --> 00:01:23.987
它会警告你，所以 >> Brian Holt: 好的，所以
it'll warn you about that, so
&gt;&gt; Brian Holt: Okay, so

25
00:01:23.987 --> 00:01:27.588
我们现在要做的就是要做 componentWillUpdate
what we're gonna do now is we're
gonna do componentWillUpdate.

26
00:01:32.131 --> 00:01:36.081
> > Brian Holt: 接下来我们要做的就是每一个
&gt;&gt; Brian Holt: And what we're gonna do
here is this is gonna get run every single

27
00:01:36.081 --> 00:01:38.579
获取新状态或新道具的时间。
time that it gets new state or new props.

28
00:01:40.000 --> 00:01:44.960
所以在这件案子里我想说如果是 state.hasError ，那么
So in this case,
I'm gonna say if this.state.hasError, so

29
00:01:44.960 --> 00:01:49.078
如果有什么东西更新了这件事就会出错
if something updates this and
now this has an error,

30
00:01:49.078 --> 00:01:53.020
我想让你做 setTimeOut
what I want you to do is I
want you to do setTimeOut.

31
00:01:53.020 --> 00:01:57.128
然后给它一个箭头函数
And give it an arrow function and

32
00:01:57.128 --> 00:02:06.653
say this.setState 重定向， >> Brian Holt: true，
say this.setState redirect,
&gt;&gt; Brian Holt: true,

33
00:02:06.653 --> 00:02:11.694
然后等待 5000 毫秒。
and then wait for 5000 milliseconds.

34
00:02:20.992 --> 00:02:26.062
>> Brian Holt: 因此， >> Brian Holt: 此处的 setTimeout ，
&gt;&gt; Brian Holt: So,
&gt;&gt; Brian Holt: The setTimeout here,

35
00:02:26.062 --> 00:02:31.033
它将运行此功能 5000 秒或 5，000 秒后
it's going to run this function and
after 5,000 seconds or 5,000

36
00:02:31.033 --> 00:02:36.173
以毫秒计它会设置状态以便重定向将为 true。
milliseconds rather it's gonna setStates
so that redirect is gonna be true.

37
00:02:36.173 --> 00:02:39.800
所以我们先到这里吧
So let's go ahead up here
in the state up here,

38
00:02:39.800 --> 00:02:44.570
将重定向， >> Brian Holt: False 放在第 7 行。
put redirect,
&gt;&gt; Brian Holt: False on line 7 there.

39
00:02:47.264 --> 00:02:48.753
>> Brian Holt: 然后我们想做什么
&gt;&gt; Brian Holt: And then what we wanna do

40
00:02:48.753 --> 00:02:53.591
在这里， >> Brian Holt: 我们想做的第一件事是
here,
&gt;&gt; Brian Holt: Is the first thing we wanna

41
00:02:53.591 --> 00:02:55.324
问，这里的秩序很重要。
ask, and
the order here is quite important.

42
00:02:55.324 --> 00:03:00.292
你得说如果 this.state.redirect ，
You're gonna have to say,
if this.state.redirect,

43
00:03:00.292 --> 00:03:04.852
我们要做的就是要回去
then what we're gonna do
is we're going to return,

44
00:03:08.025 --> 00:03:11.733
>> Brian Holt: 重定向组件，
&gt;&gt; Brian Holt: A redirect component which

45
00:03:11.733 --> 00:03:15.441
来自 reachRouter 和
comes from reachRouter and

46
00:03:15.441 --> 00:03:19.637
我们会把重定向到/
we're gonna say redirect to/

47
00:03:26.129 --> 00:03:27.271
>> Brian Holt: 如你想象的那样
&gt;&gt; Brian Holt: As you might imagine,

48
00:03:27.271 --> 00:03:28.954
每当您呈现重定向时
whenever you render a redirect,

49
00:03:28.954 --> 00:03:32.360
只是把路由器重定向到别的地方吧
it just redirects the router
to be somewhere else, right?

50
00:03:32.360 --> 00:03:33.789
您也可以以编程方式执行此操作。
You can also do this programmatically.

51
00:03:33.789 --> 00:03:39.207
我完全可以说，你不用复制这个，我觉得它是在航行中。
I could have totally said, and you don't
have to copy this, I think it's navigate.

52
00:03:42.256 --> 00:03:45.719
>> Brian Holt: 就像这样，这也会起作用。
&gt;&gt; Brian Holt: Like that, and
this would have worked as well.

53
00:03:45.719 --> 00:03:48.127
导航也来自达能路由器
And navigate comes from
reachRouter as well, but

54
00:03:48.127 --> 00:03:50.256
我想向你们展示这两种方法。
I wanted to show you
both ways of doing that.

55
00:03:54.509 --> 00:03:56.413
>> Brian Holt: 您不需要 componentWillUpdate，
&gt;&gt; Brian Holt: You don't
want componentWillUpdate,

56
00:03:56.413 --> 00:03:57.929
您需要 componentDidUpdate。
you want componentDidUpdate.

57
00:04:00.223 --> 00:04:03.433
>> Brian Holt: 这两个操作都将工作，但我们要执行 componentDidUpdate。
&gt;&gt; Brian Holt: Both of these will work but
let's do componentDidUpdate.

58
00:04:08.356 --> 00:04:10.860
>> Brian Holt: 好的，然后再做一个人为错误。
&gt;&gt; Brian Holt: Okay, and then let's
go make an artificial error again.

59
00:04:10.860 --> 00:04:12.568
就在这里而不是 componenttDidMount
So just here instead
of componenttDidMount,

60
00:04:12.568 --> 00:04:13.626
我们会说新错误
we'll say throw new Error.

61
00:04:19.348 --> 00:04:21.324
> > Brian Holt: 好的，现在 5 秒后，
&gt;&gt; Brian Holt: Okay, and
now after 5 seconds,

62
00:04:21.324 --> 00:04:24.721
它应该重定向回主页，它会这样做。
it should redirect back to the home page,
which it does.
