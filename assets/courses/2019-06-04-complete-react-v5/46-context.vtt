WEBVTT

1
00:00:00.040 --> 00:00:02.830
> > 布莱恩 - 霍尔特: 还有一件事，现在我们有照片，
&gt;&gt; Brian Holt: So one more thing,
now we have photos,

2
00:00:02.830 --> 00:00:06.040
我们知道的是一系列的照片串行吗
which we know is going to be
an array of photo strings, okay?

3
00:00:06.040 --> 00:00:09.410
现在，我们只需执行此 handleIndexClick 函数。
Now we just have to make this
handleIndexClick function.

4
00:00:14.042 --> 00:00:16.003
> > Brian Holt: 那么，让我们先这样做吧，
&gt;&gt; Brian Holt: So, let's go ahead and
do it this way first,

5
00:00:16.003 --> 00:00:19.423
我们先把它建错了然后我们再教你怎么做
we're gonna build it wrong first and
then we'll show you how to make it right.

6
00:00:21.859 --> 00:00:23.204
>> Brian Holt: 好， handleIndexClick，
&gt;&gt; Brian Holt: Okay, handleIndexClick,

7
00:00:23.204 --> 00:00:25.678
这件事将会发生在某种形式上
this is gonna take in an event
of some sort like this.

8
00:00:27.702 --> 00:00:33.584
>> Brian Holt: 在此处，我们只想调用 this.setstate ，并激活
&gt;&gt; Brian Holt: And here we just wanna
call this.setstate, with active

9
00:00:33.584 --> 00:00:41.938
成为 event.target.dataset.index >> Brian Holt: 因此
being the event.target.dataset.index
&gt;&gt; Brian Holt: So

10
00:00:41.938 --> 00:00:45.229
这件事有两个问题让我们来谈谈
there's two things wrong with this,
let's talk about both of them.

11
00:00:45.229 --> 00:00:48.799
第一个，如果你之前从未见过数据集，
The first one,
if you've never seen dataset before,

12
00:00:48.799 --> 00:00:51.460
这不是一个反应 API ，这是一个愚蠢的 API，对吧 ?
this is not a react API,
this is a dumb API, right?

13
00:00:51.460 --> 00:00:54.850
数据集允许您获取数据中的两个内容，
And dataset allows you to get
two things that are on the data,

14
00:00:54.850 --> 00:00:59.969
在每个音符标记上，对吗 ?
on the each note tag, right?

15
00:00:59.969 --> 00:01:03.658
所以我就有了这个图像标签，我有这个数据索引。
So I had this image tag here right,
and I had this data index.

16
00:01:03.658 --> 00:01:08.147
这就是我们所说的数据集，让我们关闭你。
So this dataset that we're referring to,
let's close you.

17
00:01:08.147 --> 00:01:12.212
好了好了
[BLANK AUDIO] There we go.

18
00:01:12.212 --> 00:01:16.554
所以数据集索引，就会引用此处的任何内容，对吧 ?
So dataset index, that's going to
refer to whatever is here, right?

19
00:01:16.554 --> 00:01:20.239
那里会有 0， 1， 2， 3 和 4 。
So it'll have zero, one, two,
three and four in there.

20
00:01:20.239 --> 00:01:20.890
有道理吗
That make sense?

21
00:01:22.219 --> 00:01:26.076
但我们要牢记的是积极的需要是一个数字因为我们
But the thing to keep in mind here is
active needs to be a number because we're

22
00:01:26.076 --> 00:01:27.960
在这里做个数字对吧
using as a number down here, right?

23
00:01:27.960 --> 00:01:32.325
任何来自蠢蛋的反应都是一串字符串
Anything that comes react from the dumb
is always gonna be a string, so

24
00:01:32.325 --> 00:01:37.460
我们得把这个转换成一个数字我们得把这个变成一个数字
we need to convert this into a number,
we need to coerce this into a number.

25
00:01:37.460 --> 00:01:38.759
有几种方法可以做到这一点。
There's a number of ways of doing this.

26
00:01:38.759 --> 00:01:44.069
你可以做 parseInt 之类的，也可以说 " Plus" 。
You could do parseInt or something
like that, or you can just say Plus.

27
00:01:44.069 --> 00:01:46.715
如果你把那个叫一元加的东西放在那儿
If you put what's call
the unary plus right there,

28
00:01:46.715 --> 00:01:48.383
把它变成一个数字
that will turn it into a number.

29
00:01:51.252 --> 00:01:52.460
>> Brian Holt: 好吗 ?
&gt;&gt; Brian Holt: Okay?

30
00:01:52.460 --> 00:01:54.188
所以这个问题号就解决了。
So that's problem number one solved.

31
00:01:54.188 --> 00:01:59.724
我说过这个，对不起，在那里，那是第三个问题。
And I said this, sorry, this.setState
right there, that's a third problem.

32
00:01:59.724 --> 00:02:04.099
[ LAUGH] This.setState。
[LAUGH] This.setState.

33
00:02:04.099 --> 00:02:09.419
我们在这里的另一个问题是什么呢 ?
The other problem that we
have here is what is this?

34
00:02:12.319 --> 00:02:15.271
所以如果我在这里叫它作为一个活动的听众
So, if I'm calling it as
an event listener down here,

35
00:02:15.271 --> 00:02:17.400
你觉得这会是什么
what do you think this is gonna be here?

36
00:02:18.860 --> 00:02:19.360
>> 演讲者 2: 下载?
&gt;&gt; Speaker 2: Download?

37
00:02:21.120 --> 00:02:21.960
> > Brian Holt: 我认为没什么。
&gt;&gt; Brian Holt: I think it's nothing.

38
00:02:21.960 --> 00:02:23.069
我觉得是没有定义的
I think it's undefined.

39
00:02:24.289 --> 00:02:26.015
你在正确的轨道上是不正确的对吧
You're on the right track
that it's not correct, right?

40
00:02:28.134 --> 00:02:29.780
>> Brian Holt: 我们需要它作为组件，对吗 ?
&gt;&gt; Brian Holt: We need it
to be the component, right?

41
00:02:29.780 --> 00:02:33.420
我们需要做轮播组件因为我们想叫一个 setState on
We need it be the carousel component
because we wanna call a setState on

42
00:02:33.420 --> 00:02:40.000
这不是窗户或者我觉得它是未定义的
the carousel component, and this is
either Window or I think it's undefined.

43
00:02:40.000 --> 00:02:42.710
我认为反应是没有定义的。
I think react makes it undefined.

44
00:02:42.710 --> 00:02:45.569
不管你想做什么都不是你想要的
Regardless, it's not
what you want it to be.

45
00:02:45.569 --> 00:02:50.328
那么，我要怎么做呢 ?
So how would I make this correct?

46
00:02:50.328 --> 00:02:53.520
这里有两种方法我都给你们看
There's two methodologies here,
I'll show you both of them.

47
00:02:55.170 --> 00:02:59.841
如果我在这里有个施工人员就说我有了道具 ( 道具)
If I had a constructor up here, so
just say I had constructor (props), and

48
00:02:59.841 --> 00:03:05.050
你不用复印这个，我就给你看这个，超级(道具)。
you don't have to copy this one, I'm
just showing you this one, super(props).

49
00:03:05.050 --> 00:03:07.879
如果你没有公共课你可以在这里做什么
What you could do here if
you don't have public class

50
00:03:07.879 --> 00:03:10.979
在您的项目中启用了许多您将不会使用的属性。
properties enabled in your project
which many of you will not.

51
00:03:10.979 --> 00:03:12.405
你可以进来然后
You can come in here and put,

52
00:03:12.405 --> 00:03:18.530
this.handleIndexClick=this.handleIndexCli- ckbind(此)。
this.handleIndexClick=this.handleIndexCli-
ck.bind(this).

53
00:03:18.530 --> 00:03:20.199
这看起来太荒谬了吧
This looks ridiculous, right?

54
00:03:21.420 --> 00:03:23.120
但这到底是干什么的，对吗 ?
But what is this actually doing, right?

55
00:03:23.120 --> 00:03:27.180
它将 handleIndexClick 的上下文绑定为 Carousel，
It's binding the context of
handleIndexClick to be Carousel,

56
00:03:27.180 --> 00:03:30.420
因为我们知道这在建造者里会有什么保证
because we know what this is inside
the constructor would guarantee it's gonna

57
00:03:30.420 --> 00:03:32.129
是正确的环境，对吧 ?
be the correct context, right?

58
00:03:32.129 --> 00:03:35.240
因此，这意味着可以调用 handleIndexClick ，并且
So this means that handleIndexClick
can then be called, and

59
00:03:35.240 --> 00:03:39.009
这个永远是对的，对，所以这个工作。
this will always be correct,
right, so this works.

60
00:03:40.430 --> 00:03:42.203
虽然这样做有更容易的方法
There's an even easier way to do this,
though,

61
00:03:42.203 --> 00:03:43.949
如果您有这样的公共类属性。
if you have public class
properties like this.

62
00:03:47.206 --> 00:03:51.860
>> Brian Holt: 我可以转至- >> Brian Holt: 一个箭头函数。
&gt;&gt; Brian Holt: I can just turn this into-
&gt;&gt; Brian Holt: An arrow function.

63
00:03:54.944 --> 00:03:56.620
> > Brian Holt: 现在又正确了，对吧 ?
&gt;&gt; Brian Holt: Now it's correct again,
right?

64
00:03:56.620 --> 00:04:00.594
因为我们谈到了箭的功能，对，他们是不创造新的背景的，
Because we talked about arrow functions,
right, they don't create new context when

65
00:04:00.594 --> 00:04:03.318
他们被引到了这意味着它在词法上
they're invoked,
which means that it gets it lexically,

66
00:04:03.318 --> 00:04:07.032
这在技术上并不正确，但实际上是正确的，对吧 ?
which is not actually technically correct
but effectively is correct, right?

67
00:04:07.032 --> 00:04:10.437
所以你写的时候就决定了，对，所以
So this is determined when you write it,
right, so

68
00:04:10.437 --> 00:04:13.740
这一切就会发生在任何地方
this is going to be
wherever it was written.

69
00:04:13.740 --> 00:04:16.810
但如果我在这里称为这样的功能，对吗 ?
Whereas if I you call a function
like this function here, right?

70
00:04:16.810 --> 00:04:20.978
这将会是它是否被调用现在意识到这可能不是一种
It's going to be whether it's invoked,
now recognize it's probably not a kind of

71
00:04:20.978 --> 00:04:24.846
有一个奇怪的区分，但就足以说，这将是正确的
an odd distinction to make but suffice
to say, this will have the correct this

72
00:04:24.846 --> 00:04:28.084
因为此事件侦听器不会创建新的上下文。
because this event listener's
not gonna create a new context.

73
00:04:30.411 --> 00:04:34.600
> > 布莱恩 - 霍尔特: 所以我要给你一个大拇指规则
&gt;&gt; Brian Holt: So I'm gonna give you
just kind of a rule of thumb here.

74
00:04:34.600 --> 00:04:37.709
只要你把职能转移到孩子的时候，对吧 ?
Whenever you are passing functions
down into children, right?

75
00:04:37.709 --> 00:04:39.238
或者每当你在做活动听众的时候
Or whenever you're doing event listeners,

76
00:04:39.238 --> 00:04:43.497
使用箭头函数， >> Brian Holt: 因为这将保证
use an arrow function,
&gt;&gt; Brian Holt: Because that will guarantee

77
00:04:43.497 --> 00:04:45.399
这才是正确的
what this is to be is correct.

78
00:04:47.329 --> 00:04:52.134
就像我们 componentDidMount 里的告示
Like notice here in our componentDidMount
in details and this one, notice that

79
00:04:52.134 --> 00:04:57.081
我们不需要为 componentDidMount 的 this.setState 执行任何魔法
we didn't have to do any magic for
this.setState for componentDidMount that's

80
00:04:57.081 --> 00:05:02.752
因为 componentDidMount，我们已经知道它将具有正确的上下文。
because componentDidMount, we already
know it's gonna have the correct context.

81
00:05:02.752 --> 00:05:05.642
与呈现方式相同，呈现始终具有相同的正确上下文。
Same thing with render, render is always
gonna have the same correct context.

82
00:05:05.642 --> 00:05:07.913
所以它真的只是个事件的听众
So it's really just event listeners and

83
00:05:07.913 --> 00:05:10.802
你要传递给孩子们的功能就是这样
functions that you're passing
into children, that's it.
