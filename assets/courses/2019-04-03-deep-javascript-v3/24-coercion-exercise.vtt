WEBVTT

1
00:00:00.500 --> 00:00:04.179
>> 凯尔 - 辛普森: 让我们更深入地看待胁迫
&gt;&gt; Kyle Simpson: Let's take a look
at coercion a bit more deeply with

2
00:00:04.179 --> 00:00:05.339
这次演习
this exercise.

3
00:00:06.820 --> 00:00:11.817
我们已经了解到胁迫是如何运作的
We've learned now a bit
about how coercion works

4
00:00:11.817 --> 00:00:16.158
有不同的运营商，比如运营商和类似的事情。
with different operators, like the less
than operator and things like that.

5
00:00:16.158 --> 00:00:20.769
所以我们想做一些验证功能来确保一些输入
So we wanna do some validation functions
to make sure that some inputs that

6
00:00:20.769 --> 00:00:24.660
即将到来，例如在来自 DOM 输入的 Web 页面上，
are coming, for example on a Web page
that are coming from DOM inputs,

7
00:00:24.660 --> 00:00:29.129
我们要确保用户向我们提供的某些输入有效。
we want to make sure that some inputs
that the user is giving to us are valid.

8
00:00:29.129 --> 00:00:32.670
因此，我们将定义两个不同的验证器函数。
So we're going to define two
different validator functions.

9
00:00:32.670 --> 00:00:35.219
第一个称为 isValidName。
The first one's called isValidName.

10
00:00:35.219 --> 00:00:40.104
它给出了此处的需求，需要获取一个字符串，
And it gives the requirements here,
needs to take a string that is

11
00:00:40.104 --> 00:00:45.090
非空，必须包含非空格的内容，
non-empty, must contain something
that's not white space,

12
00:00:45.090 --> 00:00:48.820
至少要长三个字好吗
and has to be at least three
characters long, okay?

13
00:00:48.820 --> 00:00:52.770
所以如果你通过的是什么，它就必须归还。
So it has to return true if what
you pass in matches that, and

14
00:00:52.770 --> 00:00:54.619
否则返回 false。
otherwise return false.

15
00:00:54.619 --> 00:00:56.509
而这次演习的精神是
And again, the spirit of this exercise is,

16
00:00:56.509 --> 00:01:00.969
利用我们现在学到的手段来妥善处理这个问题
use what we've learned now about
coercion to properly handles this.

17
00:01:00.969 --> 00:01:05.959
所以有各种各样的方法去做，但是试图正确处理这一检查。
So there's a variety of ways to do it,
but try to properly handle that check.

18
00:01:05.959 --> 00:01:10.310
然后你会做一个稍微复杂一些的验证器，叫做 " hoursAttended" 。
Then you're gonna do a slightly more
complex validator called hoursAttended.

19
00:01:10.310 --> 00:01:13.799
它需要两个输入，我们会给他们打电话和长度。
It takes two inputs,
we'll call them attended and length.

20
00:01:14.859 --> 00:01:19.480
它允许其中一个为字符串或数字。
It allows either one of these
to be a string or a number.

21
00:01:19.480 --> 00:01:21.359
所以我们会在这里进行一些胁迫。
So we are gonna allow
a bit of coercion here.

22
00:01:21.359 --> 00:01:23.689
我们不会说它永远是个数字
We're not gonna say it has
to always be a number.

23
00:01:23.689 --> 00:01:26.650
我们将允许字符串和数字，但不允许其他内容。
We'll allow both strings and
numbers, but nothing else.

24
00:01:26.650 --> 00:01:28.650
所以我们得检查清楚
So we need to check to make sure, or

25
00:01:28.650 --> 00:01:31.420
假设这些都是字符串和数字
assume that those are definitely
strings and numbers.

26
00:01:32.420 --> 00:01:36.616
不管他们是否以数字来做，我们会把他们当作数字来对待。
Whether they come in as numbers or not,
we're going to treat them as numbers.

27
00:01:36.616 --> 00:01:39.640
因此，如果你错了，这不是我们抛出的断言。
So this is not a case we throw
an assertion if you pass it wrong.

28
00:01:39.640 --> 00:01:43.487
我们只是说这里的合同是你得把这个当作绳子
We're just gonna say the contract here is,
you've gotta pass this as a string or

29
00:01:43.487 --> 00:01:45.421
数字，然后将其视为数字。
a number, and then treat it as a number.

30
00:01:45.421 --> 00:01:49.301
这些数字必须是 0 或更高，因此没有负数。
Those numbers have to be 0 or
higher, so no negative numbers.

31
00:01:49.301 --> 00:01:51.504
而且，它们必须是整数。
And also, they have to be whole numbers.

32
00:01:51.504 --> 00:01:54.731
我们不想在 3 . 14 之类的地方过去好吗
We don't wanna pass in
something like 3.14, okay?

33
00:01:54.731 --> 00:02:00.198
最后，出席的时间必须小于或等于长度。
And then, finally, attended has to
be less than or equal to length.

34
00:02:01.290 --> 00:02:03.650
这就是你要定义的两个验证器
So those are your two validators
that you're gonna define,

35
00:02:03.650 --> 00:02:09.030
试图实践我们迄今为止在胁迫方面学到的东西
trying to practice what we've learned so
far about coercion.

36
00:02:09.030 --> 00:02:11.030
我们会花十分钟的时间
We'll take about ten minutes on this.

37
00:02:12.469 --> 00:02:14.629
正如你在练习文件中看到的那样
As you can see in the exercise file,

38
00:02:14.629 --> 00:02:20.139
我们有 console.log 语句，本质上是我们的测试用例。
we have console.log statements which
are our test cases, essentially.

39
00:02:20.139 --> 00:02:23.420
这是穷人的测试方法，如果你愿意的话。
This is the poor man's approach
to testing, if you will.

40
00:02:23.420 --> 00:02:27.699
因此，如果您的功能正确，那么所有这些控制台日志语句都应显示为 true 。
So all these console log statements should
print true if your functions are correct.

41
00:02:27.699 --> 00:02:29.639
定义这两个函数。
Define those two functions.

42
00:02:29.639 --> 00:02:33.215
将此代码放到您喜欢的控制台中，或在节点中运行该代码，
Drop this code into your favorite
console or run it in Node,

43
00:02:33.215 --> 00:02:35.723
你应该把一切都打印好
and you should get it printing all trues.

44
00:02:35.723 --> 00:02:38.987
这次演习约十分钟后我们就会回来
We'll take about ten minutes for this
exercise, and then we'll come back and

45
00:02:38.987 --> 00:02:40.079
谈谈这个解决方案。
talk about the solution.
