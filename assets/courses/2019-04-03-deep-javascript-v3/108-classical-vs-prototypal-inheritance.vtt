WEBVTT

1
00:00:00.090 --> 00:00:04.259
>> 凯尔 - 辛普森: 让我们试着澄清有关遗产的一些想法，好吗 ?
&gt;&gt; Kyle Simpson: Let's try to clarify
some ideas around inheritance, okay?

2
00:00:04.259 --> 00:00:08.257
因为我向你扔了很多东西
Because there is a lot of things
that I've thrown at you and

3
00:00:08.257 --> 00:00:13.199
我只是想尽量把它做个直观的图表
I just wanna make as clear sort
of a visual diagram as I can.

4
00:00:13.199 --> 00:00:19.850
在古典式的语言 C++， Java，之类的。
In classical oriented Languages C++,
Java, stuff like that.

5
00:00:19.850 --> 00:00:24.539
当您创建类呼叫研讨会并将其实例化时，您在概念上
When you make a class call workshop and
you instantiate it, you are conceptually

6
00:00:24.539 --> 00:00:28.539
在某些情况下，实际将其复制到这些实例中。
and in some cases, physically
copying down into those instances.

7
00:00:28.539 --> 00:00:33.049
当你把一个儿童课称为另一个工作坊的时候
And when you make a child class call
another workshop that extends workshop,

8
00:00:33.049 --> 00:00:34.960
你要把它复制到那个
you are copying down into that.

9
00:00:34.960 --> 00:00:38.259
当您将该子类实例化时。
And when you instantiate that child class.

10
00:00:38.259 --> 00:00:39.429
你在做更多的拷贝
You're doing more copies.

11
00:00:40.429 --> 00:00:43.590
换句话说这些箭头从左到右从左到右
So in other words these arrows are going
from left to right, top to bottom,

12
00:00:43.590 --> 00:00:45.909
因为它们本质上是复制操作
because they are fundamentally
copy operations.

13
00:00:47.600 --> 00:00:55.659
当您尝试进行原型继承时，您有一个 workshop.prototype 对象。
When you try to do prototypal inheritance,
you have a workshop.prototype object.

14
00:00:55.659 --> 00:00:59.259
然后再让另一个对象如 deepJS 或
And then you make another
object like deepJS or

15
00:00:59.259 --> 00:01:04.260
reattJS，这些对象链接到 Workshop.prototype。
reactJS, those objects are linked
to Workshop.prototype.

16
00:01:04.260 --> 00:01:08.289
然后，当您创建另一个workshop.原型时，它是链接到的。
And then when you make another
workshop.prototype it is linked to.

17
00:01:08.289 --> 00:01:11.710
然后，当您制作 JSRecentParts 时，它也会链接。
And then when you make
JSRecentParts it is linked too.

18
00:01:11.710 --> 00:01:15.109
这里，箭头从右到左，从底部到顶部。
So here, the arrows go from right to left,
and bottom to top.

19
00:01:16.299 --> 00:01:19.079
因为这是一个链接，不是一个副本。
Because this is a linkage, not a copy.

20
00:01:20.460 --> 00:01:20.960
跟我来
Follow me.

21
00:01:23.980 --> 00:01:28.364
>> 凯尔 - 辛普森: 这通常被称为原型继承。
&gt;&gt; Kyle Simpson: This is often to
referred to as prototypal inheritance.

22
00:01:30.615 --> 00:01:31.710
>> 凯尔 - 辛普森: 我有很深的，
&gt;&gt; Kyle Simpson: I have a deep,

23
00:01:31.710 --> 00:01:38.240
对调用此原型继承的想法的问题。
troubling issue with the idea of
calling this prototypal inheritance.

24
00:01:38.240 --> 00:01:39.549
这就是我的问题
And here is what my issue is.

25
00:01:40.620 --> 00:01:46.079
" 原型 " 一词甚至不代表任何必须的人。
The word prototypal doesn't even really
mean anything concrete to must people.

26
00:01:46.079 --> 00:01:47.629
没人知道这意味着什么
Nobody even really knows what that means.

27
00:01:47.629 --> 00:01:50.490
他们只是把它和这个奇怪的系统联系起来。
They just associate it
with this strange system.

28
00:01:50.490 --> 00:01:55.849
但遗产继承的意义非常大，它承载着大量的行李。
But the word inheritance has a very strong
meaning, it carries lots of baggage.

29
00:01:55.849 --> 00:01:59.759
大多数人的大脑都被编程来思考遗传
And most people's brains have been
programmed to think about inheritance,

30
00:01:59.759 --> 00:02:02.359
就像复制关系一样
as having copy relationships.

31
00:02:02.359 --> 00:02:05.129
我们做的就是把这个混淆不清的
So what we did was we took
this confusing-sounding

32
00:02:05.129 --> 00:02:09.000
像原型一样把它贴在另一个词的前面
fancy word like prototypal,
stuck it in front of another word.

33
00:02:09.000 --> 00:02:14.379
然后我们假装没事，完全改变它的意义。
And then we pretended as if that's okay,
to completely reverse the meaning of it.

34
00:02:16.400 --> 00:02:19.969
就像我站在你面前一边有一个苹果
It's as if I stood up in front of you and
I had an apple in one hand, and

35
00:02:19.969 --> 00:02:21.310
另一个是橘子
an orange in the other.

36
00:02:21.310 --> 00:02:23.449
然后我说，不，不，那不是一个苹果。
And then I said, no, no,
no that's not an apple.

37
00:02:23.449 --> 00:02:24.709
这只是个红橙
That's just a red orange.

38
00:02:27.756 --> 00:02:29.776
>> 凯尔 - 辛普森: 你会看着我，
&gt;&gt; Kyle Simpson: You'd look at me like,

39
00:02:29.776 --> 00:02:33.550
你称它不改变它是什么
what you call it doesn't
change what it is.

40
00:02:33.550 --> 00:02:35.840
是个苹果对吧
It's an apple, right?

41
00:02:35.840 --> 00:02:38.939
你管这叫什么都不改
What you call this doesn't
change what it is.

42
00:02:38.939 --> 00:02:40.810
它只会造成更多的混乱。
It only creates more confusion.

43
00:02:42.110 --> 00:02:45.659
20 多年的 JavaScript 开发人员感到困惑
For 20 plus years JavaScript
developers have been confused

44
00:02:45.659 --> 00:02:49.069
在 JavaScript 工作中不进行分类。
by why don't classes in JavaScript work.

45
00:02:49.069 --> 00:02:52.302
他们用其他语言做的，没有人有胆量
The way they do in other languages, and
nobody seems to have had the courage

46
00:02:52.302 --> 00:02:55.968
告诉他们，那是因为系统完全是完全不同的。
to tell them, it's because the systems
are completely fundamentally different.

47
00:02:58.423 --> 00:03:03.381
>> 凯尔 - 辛普森: 在某种意义上，我们一直在迎合情感上的情感
&gt;&gt; Kyle Simpson: We've been, in a sense,
pandering to the emotional attachment

48
00:03:03.381 --> 00:03:08.247
到类设计模式，并在其顶部添加额外的复杂性
to the class design pattern and
adding extra complexity on top of

49
00:03:08.247 --> 00:03:12.230
针对语法制糖设计师的 JavaScript 。
JavaScript to suit
the syntactic sugar designers.

50
00:03:12.230 --> 00:03:17.110
不只是拥抱已经存在的 JavaScript 。
Instead of just embracing
what JavaScript already is.

51
00:03:17.110 --> 00:03:22.400
拥抱它的原型系统，拥抱这一动态。
Embracing its prototype system,
embracing the dynamic this nature.

52
00:03:22.400 --> 00:03:25.840
我们一直试图把所有这些东西放在它上
We keep trying to put all these other
things on it so that it can be a class

53
00:03:25.840 --> 00:03:30.670
系统， dang ，肯定是班，实际上不是上课。
system, dang it, it's definitely classes,
and in reality it's not classes.

54
00:03:31.840 --> 00:03:33.930
我们只是想做个更好的
It's just we're trying to do a better and

55
00:03:33.930 --> 00:03:36.949
更能把它打成像上课的样子
better job of duct taping
it to look like classes.
