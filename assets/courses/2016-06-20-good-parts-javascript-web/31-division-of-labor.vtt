WEBVTT

1
00:00:00.000 --> 00:00:03.806
[音乐]
[MUSIC]

2
00:00:03.806 --> 00:00:04.341
&gt；&gt；Douglas Crockford：最后，
&gt;&gt; Douglas Crockford: Finally,

3
00:00:04.341 --> 00:00:09.000
关于生活在浏览器中的另一件事是分工的问题。
one more thing about living in the browser is a problem of division in labor.

4
00:00:09.000 --> 00:00:12.730
因为我们现在正在做客户端服务器编程，对于一些工作的人来说
Cuz we're now doing client server programming, and for some people working

5
00:00:12.730 --> 00:00:16.408
在浏览器中，这是第一次进行客户端服务器编程。
in the browser this is the first time to be doing client server programming.

6
00:00:17.780 --> 00:00:21.390
这意味着您正在编写分布式应用程序，其中一半的应用程序
And that means you're writing distributed application where half of the application

7
00:00:21.390 --> 00:00:25.769
在一台机器上运行，而一半的应用程序在另一台机器上运行。
is running in one machine and half of the applications running in another machine.

8
00:00:25.769 --> 00:00:31.309
你如何分配工作，如何决定什么进入哪台机器？
How do you divide the work, how you decide what goes in which machine?

9
00:00:31.309 --> 00:00:35.049
我看到人们在每一个可能的维度上都会犯错误。
And I've seen people make mistakes in every possible dimension.

10
00:00:35.049 --> 00:00:40.829
例如，在Web的早期，所有东西都在服务器中。
For example, early on in the web everything was in the server.

11
00:00:40.829 --> 00:00:48.021
浏览器被视为终端，特别是IBM3270终端。
The browser was treated as a terminal, specifically as an IBM 3270 terminal.

12
00:00:48.021 --> 00:00:50.549
您将向服务器发送信息，并且
And you would send information to the server, and

13
00:00:50.549 --> 00:00:52.549
服务器将生成新视图并将其发送出去。
the server would generate a new view and send it out.

14
00:00:52.549 --> 00:00:55.869
这是非常低效的，而且
And that was hugely inefficient, and

15
00:00:55.869 --> 00:01:00.060
正是由于认识到了这种低效，Ajax才变得如此受欢迎。
it was recognition of that inefficiency which got the Ajax thing so popular.

16
00:01:01.109 --> 00:01:03.939
所以当Ajax开始时，它走了另一条路。
So when Ajax started, it went the other way.

17
00:01:03.939 --> 00:01:08.109
人们开始将整个应用程序放在浏览器中
People started putting the entire application in the browser and

18
00:01:08.109 --> 00:01:10.319
他们将服务器视为文件系统。
they were treating the server as a file system.

19
00:01:10.319 --> 00:01:15.287
我看到人们试图基本上在浏览器中复制他们的数据库。
And I saw people trying to basically replicate their database in the browser.

20
00:01:15.287 --> 00:01:18.349
他们会说拿走我们所有的东西，因为谁知道我们是否需要它，而且
They'd say take everything we got cuz who knows if we need it or not, and

21
00:01:18.349 --> 00:01:19.748
他们会把所有东西都送过来。
they'd send everything over.

22
00:01:19.748 --> 00:01:24.849
然后他们会抱怨，为什么要花这么长时间来发送所有的数据？
And then they'd complain well, why does it takes so long to send all that data?

23
00:01:24.849 --> 00:01:26.969
事实证明，这也不是一个好的做法。
That turns out not to be a good way to do it either.

24
00:01:28.310 --> 00:01:30.140
那么正确的方法是什么？
So what's the right way?

25
00:01:30.140 --> 00:01:32.000
这是为了寻求中庸之道。
It's to seek the middle way.

26
00:01:32.000 --> 00:01:36.379
您希望在专业对等体之间创建愉快的对话，
That you want to create a pleasant dialog between specialized peers,

27
00:01:36.379 --> 00:01:38.460
你想最大限度地减少流量，
you want to minimize the volume of traffic,

28
00:01:38.460 --> 00:01:41.750
你想要在及时的基础上发送东西。
you want to be sending stuff on a just in time basis.

29
00:01:41.750 --> 00:01:44.620
您不需要向浏览器发送它可能需要知道的所有内容，
You don't need to send the browser everything it might ever need to know,

30
00:01:44.620 --> 00:01:47.909
你只需要发送它下一步需要的东西。
you just need to send it what it needs next.

31
00:01:47.909 --> 00:01:50.870
这通常是一组小得多的数据，一些你可以发送的东西，
And that's usually a much smaller set of data, something you can send very,

32
00:01:50.870 --> 00:01:53.310
速度非常快，特别是我们的网络已经变得如此
very quickly, particularly as our networks have gotten so

33
00:01:53.310 --> 00:01:56.789
表演者。&gt；&gt；Douglas Crockford：和
performant. &gt;&gt; Douglas Crockford: And

34
00:01:56.789 --> 00:01:59.810
这就是浏览器的结束。
that's the end of the browser.

35
00:01:59.810 --> 00:02:00.640
有什么问题吗？
Any questions about that?

36
00:02:03.049 --> 00:02:04.469
是啊。&gt；&gt；演讲者2：我只是好奇你的
Yeah. &gt;&gt; Speaker 2: I'm just curious what your

37
00:02:04.469 --> 00:02:10.030
思想是，一种虚拟DOM方法，像Diffing，和
thoughts are, kind of the virtual DOM approach, like diffing, and

38
00:02:10.030 --> 00:02:15.009
我不知道你有没有什么意见，或者。&gt；&gt；Douglas Crockford：是的，
I don't know if you have any opinions, or. &gt;&gt; Douglas Crockford: Yeah,

39
00:02:15.009 --> 00:02:18.418
我有意见，我不知道他们是不是有用的意见。
I got opinions, I don't know if they're useful opinions.

40
00:02:18.418 --> 00:02:21.500
所以一般来说，DOM是一个可怕的模型。
So generally the DOM is a horrible model.

41
00:02:22.900 --> 00:02:25.930
并将这种可怕的东西传播到网络的另一边，
And propagating that horribleness onto the other side of the network,

42
00:02:27.599 --> 00:02:31.539
我认为这只会让你在那个糟糕的模式中停留更长时间。
I think just keeps you stuck in that awful model for longer.

43
00:02:31.539 --> 00:02:34.395
我希望有一天我们能找到把自己从DOM中解放出来的方法，
I'm hoping someday we figure out a way to liberate ourselves from the DOM,

44
00:02:34.395 --> 00:02:36.650
因为它真的很可怕。
cuz it really is dreadful.

45
00:02:36.650 --> 00:02:39.469
关于图书馆，让我感到鼓舞的是
And the thing that's encouraging to me about the library is

46
00:02:39.469 --> 00:02:42.069
他们提供了一种方法来做到这一点。
that they provide a way of doing that.

47
00:02:42.069 --> 00:02:47.780
例如，jQuery作为
That, for example, jQuery is so much superior as an API for

48
00:02:47.780 --> 00:02:52.159
将页面上的图形元素寻址到DOM提供的内容。
addressing graphical elements on a page to what the DOM provides.

49
00:02:53.490 --> 00:02:55.560
我希望看到我们在那个维度上变得更好。
I'd like to see us get better in that dimension.

50
00:02:55.560 --> 00:02:57.079
&gt；&gt；Speaker 3：jQuery只是一个包装器吗
&gt;&gt; Speaker 3: Is the jQuery just a wrapper

51
00:02:57.079 --> 00:02:58.379
在DOM周围？
around the DOM?

52
00:02:58.379 --> 00:02:59.379
&gt；&gt；Douglas Crockford：是的。&gt；&gt；扬声器3：好的。
&gt;&gt; Douglas Crockford: It is. &gt;&gt; Speaker 3: Okay.

53
00:02:59.379 --> 00:02:59.990
&gt；&gt；Douglas Crockford：但事实证明你
&gt;&gt; Douglas Crockford: But it turns out you

54
00:02:59.990 --> 00:03:02.969
不需要太多的包装就可以使DOM明显更好。
don't need much wrappage to make the DOM significantly better.

55
00:03:02.969 --> 00:03:07.599
DOM太可怕了，我建议不要使用我展示的任何东西
The DOM is so horrible, I recommend don't use anything that I've showed

56
00:03:07.599 --> 00:03:10.383
你在最后一个小时，什么都不要用。&gt；&gt；扬声器3：不要使用
you in the last hour, don't use anything. &gt;&gt; Speaker 3: Don't use

57
00:03:10.383 --> 00:03:14.460
getElementById，只是使用jQuery？&gt；&gt；Douglas Crockford：找到一些库，
getElementById ever, just use jQuery? &gt;&gt; Douglas Crockford: Find some library,

58
00:03:14.460 --> 00:03:16.650
我并不是一定要推荐jQuery。&gt；&gt；扬声器3：好的。
I'm not recommending jQuery necessarily. &gt;&gt; Speaker 3: Okay.

59
00:03:16.650 --> 00:03:18.439
&gt；&gt；Douglas Crockford：但是有些图书馆，
&gt;&gt; Douglas Crockford: But some library,

60
00:03:18.439 --> 00:03:22.120
每个库都比DOM好，我很高兴这样说。
every library is better than the DOM, I'm happy to say that.

61
00:03:22.120 --> 00:03:25.889
甚至，我也不知道外面最糟糕的图书馆是什么，但不管它是什么，
Even, I don't know what the worst library out there is, but whatever it is,

62
00:03:25.889 --> 00:03:30.103
它不可能有DOM一半的糟糕。&gt；&gt；扬声器3：如何可以，
it can't be half as bad as the DOM is. &gt;&gt; Speaker 3: How can,

63
00:03:30.103 --> 00:03:34.605
如果jQuery只是调用getElementById，如何能够
if jQuery just calls getElementById, how can

64
00:03:34.605 --> 00:03:39.576
使用jQuery CSS比Get更好。&gt；&gt；Douglas Crockford：它是
using a jQuery CSS be better than get on. &gt;&gt; Douglas Crockford: It's

65
00:03:39.576 --> 00:03:42.270
为你隐藏那些东西，它增加了一个抽象的层次。
hiding that stuff for you, it's adding a level of abstraction.

66
00:03:42.270 --> 00:03:43.687
它在方向上增加的足够多，所以
It's adding enough in direction so

67
00:03:43.687 --> 00:03:46.711
您不是从DOM的角度思考，而是更多地在
you're not thinking in terms of what the DOM does, you're thinking more in

68
00:03:46.711 --> 00:03:47.860
你需要做什么的条款。
terms of what you need to do.

69
00:03:49.500 --> 00:03:50.286
&gt；&gt；扬声器3：好的。&gt；&gt；Douglas Crockford：和
&gt;&gt; Speaker 3: Okay. &gt;&gt; Douglas Crockford: And

70
00:03:50.286 --> 00:03:50.974
这是非常有效的。
it's very effective at that.

71
00:03:50.974 --> 00:03:55.000
很多其他的图书馆也是。&gt；&gt；演讲者3：好的，那么，另一个问题。
A lot of other libraries are too. &gt;&gt; Speaker 3: Okay so, other question.

72
00:03:57.699 --> 00:03:59.896
我有点认为DOM就是浏览器。
I kind of thought that the DOM was the browser.

73
00:03:59.896 --> 00:04:01.590
没有DOM浏览器如何工作？
How'd the browser work without a DOM?

74
00:04:01.590 --> 00:04:05.199
因为你说有HTML，然后就在
Because you said there was HTML, and then right around

75
00:04:05.199 --> 00:04:09.889
在HTML从全部大写变为小写的同时，DOM被发明了。
the same time that HTML was going from all caps to lowercase, the DOM was invented.

76
00:04:11.840 --> 00:04:13.729
你怎么会有一个没有DOM的浏览器呢？
How would you have a browser without a DOM?

77
00:04:15.389 --> 00:04:16.040
&gt；&gt；Douglas Crockford：在有之前
&gt;&gt; Douglas Crockford: Before there was

78
00:04:16.040 --> 00:04:17.740
JavaScript没有必要
JavaScript there was no need for

79
00:04:17.740 --> 00:04:22.550
一个DOM，对吗？&gt；&gt；扬声器3：没有建模
a DOM, right? &gt;&gt; Speaker 3: There was no modeling of

80
00:04:22.550 --> 00:04:28.899
DOM，但DOM存在于某些-&gt；&gt；Douglas Crockford：浏览器
the DOM, but the DOM existed in some- &gt;&gt; Douglas Crockford: The browser

81
00:04:28.899 --> 00:04:31.089
有一棵树，但它没有用于
had a tree, but it had no API for

82
00:04:31.089 --> 00:04:33.776
才能访问该树。&GT；&GT；扬声器3：好的，
the to get access to that tree. &gt;&gt; Speaker 3: Okay,

83
00:04:33.776 --> 00:04:37.163
好吧。&gt；&gt；Douglas Crockford：什么事？
all right. &gt;&gt; Douglas Crockford: Yes?

84
00:04:37.163 --> 00:04:39.959
&gt；&gt；扬声器4：我想只是在听
&gt;&gt; Speaker 4: I guess listening to just

85
00:04:39.959 --> 00:04:45.230
一切的历史，这可能不是一个问题。
the history of everything, and it might not be a question.

86
00:04:45.230 --> 00:04:49.800
但是什么，所有的东西都变成了现在的样子。
But what, everything is funneled into what it is right now.

87
00:04:49.800 --> 00:04:57.050
而且看起来事情以一种非常简洁的方式非常稳定地进行着。
And it seems like things are pretty stably moving in a very succinct way.

88
00:04:57.050 --> 00:05:02.297
然后当我听到你的故事说这个是怎么来的，这个来了
And then when I listen to your stories of how this came from this, and this came

89
00:05:02.297 --> 00:05:07.490
从这里，所有这些语言都来自其他所有的语言。
from this, and all these languages came from all of these other languages.

90
00:05:08.740 --> 00:05:14.903
你有没有意见或者回答为什么这么一分钟，
Do you have an opinion or an answer to why such a minute,

91
00:05:14.903 --> 00:05:19.464
为什么每件事都这么专注？
how come everything is focused so much?

92
00:05:19.464 --> 00:05:26.144
为什么没有这么多这些不同想法的发展呢？
How come there isn’t so much of this development of these different ideas?

93
00:05:26.144 --> 00:05:30.160
当你说有一个想法的时候，
When you were saying the idea of having a,

94
00:05:30.160 --> 00:05:35.228
返回一个函数花了很多年才弄明白这一点。
returning a function took years to figure that out.

95
00:05:35.228 --> 00:05:41.026
为什么，还在继续吗，到底是怎么回事，
Why, is that still going on, and what's going on with that,

96
00:05:41.026 --> 00:05:43.829
为什么会减速？&GT；&GT；道格拉斯·克罗克福德：一直都是
why the slowdown? &gt;&gt; Douglas Crockford: It has always been

97
00:05:43.829 --> 00:05:46.430
慢点，我们第三天再谈这个。
slow, we'll talk about this on the third day.

98
00:05:48.230 --> 00:05:53.058
我们认为自己是最具创新性的行业，
We think of ourselves as being the most innovative of industries,

99
00:05:53.058 --> 00:05:54.360
也许我们是。
and maybe we are.

100
00:05:54.360 --> 00:05:57.752
但我们也是人类
But we're also humans and

101
00:05:57.752 --> 00:06:03.463
人类倾向于极端厌恶变化。
humans tend to be extremely change averse.

102
00:06:03.463 --> 00:06:08.028
最后认识到新的价值的人
And the people who are the last to recognize the value of a new

103
00:06:08.028 --> 00:06:13.029
技术往往是最能从中受益的人。
technology are often the people who would most benefit from it.

104
00:06:13.029 --> 00:06:15.720
在软件技术中有很多这样的例子
And there are lots of examples of that in software technology and

105
00:06:15.720 --> 00:06:16.899
然后我们会看看这些。
then we will look at those.
