WEBVTT

1
00:00:00.000 --> 00:00:03.701
[音乐]
[MUSIC]

2
00:00:03.701 --> 00:00:06.419
&gt；&gt；Douglas：这是我们浏览器的流程图。
&gt;&gt; Douglas: So this is a flow chart of our browser.

3
00:00:06.419 --> 00:00:09.429
这就是最初的Web浏览器的工作方式。
This is how the original web browser worked.

4
00:00:09.429 --> 00:00:10.444
你可以把它想象成一条蛇。
You can think of it as a snake.

5
00:00:10.444 --> 00:00:14.679
你把你的网址放在一边，把像素放在另一边。
You put your URL's on one side, your get pixels out the other side.

6
00:00:14.679 --> 00:00:19.468
因此，您将URL提供给它，该URL进入获取引擎，然后获取引擎将出去
So you feed it with the URL that goes to the fetch engine which will then go out on

7
00:00:19.468 --> 00:00:24.050
在互联网上找到东西并把它带回来，并把它放在缓存中。
the Internet and find the thing and bring it back, and put it in the cache.

8
00:00:24.050 --> 00:00:27.754
然后将其提供给解析引擎，解析引擎将对其进行解析并将其转换为
Then it gets given to the parse engine which will parse it and turn it into

9
00:00:27.754 --> 00:00:32.590
树，树是表示文档的数据结构。
a tree, the tree being the data structure which represents the document.

10
00:00:32.590 --> 00:00:36.740
然后将树提供给流或布局引擎，后者将计算出
The tree is then given to the flow or layout engine which will figure out

11
00:00:37.780 --> 00:00:40.009
页面的所有组件，它们有多大，以及
all of the components of the page,how big they are and

12
00:00:40.009 --> 00:00:44.920
它们是如何彼此相对定位并创建显示列表的。
how they're all located relative to each other and create a display list.

13
00:00:44.920 --> 00:00:49.750
然后将显示列表提供给绘制引擎，然后由绘制引擎将其旋转
And then the display list gets given to the paint engine which will then turn it

14
00:00:49.750 --> 00:00:54.155
所有这些都变成像素，然后您可以将其发送到屏幕或打印机。
all into pixels which you can then send to the screen or to the printer.

15
00:00:54.155 --> 00:00:56.700
所有的浏览器基本上都是这样做的。
All browsers still do essentially that.

16
00:00:58.429 --> 00:01:01.789
当马赛克浏览器开始工作时，他们添加了图像标签。
When work started on the Mosaic browser, they added the image tag.

17
00:01:03.359 --> 00:01:07.459
这就是他们想出的让图像标签工作的方法。
So this is the hack that they came up with for making the image tag work.

18
00:01:07.459 --> 00:01:10.730
当他们到达解析引擎时，他们会得到一个图像标签，
When they got to the parse engine and they'd get an image tag,

19
00:01:10.730 --> 00:01:15.909
他们会停下来，偷偷地回到取回引擎，说去拿那张照片，然后
they'd stop, sneak back to the fetch engine, say go get that picture and

20
00:01:15.909 --> 00:01:18.960
他们会等待它回来，然后继续解析。
they'd wait for it to come back and then they'd resume parsing.

21
00:01:20.950 --> 00:01:25.159
他们在世界上最快的大学网络之一，所以
They were on one of the world's fastest university networks, so

22
00:01:25.159 --> 00:01:26.388
这对他们来说真的很管用。
that was working really well for them.

23
00:01:28.069 --> 00:01:32.930
但是，马赛克松开了，进入了这个世界
But, Mosaic got loose, got into the world and

24
00:01:32.930 --> 00:01:35.890
当时我们还在使用拨号调制解调器。
at that time we were still on dial up modems.

25
00:01:35.890 --> 00:01:40.287
任何人都记得拨号调制解调器，任何人都可以唱拨号调制解调器的歌曲。
Anybody remember dial up modems, can anybody sing the dial up modem song.

26
00:01:40.287 --> 00:01:45.770
&gt；&gt；扬声器2：[笑]&gt；&gt；道格拉斯：是的。
&gt;&gt; Speaker 2: [LAUGH] &gt;&gt; Douglas: Yeah.

27
00:01:45.770 --> 00:01:47.120
是啊。&gt；&gt；扬声器2：叮，叮。
Yeah. &gt;&gt; Speaker 2: Ding, ding, ding.

28
00:01:47.120 --> 00:01:52.859
&gt；&gt；Douglas：因此在这些调制解调器上运行Mosaic的经验是
&gt;&gt; Douglas: And so the experience of running Mosaic on those modems was that

29
00:01:52.859 --> 00:01:57.990
您将等待，直到每个图像都被加载，然后一切都会显示出来。
you would wait until every image got loaded and then everything would display.

30
00:01:57.990 --> 00:02:00.700
因此，可能需要很长时间才能使网页正常运行。
So it could take a long time to get a web page going.

31
00:02:01.924 --> 00:02:09.990
于是，这些孩子们搬到了网景公司，他们的目标是杀死马赛克。
So those kids then moved to Netscape, and their goal is to kill Mosaic.

32
00:02:09.990 --> 00:02:13.479
他们想创造一个杀死马赛克的怪物，所以他们制作了一个Mozilla。
They want to create a monster that kills Mosaic, so they make a Mozilla.

33
00:02:14.759 --> 00:02:17.469
Mozilla的工作方式略有不同。
And Mozilla works a little differently.

34
00:02:17.469 --> 00:02:21.729
因此，当解析引擎到达图像标记时，它将转到提取引擎并
So when the parse engine gets to an image tag, it goes to the fetch engine and

35
00:02:21.729 --> 00:02:25.170
说Go get it，但它们随后继续解析。
says go get it but they then resume parsing.

36
00:02:25.170 --> 00:02:29.349
他们在树中放置了一个占位符来表示图片
They put a placeholder in the tree to represent the picture and

37
00:02:29.349 --> 00:02:30.409
它们继续解析。
they continue to parse.

38
00:02:31.629 --> 00:02:35.879
如果他们看到另一个图像标记，他们告诉提取引擎也得到一个
And if they see another image tag, they tell the fetch engine get that one too and

39
00:02:35.879 --> 00:02:39.870
在树中放入第二个占位符，它们将继续解析。
put a second placeholder in the tree and they continue parsing.

40
00:02:39.870 --> 00:02:42.930
然后在最后，他们会展示他们到目前为止所取得的成果。
And then at the end, they will display what they've got so far.

41
00:02:44.120 --> 00:02:49.756
所以你会看到这个东西中的小占位符，但是你马上就看到了文本。
And so you would see little placeholders in the thing but you saw text right away.

42
00:02:49.756 --> 00:02:53.620
然后当取数引擎递送图像时，
And then as the fetch engine delivers the images,

43
00:02:53.620 --> 00:02:59.050
然后，他们重复流程和油漆，以纳入新的东西。
they then repeat the flow and the paint to incorporate the new things.

44
00:02:59.050 --> 00:03:02.289
所以在它去的地方会有一个动画效果，砰，
And so there'd be an animation effect where it go, boom, boom, boom, boom,

45
00:03:02.289 --> 00:03:03.188
正如图像所显示的那样。
as the images would appear.

46
00:03:04.189 --> 00:03:09.060
所以总的来说，这可能比在马赛克上花费的时间更长，但是
So overall this could take longer than it did on Mosaic, but

47
00:03:09.060 --> 00:03:12.259
用户体验要好得多，因为他们可以立即看到东西。
the user experience was much better because they would see things immediately.

48
00:03:13.659 --> 00:03:14.349
所以它很受欢迎，
And so it was a hit,

49
00:03:14.349 --> 00:03:19.020
它非常成功，今天所有的浏览器基本上都在这样做。
it was very successful, and all browsers today are essentially doing that.

50
00:03:19.020 --> 00:03:21.050
只是网络正在变得如此
It's just that networks are going so

51
00:03:21.050 --> 00:03:22.679
快到我们再也看不到占位符了。
fast that we don't see the placeholders anymore.

52
00:03:25.430 --> 00:03:28.909
因此，在Netscape Navigator 2中，他们添加了脚本。
So in Netscape Navigator 2, they added scripting.

53
00:03:28.909 --> 00:03:32.560
所以现在浏览器中有一个事件循环，看起来像这样。
So there's now an event loop in the browser which looks something like this.

54
00:03:32.560 --> 00:03:35.409
我们会做布局，我们会画。
We'll do the layout, we'll do the painting.

55
00:03:35.409 --> 00:03:39.389
然后我们将等待可能发生的事件
We'll then wait for an event which could be something happening with

56
00:03:39.389 --> 00:03:43.310
当有人移动鼠标或在键盘上键入时的UI。
the UI if someone moving a mouse or typing on a keyboard.

57
00:03:43.310 --> 00:03:45.460
或者可能是从取数引擎传来的东西，
Or it could be something coming from the fetch engine,

58
00:03:45.460 --> 00:03:46.659
网络上发生了一些事情。
something happened on the network.

59
00:03:46.659 --> 00:03:51.699
或者它可以是一个计时器提示，表示已经过去了一些时间，并且发生了一些事情。
Or it could be a timer cue saying some time has elapsed and something happens.

60
00:03:51.699 --> 00:03:54.921
无论它是什么，它都会导致一些脚本运行。
Whatever it is, it will cause some script to run.

61
00:03:54.921 --> 00:03:56.962
并且该脚本将运行到完成。
And that script will run to completion.

62
00:03:56.962 --> 00:04:03.060
它保证它不会被下一个事件打断，这是一件好事。
It's guaranteed it will not be interrupted by the next event which is a good thing.

63
00:04:03.060 --> 00:04:05.680
因为它使脚本更容易编写。
Cuz it makes the the scripts much easier to write.

64
00:04:07.039 --> 00:04:10.319
该脚本可能会以某种方式变异树，
That script will probably mutate the tree in some way,

65
00:04:10.319 --> 00:04:15.300
这些事件可能导致想要展示的东西或
that the events probably caused something to want to be displayed or

66
00:04:15.300 --> 00:04:19.649
修改，这意味着我们将做另一个流程和其他油漆
modified, which means we'll then do another flow and other paint and

67
00:04:19.649 --> 00:04:23.500
然后我们将获得下一个事件，以此类推，这基本上就是浏览器所做的。
then we'll get the next event and so on, and that's basically what browsers do.

68
00:04:23.500 --> 00:04:25.290
现在，这是一个非常简单的方法。
Now this is way over simplified.

69
00:04:25.290 --> 00:04:29.740
树的一些突变将导致流立即发生。
There are some mutations of the tree which will cause flow to happen immediately.

70
00:04:29.740 --> 00:04:33.800
所以不一定是在这些非常干净的阶段，
So it's not in these very clean phases necessarily,

71
00:04:33.800 --> 00:04:36.069
但这几乎就是他们的工作方式。
but this is pretty much how they work.

72
00:04:36.069 --> 00:04:38.470
这是浏览器的方式。
This is the way of the browser.

73
00:04:38.470 --> 00:04:39.209
他们都这么做。
They all do that.
