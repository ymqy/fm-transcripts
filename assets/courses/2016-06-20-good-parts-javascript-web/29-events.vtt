WEBVTT

1
00:00:00.000 --> 00:00:03.749
[音乐]
[MUSIC]

2
00:00:03.749 --> 00:00:06.615
&gt；&gt；Douglas Crockford：在Netscape 2中，我们添加了一个仍然存在的事件模型
&gt;&gt; Douglas Crockford: In Netscape 2 we added an event model which is still in all

3
00:00:06.615 --> 00:00:07.400
浏览器。
the browsers.

4
00:00:10.300 --> 00:00:13.650
浏览器具有事件驱动的单线程编程模型。
The browser has an event driven single threaded programming model.

5
00:00:13.650 --> 00:00:15.509
这是浏览器最好的地方之一。
Which is one of the best things about the browser.

6
00:00:16.940 --> 00:00:20.089
每个事件都将针对特定节点。
Every event will be targeted at a particular node.

7
00:00:20.089 --> 00:00:22.589
并且事件导致事件处理程序函数的调用。
And the events cause the invocation of event handler functions.

8
00:00:25.109 --> 00:00:31.329
不幸的是，事件的组成真的很草率，从我的角度来看，
Unfortunately, the composition of events is really sloppy, from my perspective,

9
00:00:31.329 --> 00:00:36.890
这是层混淆，有一些事件是为了
there's layer confusion, there are some events which are intended for

10
00:00:36.890 --> 00:00:41.560
Widget、低级组件以及一些用于应用程序的组件，
widgets, low level components, and some intended for applications,

11
00:00:41.560 --> 00:00:46.750
更高级别的组件和DOM的设计将它们混合在一起。
higher level components and the design of the dom mixes them all up.

12
00:00:46.750 --> 00:00:51.219
所以你已经有了像点击和双击这样的应用程序级别的东西
So you've got application level things like click and double click

13
00:00:51.219 --> 00:00:55.473
完全混合了小部件级别的东西，比如鼠标按下，鼠标移动。
completely mixed up with widget level things like mouse down, mouse move.

14
00:00:57.759 --> 00:01:01.619
现在看来他们是，这里的一线希望是因为
Now it turns out they're, the silver lining here is because

15
00:01:01.619 --> 00:01:05.519
每件事都暴露给每个人，这是可能的
everything was exposed to everybody, it was possible for

16
00:01:05.519 --> 00:01:10.269
图书馆来清理东西，并对其施加秩序。
the libraries to come in and clean things up and impose order on it.

17
00:01:11.980 --> 00:01:15.400
这很管用，因为所有的东西都是可用的，但是
And that worked because everything was available, but

18
00:01:15.400 --> 00:01:18.200
如果不是必要的话情况会好得多，
it would have been much better had they not even been necessary,

19
00:01:18.200 --> 00:01:21.120
如果DOM一开始就被正确设计的话。
if the dom had just been Designed correctly in the first place.

20
00:01:21.120 --> 00:01:25.939
在输入事件中存在类似的层混淆。
There are similar layer confusion in the input events.

21
00:01:25.939 --> 00:01:30.560
您有应用程序级别的东西，如模糊、更改和焦点
You've got application level things like blur, change, and focus and

22
00:01:30.560 --> 00:01:35.109
按键和小部件级别的事情，比如向上键和向下键。
key press and widget level things like key up and key down.

23
00:01:35.109 --> 00:01:37.079
再一次，一切都搞混了。
And again, it's all mixed up.

24
00:01:37.079 --> 00:01:38.159
因为这一切都混在一起了。
And because it's all mixed up.

25
00:01:38.159 --> 00:01:42.359
我看到应用程序把它搞混了，你会看到人们
I see applications mix it up, you'll see people

26
00:01:42.359 --> 00:01:46.329
随时随地做所有这些事情，因为它是可用的。
doing all of those things all all the time everywhere because it's available.

27
00:01:48.469 --> 00:01:52.289
因此，有三种方法可以将事件处理程序添加到节点。
So there are three ways of adding an event handler to a node.

28
00:01:52.289 --> 00:01:56.490
有一个原始的微软模型，你可以说，node.onClick。
There is a original Microsoft model where you could say, node.onClick.

29
00:01:56.490 --> 00:01:57.890
给它分配一个功能，完成。
Assign a function to it, done.

30
00:01:57.890 --> 00:02:00.950
这在任何地方都有效，这很好。
And that still works everywhere, that's pretty nice.

31
00:02:00.950 --> 00:02:03.670
微软决定它应该是一种方法。
Microsoft decided that it should be a method.

32
00:02:03.670 --> 00:02:07.200
所以你说node.attachMethod，onclick，function。
So you say node.attachMethod, onClick, function.

33
00:02:08.270 --> 00:02:11.639
好吧，WC说那还不够打字。
Okay, WC said that's not enough typing.

34
00:02:11.639 --> 00:02:16.370
所以让我们让它添加事件侦听器类型f false。
So let's make it add event listener type f false.

35
00:02:16.370 --> 00:02:18.199
这个假的东西有点奇怪。
And this false thing is kind of weird.

36
00:02:18.199 --> 00:02:22.349
通常，如果将参数设置为关闭
Normally, if you leave a parameter off

37
00:02:22.349 --> 00:02:26.870
浏览器会将其替换为undefined，这是false，但是
the browser will replace it with undefined which is false, but

38
00:02:26.870 --> 00:02:30.449
在这种情况下，它真的必须是假的，否则它会失败。
in this case it really has to be false or it's gonna fail.

39
00:02:30.449 --> 00:02:36.879
稍后我将解释如何使用false作为事件处理程序
In a minute I'll explain how the false is used so an event handler

40
00:02:36.879 --> 00:02:42.310
接受一个可选的事件参数，它是事件如何知道发生了什么。
takes an optional event parameter which is how the event knows what happened.

41
00:02:42.310 --> 00:02:44.360
不幸的是，微软没有这样做。
Microsoft unfortunately didn't do that.

42
00:02:44.360 --> 00:02:48.969
相反，他们有一个全局事件变量，这是一件坏事。
Instead they had a global event variable which was a bad thing.

43
00:02:50.259 --> 00:02:55.060
因此，由于这是编写事件处理程序的标准模板
So because of that this is the standard template for writing event handlers

44
00:02:56.949 --> 00:03:02.939
在使用传入的事件或使用全局变量的情况下，
where either use the event that was passed in or you use the global variable,

45
00:03:02.939 --> 00:03:08.240
目标要么是events目标变量，要么是
and the target is either gonna be the events target variable or

46
00:03:08.240 --> 00:03:12.120
一个属性或事件源，为什么是我拥有的名称
a property or the events source, why are to names I had that

47
00:03:12.120 --> 00:03:16.900
这没有任何意义，然后在那之后，你可以做你正常的事情。
it doesn't make any sense and then after that you can do your normal thing.

48
00:03:16.900 --> 00:03:20.710
我不建议任何人使用我刚才展示给你的任何东西。
I don't recommend that anybody use any of what I've just shown you.

49
00:03:20.710 --> 00:03:24.479
[笑]你不想用这些，因为它很痛苦
[LAUGH] You don't want to use any of that because it's painful and

50
00:03:24.479 --> 00:03:27.560
只是不太好用。
it's it just doesn't work very well.

51
00:03:27.560 --> 00:03:31.187
您希望改为使用库。
You want to be using libraries instead.

52
00:03:33.728 --> 00:03:36.962
&gt；&gt；Douglas Crockford：因此，有两种模型用于如何进行事件传播
&gt;&gt; Douglas Crockford: So there were two models for how to do event propagation

53
00:03:36.962 --> 00:03:40.408
这是在Netscape做的涓涓模型
there's the trickling model that was done at Netscape and

54
00:03:40.408 --> 00:03:44.319
这是微软做的泡沫模型。
there is the bubbling model that was done at Microsoft.

55
00:03:44.319 --> 00:03:48.854
所以如果滴水，你会从树的顶端开始
So if trickling you would start with the top of the tree and

56
00:03:48.854 --> 00:03:53.819
您将下行到树，直到到达目标节点
you would descend down to the tree until you get to the target node and

57
00:03:53.819 --> 00:03:57.650
下行过程中的任何节点都可以捕获事件并
any node along the way down can capture the event and

58
00:03:57.650 --> 00:03:59.810
说我在处理，不要传下去。
say I'm taking care of it, don't pass it down.

59
00:04:01.810 --> 00:04:05.780
微软，另一方面，从底部开始，他们上升到母公司，
Microsoft, on the other hand, started with the bottom and they go up parent,

60
00:04:05.780 --> 00:04:08.300
家长，直到他们到达顶端。
parent, parent, parent until they get to the top.

61
00:04:08.300 --> 00:04:11.759
沿途的任何节点都可以说我对此感兴趣
And any node along the way can say I'm interested in this

62
00:04:11.759 --> 00:04:12.468
事件，我想处理。
event, I want to handle.

63
00:04:13.539 --> 00:04:16.060
事实证明，微软的做法是正确的。
It turns out Microsoft got it right.

64
00:04:16.060 --> 00:04:20.829
冒泡是正确的做法。
That bubbling up is the correct way to do that.

65
00:04:20.829 --> 00:04:24.980
所以当W3C去标准化时，说好吧，我们需要想出一个标准
So when W3C went to standardize say well we need to come up with a standard for

66
00:04:24.980 --> 00:04:27.110
我们如何进行事件传播。
how we do the event propagation.

67
00:04:27.110 --> 00:04:30.930
我们是往下滴还是往上冒泡？
Do we do the trickling down or the bubbling up?

68
00:04:30.930 --> 00:04:33.012
他们本可以说让我们做正确的那件事。
They could have said let's do the one that's right.

69
00:04:35.048 --> 00:04:36.759
&GT；&GT；道格拉斯·克罗克福德：嗯，他们为什么要这么做，对吗？
&gt;&gt; Douglas Crockford: Well, why would they do that, right?

70
00:04:36.759 --> 00:04:40.389
所以他们取而代之的是，我们两种方式都要做。
So what they instead was, we'll do it both ways.

71
00:04:40.389 --> 00:04:43.779
我们将要求浏览器向下涓涓而上。
We'll require that the browsers trickle down and bubble up.

72
00:04:43.779 --> 00:04:44.629
所以他们两样都做。
So they do both.

73
00:04:44.629 --> 00:04:48.600
他们首先会做一个涓涓往下的阶段，然后他们会做一个气泡向上的阶段，然后
They'll first do a trickle down phase, and they'll do a bubble up phase, and

74
00:04:48.600 --> 00:04:54.139
addeventlistener上的这个false告诉你在哪个阶段做这件事。
that false that was on addeventlistener tells you on which phase you're doing it.

75
00:04:54.139 --> 00:04:57.329
假的就会泡在脸上。
False will be on the bubble up the face.

76
00:04:57.329 --> 00:05:00.720
那么你为什么还要关心他们为什么会有这些冒泡的东西呢？
So why do you even care why do they have this bubbling stuff at all?

77
00:05:02.279 --> 00:05:05.709
它是为了解决一个可能不再是问题的问题。
It was to solve a problem that's probably not a problem anymore.

78
00:05:05.709 --> 00:05:10.500
假设你正在制作一个目录页，你有100件东西
So suppose you're making a catalog page and you've got 100 things and

79
00:05:10.500 --> 00:05:15.139
您可以从水库中拖动这些东西中的任何一个并将其放到页面上
you can drag any of those things from a reservoir and put them onto a page

80
00:05:16.459 --> 00:05:20.269
所以，这就是你如何得到你正在编写的那些很好的创作包。
and so, that's how you've got those nice authoring package that you're writing.

81
00:05:21.490 --> 00:05:24.199
所以，你有100个可拖动的元素。
And so, you've got 100 draggable elements.

82
00:05:24.199 --> 00:05:27.629
这意味着您需要向每个事件处理程序添加一组事件处理程序。
That means you need to add a set of event handlers to each one of those.

83
00:05:27.629 --> 00:05:30.149
你必须添加鼠标按下，鼠标向上，鼠标移动等等。
You have to add mouse down, mouse up, mouse move and so on.

84
00:05:31.930 --> 00:05:34.884
这就是数以百计的事件处理程序集。
So that's hundreds of sets of event handlers.

85
00:05:34.884 --> 00:05:40.300
在1995年，这花费了很长时间，当时浏览器的速度要慢得多。
In 1995, that took a long time browsers were a lot slower then.

86
00:05:40.300 --> 00:05:41.659
当时JavaScript要慢得多。
JavaScript was a lot slower then.

87
00:05:41.659 --> 00:05:44.500
做所有这些工作都需要时间。
It would take time to do all of that work.

88
00:05:44.500 --> 00:05:49.100
因此，相反，您要做的是添加一组事件处理程序
So instead what you would do is add one set of event handlers

89
00:05:49.100 --> 00:05:52.090
给那一百个人的共同父母。
to the common parent of that hundred.

90
00:05:52.090 --> 00:05:56.100
共同的父辈会截取所有的事件
And that common parent would intercept all of the events and

91
00:05:56.100 --> 00:05:57.860
根据需要移动所有孩子。
move all the children as needed.

92
00:05:59.319 --> 00:06:02.069
我不认为系统变得如此重要了
I don't think it matters anymore with the systems have gotten so

93
00:06:02.069 --> 00:06:04.160
比在噪音中快多了，但是
much faster that it's in the noise, but

94
00:06:04.160 --> 00:06:06.649
它仍然在模型中，看你仍然需要注意它。
it's still in the model see you still need to be aware of it.

95
00:06:08.750 --> 00:06:11.699
你要做的一件事就是取消冒泡，所以
One thing you have to do is cancel bubbling, so

96
00:06:11.699 --> 00:06:15.120
在某一点上，一些节点已经处理了一切并且它说，
at some point some node has taken care of everything and it says,

97
00:06:15.120 --> 00:06:18.870
请不要告诉我父母，一切都在控制之中。
please don't tell my parents, it's under control and.

98
00:06:18.870 --> 00:06:22.269
有两种方法可以做到这一点，你需要两种方法都能做到。
And there are two ways to do that and you need to be able to do it both ways.

99
00:06:26.269 --> 00:06:29.100
有时您希望阻止默认操作
And sometimes you want to prevent the default action

100
00:06:29.100 --> 00:06:32.639
在浏览器本身的所有东西都关闭后，可能会想要做一些事情。
after everything is down in the browser itself may want to do something.

101
00:06:32.639 --> 00:06:34.920
可能想要提交表单或
May want to submit a form or or

102
00:06:34.920 --> 00:06:38.560
把注意力放在某事上如果你不想让它发生，你就可以阻止它发生。
give focus to something if you don't want that to happen, you prevent that.

103
00:06:38.560 --> 00:06:40.730
有三种方法可以防止这种情况的发生
And there are three ways to prevent that from happening and

104
00:06:40.730 --> 00:06:42.040
你必须把所有这些都做好。
you have to do all of those as well.
