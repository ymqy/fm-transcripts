WEBVTT

1
00:00:00.000 --> 00:00:04.078
[音乐]
[MUSIC]

2
00:00:04.078 --> 00:00:06.320
&gt；&gt；Douglas：第四集，Ajax的变形记。
&gt;&gt; Douglas: Episode Four, The Metamorphosis of Ajax.

3
00:00:08.269 --> 00:00:11.539
整个世界是一个页面，所有的男人和女人只是指针和点击器。
All the world's a page and all the men and women merely pointers and clickers.

4
00:00:11.539 --> 00:00:15.294
所以，我们将从约翰·哈灵顿爵士开始。
So, we're gonna start this hour with Sir John Harrington.

5
00:00:15.294 --> 00:00:20.486
诗人，朝臣，英国女王伊丽莎白一世的风流教子，
The poet, courtier, the saucy godson of Queen Elizabeth I of England,

6
00:00:20.486 --> 00:00:25.422
作为一名发明家，今天被铭记于心，他发明了一种
is best remembered today as being an inventor, and he invented one of

7
00:00:25.422 --> 00:00:31.199
使我们这个规模的文明成为可能的基本发明。
the fundamental inventions which makes civilization at our scale possible.

8
00:00:31.199 --> 00:00:34.520
没有他的突破，我们就不能生活在城市里，
Without his breakthrough, we could not live in cities,

9
00:00:34.520 --> 00:00:39.649
我们不可能生活在技术成就所必需的密度中。
we could not be living in the density necessary for technological achievement.

10
00:00:41.429 --> 00:00:46.390
伟大的进步，所以这是他的发明的书中的一张图片。
Great move forward, so this is a picture from his book of his invention.

11
00:00:46.390 --> 00:00:47.531
有人能认出它吗？
Can anybody identify it?

12
00:00:47.531 --> 00:00:49.229
&gt；&gt；扬声器2：厕所。
&gt;&gt; Speaker 2: A toilet.

13
00:00:49.229 --> 00:00:50.200
&gt；&gt；道格拉斯：这是一个抽水马桶，
&gt;&gt; Douglas: It is a flush toilet,

14
00:00:50.200 --> 00:00:55.750
事实上，没有它们，文明就不能工作。
indeed, just civilization couldn't work without them.

15
00:00:55.750 --> 00:01:02.210
罗马人有冲水技术，但当帝国崩溃时，它就消失了，
The Romans had flush technology, but it was lost when the Empire collapsed,

16
00:01:02.210 --> 00:01:04.750
但哈林顿重新发现了它
but Harrington rediscovered it and

17
00:01:04.750 --> 00:01:10.750
他为女王建造了一个这样的设备，并将其安装在她的住宅中。
he built one of these devices for the Queen and installed it in her residence.

18
00:01:10.750 --> 00:01:13.620
而且，就像通常发生在真正重要的发明中一样，
And, as usually happens with the really important inventions,

19
00:01:14.629 --> 00:01:16.019
她拒绝使用它。
she refused to use it.

20
00:01:16.019 --> 00:01:18.500
她抱怨它太吵了。
She complained that it made too much noise.

21
00:01:18.500 --> 00:01:21.769
她不想让城堡里的每个人都知道她什么时候去找她
She didn't want everybody in the castle knowing when she was going about her

22
00:01:21.769 --> 00:01:25.400
皇家商业，所以它从来没有被使用过。
Royal Business, so it never got used.

23
00:01:25.400 --> 00:01:28.599
但是，他出版了一本关于它的书，并且
But, he published a book about it, and

24
00:01:28.599 --> 00:01:32.420
最终，其他发明家看到了它，并对其进行了改进。
eventually other inventors saw it and improved it.

25
00:01:32.420 --> 00:01:37.060
在接下来的几百年里，人们为它添加了其他必要的元素，
Over the next couple hundred years, people added other essential elements to it,

26
00:01:37.060 --> 00:01:40.206
包括浮阀，S型疏水阀，虹吸管，最终我们得到了-
including the float valve, and the S-trap, and siphon, and eventually we got-

27
00:01:40.206 --> 00:01:41.039
&GT；&GT；扬声器2：鱼在哪里，
&gt;&gt; Speaker 2: Where are the fish,

28
00:01:41.039 --> 00:01:43.950
不过，我想要鱼在我的马桶里？
though, I want fish in my toilet?

29
00:01:43.950 --> 00:01:45.020
&gt；&gt；道格拉斯：你当然知道。
&gt;&gt; Douglas: Of course you do.

30
00:01:45.020 --> 00:01:45.520
&gt；&gt；扬声器2：是的。
&gt;&gt; Speaker 2: Yeah.

31
00:01:46.740 --> 00:01:50.930
&gt；&gt；Douglas：那么，他写了一本书，书名是《变形记》
&gt;&gt; Douglas: So, he wrote a book, and the title of the book was the Metamorphosis of

32
00:01:50.930 --> 00:01:56.020
AJAX，他在1596年出版，他称之为AJAX。
Ajax, which he published in 1596, he called it The Ajax.

33
00:01:56.020 --> 00:02:01.790
好，现在闪现一下，这是杰西·詹姆斯·加勒特。
Well, now flash forward a little bit, this is Jesse James Garrett.

34
00:02:01.790 --> 00:02:06.069
他是旧金山的设计师和顾问。
He was a designer and consultant in San Francisco.

35
00:02:06.069 --> 00:02:08.719
他在一个项目上
He was on a project where he was

36
00:02:08.719 --> 00:02:11.919
咨询公司工程师，以及
consulting with the engineers of the company, and

37
00:02:11.919 --> 00:02:16.990
他们告诉他，他们找到了这种为浏览器编写应用程序的方法。
they told him that they had found this way of writing applications for the browser.

38
00:02:16.990 --> 00:02:20.599
即，不是每次用户单击时都进行页面替换，
That, instead of doing a page replacement each time the user clicks,

39
00:02:20.599 --> 00:02:25.199
相反，他们将从浏览器向服务器发送一点点数据。
instead they will send a little bit of data from the browser to the server.

40
00:02:25.199 --> 00:02:30.120
然后，服务器将发送回一个小响应，即浏览器中的JavaScript
The server will then send a small response back, JavaScript in the browser

41
00:02:30.120 --> 00:02:35.479
然后将其显示在屏幕上，以便他们可以变得更好
will then display it on the screen so that they can get much better

42
00:02:35.479 --> 00:02:40.439
使用这种技术的用户体验，并且它奏效了。
user experiences using this technique, and it worked.

43
00:02:40.439 --> 00:02:44.020
他们遇到的问题是，他们无法说服自己的管理层
The problem they were having was, they couldn't convince their own management

44
00:02:44.020 --> 00:02:46.520
这是一件可以接受的事情。
that this was an acceptable thing to do.

45
00:02:46.520 --> 00:02:49.210
所以，他们问加勒特是否可以
So, they asked Garrett if he could

46
00:02:49.210 --> 00:02:51.710
请向管理层解释这是个好主意。
please explain to management that this was a good idea.

47
00:02:53.250 --> 00:02:55.379
所以，加勒特开始思考这个问题，
So, Garrett goes off and thinks about this problem,

48
00:02:55.379 --> 00:03:00.210
并思考，我们如何呈现这个想法？
and thinks about, how do we present this idea?

49
00:03:00.210 --> 00:03:03.259
他说，他在洗澡时想到了解决办法。
And, he says the solution came to him when he was in the shower.

50
00:03:04.430 --> 00:03:07.930
我认为如果他在位的话，这会是一个更好的故事
I think it would have been a better story if he had been on the throne

51
00:03:07.930 --> 00:03:11.289
做他的皇室生意，但他说他在洗澡
going about his royal business, but he says he was in the shower

52
00:03:11.289 --> 00:03:14.050
当他想到他必须给它起个名字的时候。
when it occurred to him that he had to give it a name.

53
00:03:14.050 --> 00:03:18.969
他给它起的名字是异步JavaScript和XML，或者
The name he gave it was Asynchronous JavaScript and XML, or

54
00:03:18.969 --> 00:03:24.150
Ajax，2005年，他在他的公司网站上发布了一份关于这一点的备忘录
Ajax, and he published a memo about this on his company's website in 2005 and

55
00:03:24.150 --> 00:03:26.430
几乎一夜之间就像病毒一样传播开来。
it went viral almost overnight.

56
00:03:26.430 --> 00:03:30.530
每个人都在谈论Ajax和为Web编写Ajax应用程序，并且
Everybody was talking about Ajax and writing Ajax applications for the Web, and

57
00:03:30.530 --> 00:03:34.219
它彻底改变了我们对浏览器和JavaScript的思考方式。
it completely transformed the way we think about browsers and JavaScript.

58
00:03:35.770 --> 00:03:41.500
给出一些历史背景，网络来自文字处理，
Sort of give some historical context for this, the Web comes from word processing,

59
00:03:41.500 --> 00:03:47.405
文字处理在历史上有两个非常不同的流派。
and word processing historically comes in two very distinct schools.

60
00:03:47.405 --> 00:03:52.925
有一个二进制专有学校，从独立的设备开始，
There's the binary proprietary school, which started with standalone equipment,

61
00:03:52.925 --> 00:03:57.461
然后共享逻辑，最后是个人计算机，这是
and then shared logic, and eventually personal computers, which was

62
00:03:57.461 --> 00:04:02.629
在不同的时期被像IBM，Wang和今天的微软这样的公司所主导。
dominated at various times by companies like IBM, Wang, and today Microsoft.

63
00:04:02.629 --> 00:04:05.349
然后是文本开放学校
Then, there is the textual open school

64
00:04:05.349 --> 00:04:09.330
其中所有内容都始终以文本形式表示。
in which everything is represented as text all the time.

65
00:04:09.330 --> 00:04:13.150
其中一个最早的例子是一个叫做“径流”的程序，这个程序是被开发出来的
One of the first examples of this is a program called Runoff that was developed

66
00:04:13.150 --> 00:04:17.680
由麻省理工学院提供，而径流的目的是
by MIT, and Runoff was intended for

67
00:04:17.680 --> 00:04:21.529
产生可以发送到各种打印机的文本。
producing text that could be sent to various printers.

68
00:04:22.769 --> 00:04:25.089
所以，这里我们有一个径流文件的例子。
So, here we've got an example of a Runoff file.

69
00:04:26.120 --> 00:04:31.129
如果一行以第一列中的句点开始，这意味着它是一个命令。
If a line starts with a period in column one, that means it's a command.

70
00:04:31.129 --> 00:04:35.966
所以，在这种情况下，我们将跳过一行，然后我们将制表符四，我们将偏移四，
So, in this case, we'll skip one line, and then we'll tab four, we'll offset four,

71
00:04:35.966 --> 00:04:40.420
依此类推，然后命令之间的文本将填充到页边距中。
and so on, and then the text between the commands will be filled into the margins.

72
00:04:40.420 --> 00:04:46.295
现在这是一个非常流行的程序，它被从一个主机移植到另一个主机。
Now this was a very popular program, it was ported from one mainframe to another.

73
00:04:46.295 --> 00:04:50.100
它到处移动，最终到达贝尔实验室，
It moved all over the place, eventually got to Bell Labs,

74
00:04:50.100 --> 00:04:52.819
在那里它的名字被缩写为Roff，并且
where its name was shortened to ROFF, and

75
00:04:52.819 --> 00:04:57.560
创建了它的其他版本，包括NROFF和Troff。
other versions of it were created, including NROFF and TROFF.

76
00:04:57.560 --> 00:05:00.790
Troff是Unix社区排版的方式，
TROFF was the way the Unix community did typesetting,

77
00:05:00.790 --> 00:05:02.160
做了很长一段时间的书。
made books for a long, long time.

78
00:05:03.879 --> 00:05:08.300
与此同时，IBM公司有一位名叫查尔斯·戈德法布(Charles Goldfarb)的律师。
Meanwhile, there's an attorney at IBM named Charles Goldfarb.

79
00:05:08.300 --> 00:05:10.339
他认为他可以做得更好，所以
He thinks he can do this stuff better, so

80
00:05:10.339 --> 00:05:15.269
他开始了一个名为Generalized Markup Language的项目，这是一个
he begins a project called Generalized Markup Language, and this is an example of

81
00:05:15.269 --> 00:05:19.319
一种通用的标记语言，在它的发展过程中是一种中点。
a Generalized Markup Language kind of midpoint through its evolution.

82
00:05:21.029 --> 00:05:23.879
加价变得有点复杂了。
The markups got a little bit more complicated.

83
00:05:23.879 --> 00:05:29.240
现在他在第一栏有一个冒号，然后是神秘的命令，
Now he's got a colon in column one, followed by cryptic command,

84
00:05:29.240 --> 00:05:31.810
然后如果命令后面跟着一个点，
and then if the command is followed by a dot,

85
00:05:31.810 --> 00:05:34.930
然后，他可以在线路的其余部分获得内容。
he can then have content on the remainder of the line.

86
00:05:34.930 --> 00:05:39.894
所以，你开始混淆命令和内容，如果你
So, you're starting to mix up with the commands and the content, and if you're

87
00:05:39.894 --> 00:05:44.858
熟悉HTML，您可能会奇怪地熟悉其中的一些命令，并且
familiar with HTML, some of these commands might be eerily familiar to you, and

88
00:05:44.858 --> 00:05:46.468
这不是偶然的。
that's not accidental.

89
00:05:46.468 --> 00:05:51.082
事实上，HTML来自于这一传统，除了EOL之外，
In fact, HTML comes out of this heritage, all of them except for EOL,

90
00:05:51.082 --> 00:05:54.226
但你大概可以猜到那是什么意思。
but you can probably guess what that one means.

91
00:05:54.226 --> 00:05:59.413
事实上，随着EML的发展，
In fact, as EML went through its evolution,

92
00:05:59.413 --> 00:06:05.281
我们先是：E，然后是：，最后是&lt；&gt；，
we got :e, and then ::, and then finally &lt;&gt;,

93
00:06:05.281 --> 00:06:09.800
你知道之后发生了什么。
and you know what happened after that.

94
00:06:09.800 --> 00:06:14.706
所以，如果你曾经看过HTML实体，我们有一个与符号，
So, if you ever looked at HTML entities, we've got an ampersand,

95
00:06:14.706 --> 00:06:17.560
密码和分号。
the cryptic code, and a semi-colon.

96
00:06:17.560 --> 00:06:21.103
你在想，在什么奇怪的宇宙里
You're wondering, in what bizarre universe does it make sense to have a piece of

97
00:06:21.103 --> 00:06:24.560
随机标点符号，然后是一个代码，以及另一个随机标点符号？
random punctuation, then a code, and another random piece of punctuation?

98
00:06:24.560 --> 00:06:26.432
那是从哪里来的？
Where did that come from?

99
00:06:26.432 --> 00:06:29.072
这就是它的来源，他用完了尖括号。
This is where it came from, he ran out of angle brackets.

100
00:06:29.072 --> 00:06:31.757
没有其他办法让它看起来很好，所以
There was no other way to make it look nice, so

101
00:06:31.757 --> 00:06:36.579
他选择了看起来很糟糕的东西，那么尖括号是从哪里来的呢？
he went with the awful looking thing, so where did the angle brackets come from?

102
00:06:36.579 --> 00:06:40.659
尖括号的灵感来自Scribe。
The angle brackets were inspired by Scribe.

103
00:06:40.659 --> 00:06:45.259
布莱恩·里德(Brian Reid)是卡内基梅隆大学(Carnegie Mellon)令人惊讶的聪明人，他制作了Scribe，
Brian Reid was an amazingly bright guy at Carnegie Mellon, who made Scribe,

104
00:06:45.259 --> 00:06:47.699
他称之为文档编译器。
which he called a document compiler.

105
00:06:47.699 --> 00:06:52.360
这是第一次有人把内容和
This is the first time someone got the separation between content and

106
00:06:52.360 --> 00:06:53.980
格式正确。
formatting right.

107
00:06:53.980 --> 00:06:59.000
抄写员是一件出色的作品，写字员可以把文件和
Scribe was a brilliant piece of work, Scribe could take documents and

108
00:06:59.000 --> 00:07:03.639
把它们放到各种输出设备上，它就有了一个非常
put them to all sorts of output devices, and it had an extremely

109
00:07:03.639 --> 00:07:08.038
很好的语言，有一个保留字符，那就是@符号。
nice language that there was one reserved character, which was the @ sign.

110
00:07:08.038 --> 00:07:10.970
您可能会说@，然后是环境的名称，以及
You'd say @, then the name of an environment, and

111
00:07:10.970 --> 00:07:16.019
然后你会有一些引用的东西，它们会受到那个环境的影响，而且
then you'd have some quoted stuff, which would be affected by that environment, and

112
00:07:16.019 --> 00:07:17.829
他有六套引用字符。
he had six sets of quoting characters.

113
00:07:17.829 --> 00:07:20.329
所以，你可以选择一个保证不会干扰
So, you could pick the one that's guaranteed not to interfere with

114
00:07:20.329 --> 00:07:22.540
你放进去的内容，还有
the content that you're putting inside, and

115
00:07:22.540 --> 00:07:24.670
你可以随心所欲地深嵌这些东西。
you could nest these things as deeply as you wanted.

116
00:07:24.670 --> 00:07:28.180
而且，如果筑巢太深，他有特殊的开始和形式
And, if the nesting got too deep, he had special forms with begin and

117
00:07:28.180 --> 00:07:32.980
结束了，所以他不关心意外匹配的东西。
end so that he didn't care about things accidentally matching.

118
00:07:32.980 --> 00:07:36.170
所以，对于像章节和章节这样的长篇文章，
So, for long things like chapters and sections,

119
00:07:36.170 --> 00:07:41.899
你可以这样把它们围起来，戈德法布看着这个
you could enclose them like that, and Goldfarb looked at this and

120
00:07:41.899 --> 00:07:44.740
去了，尖括号，我不知道你会做尖括号，太棒了。
went, angle brackets, I didn't know you could do angle brackets, that's great.

121
00:07:44.740 --> 00:07:48.192
所以，不幸的是，他从这里窃取了一些想法，
So, he stole some ideas from this, unfortunately,

122
00:07:48.192 --> 00:07:50.303
他没有窃取足够的创意。
he didn't steal enough ideas.

123
00:07:50.303 --> 00:07:56.180
所以，Scribe可以做的一件事就是参考书目。
So, one of the things that Scribe could do was bibliographies.

124
00:07:56.180 --> 00:08:00.572
因为它是在大学里开发的，所以它必须能够处理学术问题
Since it was developed in a university, it has to be able to deal with academic

125
00:08:00.572 --> 00:08:04.976
文件和诸如此类的东西，所以这里我们有一份技术报告和一本书的描述。
papers and such, so here we've got a description of a tech report and a book.

126
00:08:04.976 --> 00:08:10.072
我相信这是文件格式第一次
I believe that this is the very first time that a document format was

127
00:08:10.072 --> 00:08:15.911
被用作数据的表示，因为它看起来像JSON，对吗？
being used as a representation for data because it looks like JSON, right?

128
00:08:15.911 --> 00:08:20.586
它是用逗号分隔的键值对，它看起来非常合理
It's key value pair separated by commas, and it's really reasonable looking and

129
00:08:20.586 --> 00:08:23.939
甚至像细节这样的东西，就像这里一样等于1972。
even things like the details, like here equals 1972.

130
00:08:23.939 --> 00:08:27.740
全年没有报价
There are no quotes around the year

131
00:08:27.740 --> 00:08:31.029
因为在数字周围要求引号是很疯狂的，对吧？
because requiring quotes around numbers would be insane, right?

132
00:08:32.029 --> 00:08:36.970
它真的很好，所以GML社区有了这个想法
It's just really good, so the GML community got the idea

133
00:08:36.970 --> 00:08:41.240
从这个属性，但他们没有复制足够的好东西。
of attributes from this, but they didn't copy enough of the good stuff.

134
00:08:44.149 --> 00:08:47.980
令人遗憾的是Tim Berners Lee没有对文本有更多的了解
It's a shame that Tim Berners Lee hadn't been more knowledgeable about text

135
00:08:47.980 --> 00:08:53.350
处理系统，因为如果他把Web建立在Scribe的基础上
processing systems because, if he had based the Web on Scribe

136
00:08:53.350 --> 00:09:00.104
而不是在SGML上，我们今天的生活会好得多，但他没有这样做。
instead of on SGML, our lives today would be so much better, but he didn't do that.

137
00:09:00.104 --> 00:09:06.480
所以，我们可以看到径流激发了GML和Scribe，
So, we can see that Runoff inspires GML and Scribe,

138
00:09:06.480 --> 00:09:11.210
Scribe帮助启发了SGML，但还不够，最终导致了HTML。
and Scribe helps inspire SGML, but not enough, and eventually that leads to HTML.
