WEBVTT

1
00:00:00.000 --> 00:00:03.696
[音乐]
[MUSIC]

2
00:00:03.696 --> 00:00:06.450
&gt；&gt；Douglas Crockford：所以，我一直在考虑下一种语言。
&gt;&gt; Douglas Crockford: So, I've been thinking a lot about the next language.

3
00:00:06.450 --> 00:00:09.910
什么语言取代了JavaScript和
What's the language that replaces JavaScript and

4
00:00:09.910 --> 00:00:11.550
我真的希望有一种新的语言。
I really hope there is a next language.

5
00:00:11.550 --> 00:00:15.519
因为如果JavaScript是最后一种编程语言，
Because if JavaScript is the last programming language,

6
00:00:15.519 --> 00:00:16.989
那真的很可悲。
that would be really sad.

7
00:00:16.989 --> 00:00:18.120
不是吗？
Wouldn't it?

8
00:00:18.120 --> 00:00:22.399
我的意思是，对我们的孩子来说，对，我们需要给他们留下一种更好的语言。
I mean, for our kids, right,we need to leave them a better language.

9
00:00:23.449 --> 00:00:25.660
我们不能让JavaScript成为最后一种语言。
We can't allow JavaScript to be the last language.

10
00:00:25.660 --> 00:00:29.760
所以一定要有什么东西来继承它
So something is going to have to have to succeed it and

11
00:00:29.760 --> 00:00:34.850
我一直在寻找下一种语言，有什么迹象？
I've been searching for the next language, and what are the signs?

12
00:00:34.850 --> 00:00:36.450
我们怎么知道它在这里？
How will we know when it's here?

13
00:00:36.450 --> 00:00:39.710
这有点像等待弥赛亚，你怎么知道的？
And it's sort of like waiting the Messiah, how do you know?

14
00:00:39.710 --> 00:00:42.740
我不知道，但我正在寻找
And I don't know, but I'm looking for and

15
00:00:42.740 --> 00:00:45.850
然后我开始试着去理解它将会是什么。
then I'm starting to try to understand what it's going to be.

16
00:00:45.850 --> 00:00:47.659
我很有信心，它还没有到。
I'm confident, it's not here yet.

17
00:00:47.659 --> 00:00:48.479
实际上，我不知道。
Actually, I don't know that.

18
00:00:48.479 --> 00:00:54.229
它可能就在这里，但我只是还没有意识到它，但是
It might be it's here, but I just haven't recognized it yet, but

19
00:00:54.229 --> 00:00:57.268
有人告诉我，这是C#。
there are people who tell me, it C#.

20
00:00:57.268 --> 00:00:58.993
不，不。
No, no, no.

21
00:00:58.993 --> 00:01:00.871
或者是Java，它一直都在这里，不。
Or it's Java, it's been here the whole time, no, no.

22
00:01:00.871 --> 00:01:04.606
下一种语言是另一种语言，这就是事情，
The next language is another language and it's the thing,

23
00:01:04.606 --> 00:01:09.325
这是取代JavaScript的正确方法，但我们还没有看到它。
which is the right thing to replace JavaScript and we haven't seen it yet.

24
00:01:09.325 --> 00:01:12.599
但我想了很多关于它将会是什么以及它将会做什么。
But I think a lot about what it's going to be and what it's going to do.

25
00:01:14.569 --> 00:01:19.159
我相信，当它到来时，我们将一如既往地立即拒绝它
I am confident that when it arrives, we will reject it out of hand, as we always

26
00:01:19.159 --> 00:01:23.909
这样做，因为程序员和普通人一样情绪化和非理性。
do, because programmers are as emotional and irrational as normal people.

27
00:01:23.909 --> 00:01:28.879
我们认为我们不是，也许我们的配偶告诉我们不是，但这是真的。
We think that we're not and maybe our spouses tell us we're not, but it's true.

28
00:01:28.879 --> 00:01:33.659
我们是，我们对我们所做的事情的大部分想法都是基于情感，并且
We are and most of what we think about what we do is based on emotion, and

29
00:01:33.659 --> 00:01:37.640
不是理性的，即使我们想象它是另一种方式。
not on reason, even though we imagine it's the other way around.

30
00:01:37.640 --> 00:01:43.009
所以这听起来像是对我自己职业的疯狂指控，但我有一些
So this sounds like a wild charge to make of my own profession, but I have some

31
00:01:43.009 --> 00:01:48.969
这么说有很好的理由，我认为历史记录支持我这一点。
good reasons for saying this and I think the historical record backs me up on this.

32
00:01:48.969 --> 00:01:50.409
例如，
For example,

33
00:01:50.409 --> 00:01:54.308
花了一代人的时间才同意高级语言是个好主意。
it took a generation to agree that high-level languages were a good idea.

34
00:01:55.390 --> 00:01:59.287
回到早期，那时一切都是用汇编语言和
Back in the early days when everything was in assembly language and

35
00:01:59.287 --> 00:02:04.242
第一批高级语言正在开发中，如Fortran、COBOL等。
the first high-level languages were being developed, Fortran, COBOL and so on.

36
00:02:04.242 --> 00:02:08.290
谁会从这些语言的使用中获益最多？
Who would have most benefited from use of those languages?

37
00:02:08.290 --> 00:02:09.210
程序员。
The programmers.

38
00:02:10.949 --> 00:02:13.560
反对那些语言的人是谁？
Who was it who was opposed to those languages?

39
00:02:13.560 --> 00:02:14.469
是程序员。
It was the programmers.

40
00:02:14.469 --> 00:02:21.969
他们抱怨语言正在夺走他们的控制权。
They were complaining that the languages were taking control away from them.

41
00:02:21.969 --> 00:02:24.590
他们没有给他们所需要的表演。
That they didn't give them the performance that they needed.

42
00:02:24.590 --> 00:02:28.780
他们之所以想要呆在烂摊子里是有这些原因的，他们
They had all these reasons for why they wanted to stay down in the muck, that they

43
00:02:28.780 --> 00:02:34.810
不想在这些更有表现力，更有生产力的语言中得到提升。
didn't want to be elevated in these more expressive, productive languages.

44
00:02:35.829 --> 00:02:39.968
花了一代人的时间才同意后藤健二是个坏主意。
It took a generation to agree that goto was a bad idea.

45
00:02:39.968 --> 00:02:44.415
他在67年发表了他的信，这引发了一场争论，
Publishes his letter in 67 and that starts an argument,

46
00:02:44.415 --> 00:02:51.270
这真的持续了20年，所有的争论都是愚蠢的争论。
that literally goes on for 20 years and the arguments were all silly arguments.

47
00:02:51.270 --> 00:02:54.090
现在，我们需要Goto的表现。
Now, we need the performance of the goto.

48
00:02:54.090 --> 00:02:55.719
这是我表达自己的方式。
It's how I express myself.

49
00:02:55.719 --> 00:02:58.699
如果我不能使用Goto，我就不能做我自己。
I can't be me, if I can't use goto.

50
00:02:58.699 --> 00:03:01.599
我们有一个goto传统，我祖父用goto。
We have a goto tradition, my grandfather used goto.

51
00:03:01.599 --> 00:03:06.375
你不能拿我冰冷的死手，所有那些争论都是关于后藤的。
You can't take my cold dead hand, all of those arguments were all made about goto.

52
00:03:07.469 --> 00:03:10.590
花了一代人的时间才同意物件是个好主意。
It took a generation to agree that objects were a good idea.

53
00:03:10.590 --> 00:03:15.725
所以物体是1967年在挪威的Simula首次发现的-
So objects are first discovered in Simula in Norway in 1967-

54
00:03:15.725 --> 00:03:17.591
&gt；&gt；扬声器2：在冰下。
&gt;&gt; Speaker 2: Under the ice.

55
00:03:17.591 --> 00:03:19.538
&GT；&GT；道格拉斯·克罗克福德：对不起。&gt；&gt；扬声器2：在冰下。
&gt;&gt; Douglas Crockford: I'm sorry. &gt;&gt; Speaker 2: Under the ice.

56
00:03:19.538 --> 00:03:21.007
你说，他们被发现了。
You said, they were discovered.

57
00:03:21.007 --> 00:03:22.334
&gt；&gt；Douglas Crockford：嗯，在挪威。
&gt;&gt; Douglas Crockford: Well, in Norway.

58
00:03:22.334 --> 00:03:23.204
&gt；&gt；扬声器2：在冰下。
&gt;&gt; Speaker 2: Under the ice.

59
00:03:23.204 --> 00:03:26.960
&gt；&gt；Douglas Crockford：不，在奥斯陆。
&gt;&gt; Douglas Crockford: No, in Oslo.

60
00:03:26.960 --> 00:03:31.695
就像所有真正重要的创新一样，
And as always happens with the really important innovations,

61
00:03:31.695 --> 00:03:35.623
世界根本没有注意到，除了一个人，
the world took no notice at all, except for one guy,

62
00:03:35.623 --> 00:03:39.935
犹他州大学的研究生艾伦·凯。
a graduate student at the University of Utah, Alan Kay.

63
00:03:39.935 --> 00:03:43.849
然后，他把这个想法带到加州的施乐帕洛阿尔托研究中心(Xerox Parc)，
Who then takes this idea to Xerox PARC in California,

64
00:03:43.849 --> 00:03:46.721
认为这个物体的概念是这样的
thinking that this idea of objects is so

65
00:03:46.721 --> 00:03:53.530
令人难以置信的强大，他可以使用它作为儿童的编程语言。
incredibly powerful that he can use it as a programming language for children.

66
00:03:53.530 --> 00:03:58.479
孩子们可以用它来编程他们的个人便携设备。
That children can use to program their personal portable devices.

67
00:03:58.479 --> 00:04:00.849
他有很多远见，这是对的。
There was a lot of his vision, which was right.

68
00:04:00.849 --> 00:04:02.759
他的很多愿景我们还没有赶上，
A lot of his vision we haven't caught up to yet,

69
00:04:02.759 --> 00:04:04.900
我们仍然没有适合儿童的语言。
we still don't have the language for children.

70
00:04:04.900 --> 00:04:08.520
我认为我们还没有一种适合成年人的语言，但我们仍在努力，
I don't think we have a language for adults yet, but we're still working on it,

71
00:04:10.759 --> 00:04:14.104
但后来他们花了十年的时间开发这种语言
but they then spent a decade developing that language and

72
00:04:14.104 --> 00:04:18.199
在这方面做了非常出色的工作。
did a brilliant, brilliant job on it.

73
00:04:18.199 --> 00:04:23.860
因此，在80年代末，该行业有一个选择。
And so in the late 80s, the industry had a choice.

74
00:04:23.860 --> 00:04:25.870
我们将进入面向对象编程。
We're gonna go into object oriented programming.

75
00:04:27.509 --> 00:04:30.264
花了很长时间才到那里，但我们会做到的。
It took a long time to get there, but we're gonna do it.

76
00:04:30.264 --> 00:04:35.014
我们是不是要用Smalltalk-80，最好的设计之一
Are we gonna go with Smalltalk-80, one of the best designed

77
00:04:35.014 --> 00:04:40.069
历史上的编程语言，还是我们要用C+？
programming languages in history, or are we gonna go with C++?

78
00:04:40.069 --> 00:04:44.409
做出这个决定的人根本不明白
And the decision was made by people who fundamentally did not understand

79
00:04:44.409 --> 00:04:47.725
面向对象编程，他们选择了C+。
object-oriented programming and they chose C++.

80
00:04:47.725 --> 00:04:49.680
因为为了使用这种语言，
Because in order to use that language,

81
00:04:49.680 --> 00:04:53.620
您不需要了解任何有关面向对象编程的内容。
you did not need to understand anything about object oriented programming.

82
00:04:53.620 --> 00:04:57.930
这种语言在对象系统方面有一些根本错误。
That language got some things fundamentally wrong about object systems.

83
00:04:57.930 --> 00:05:00.829
不幸的是，这种语言极具影响力
Unfortunately, the language has been extremely influential and

84
00:05:00.829 --> 00:05:05.949
为此后发生的一切奠定了基础。
has set the mold for virtually everything that's happened ever since.

85
00:05:05.949 --> 00:05:07.689
我不知道你能不能赶上Smalltalk，
I don't know if are ever going to catch up to Smalltalk,

86
00:05:09.209 --> 00:05:12.069
然后两代人才同意lambdas是个好主意。
then it took two generations to agree that lambdas were a good idea.

87
00:05:13.439 --> 00:05:19.959
所以，Alan Kay是一个Smalltalk的人，他从写作开始
So, Alan Kay who is a Smalltalk guy, he started by writing

88
00:05:19.959 --> 00:05:24.694
在Data General Mini计算机上用Nova Basic编写的一个小程序，它
a little program in NOVA basic on a Data General Mini Computer, which

89
00:05:24.694 --> 00:05:29.639
展示了他奇怪的小语言，他开始带着这个想法巡回演出。
demonstrated his weird little language, and he started touring with this idea.

90
00:05:29.639 --> 00:05:34.610
把它带到实验室和大学，他参观了麻省理工学院。
Taking it to labs and universities, and he visited MIT.

91
00:05:34.610 --> 00:05:39.209
麻省理工学院的非常聪明的人，他告诉他们他的新语言，但是
Very smart guys at MIT and he's telling them about his new language, but

92
00:05:39.209 --> 00:05:41.199
它仍然是早期的对象去编程和
it's still early in object going to programming and

93
00:05:41.199 --> 00:05:44.879
他没有我们现在所拥有的词汇来描述正在发生的事情。
he doesn't have the vocabulary that we have now to describe what's going on.

94
00:05:44.879 --> 00:05:48.269
所以他不能说你在一个对象上调用了一个方法，
So he couldn't say you invoke a method on an object,

95
00:05:48.269 --> 00:05:51.050
因为还没有人知道要这么说。
cuz nobody knew to say that yet.

96
00:05:51.050 --> 00:05:54.040
因此，他描述了它，当你向一个对象发送消息时。
So he described it, as you send a message to an object.

97
00:05:56.220 --> 00:06:00.370
嗯，麻省理工学院的人听他说，好吧，你不是真的发送
Well, the guys at MIT listening to him say, well, you're not actually sending

98
00:06:00.370 --> 00:06:05.389
一条信息，你正在做一个方向内的子程序指示。
a message, you're making a sub routine indication within direction.

99
00:06:06.490 --> 00:06:08.500
但如果你真的发出了信息呢？
But what if you did send a message?

100
00:06:08.500 --> 00:06:12.956
这就开始了对演员模型和演员模型的研究，
And that started research in the actor model and the actor model,

101
00:06:12.956 --> 00:06:17.735
实际上，这些实体在不同的系统中运行
you actually have these entities that are running in separate systems

102
00:06:17.735 --> 00:06:20.339
可以互相发送信息。
that can send messages to each other.

103
00:06:20.339 --> 00:06:24.230
这基本上就是演员和想出这个主意的人，
That's basically what actors are and the guy who came up with this,

104
00:06:24.230 --> 00:06:27.730
卡尔·休伊特(Carl Hewitt)就是其中之一，他非常聪明。
Carl Hewitt, is one of these guys who's so amazingly smart.

105
00:06:27.730 --> 00:06:31.290
就像他出生在范式转变的另一边。
It's like he was born on the other side of the paradigm shift.

106
00:06:31.290 --> 00:06:35.659
当他谈论东西的时候，人们听不懂他在说什么。
When he talks about stuff, people cannot understand what he's saying.

107
00:06:35.659 --> 00:06:39.970
他很清楚，他很有口才，他说得真的很好，但是
He's very clear, he's very eloquent, he speaks really well, but

108
00:06:39.970 --> 00:06:42.220
他是从一个参照系里说的，这就是
he's talking from a frame of reference, which is so

109
00:06:42.220 --> 00:06:46.040
对其他人类来说没有人能理解他。
foreign to the rest of humanity that nobody understands him.

110
00:06:46.040 --> 00:06:48.699
包括麻省理工学院的其他人，他们都非常聪明
Including the other people at MIT, they were all very smart and

111
00:06:48.699 --> 00:06:51.060
他们都很尊重卡尔，但是
they all had a lot of respect for Carl, but

112
00:06:51.060 --> 00:06:53.850
他们搞不懂他对所有这些演员都在说些什么。
they couldn't figure out what he was raving about with all these actors.

113
00:06:53.850 --> 00:06:58.550
因此，他们中的一对，苏斯曼和斯蒂尔，决定我们需要建造一些有序的东西
So a couple of them, Sussman and Steele, decide we need to build something in order

114
00:06:58.550 --> 00:07:01.089
去理解卡尔说的是什么。
to understand what it is that Carl's talking about.

115
00:07:01.089 --> 00:07:07.170
因此，他们首先采用LISP并将其重写为一种语言，该语言
So they start by taking LISP and rewriting it into a language which

116
00:07:07.170 --> 00:07:12.220
对参与者模型进行建模，并且他们没有完全实现参与者模型。
models the actor model, and they didn't fully implement the actor model.

117
00:07:12.220 --> 00:07:17.920
所以他们从来没有弄明白，但是他们创造的语言
So they never did figure it out, but the language that they created

118
00:07:17.920 --> 00:07:23.310
被称为计划，他们意外地发现
was called Scheme and they had accidentally discovered

119
00:07:23.310 --> 00:07:27.509
带有词法闭包的函数和我们今天一直在做的所有东西。
functions with lexical closure and all the stuff that we've been working on today.

120
00:07:27.509 --> 00:07:29.680
所以，事实上你可以有更高阶的函数，
So, the fact that you could have higher order functions,

121
00:07:29.680 --> 00:07:33.670
返回函数的函数以及所有意外发生的事情，
functions that return functions and all that stuff happened happened by accident,

122
00:07:33.670 --> 00:07:36.110
试图弄清楚卡尔·休伊特在说什么。
trying to figure out what Carl Hewitt was talking about.

123
00:07:36.110 --> 00:07:42.769
这可能是编程史上最重要的发现。
And that is maybe the most important discovery in the history of programming.

124
00:07:42.769 --> 00:07:47.350
就像经常发生的那样，世界根本没有注意到这一点
And as always happens, the world took no notice of it at all and

125
00:07:47.350 --> 00:07:52.810
它只是在麻省理工学院闲坐了很多年，没有任何进展，只是现在，
it just sat around at MIT for years and years going nowhere and is only now,

126
00:07:52.810 --> 00:07:57.504
终于过了40年，终于走进了主流。
finally after 40 years, finally coming to the mainstream.

127
00:07:57.504 --> 00:08:01.732
它正在成为主流，因为它实际上是一个非常好的想法
And it's coming to the mainstream, because it was actually a really good idea and

128
00:08:01.732 --> 00:08:02.720
它的时候到了。
its time has come.

129
00:08:02.720 --> 00:08:03.620
我们现在真的很需要它。
We really need it now.

130
00:08:04.930 --> 00:08:07.259
所以这些事情花了这么长时间的原因，
So the reason these things take so long,

131
00:08:09.180 --> 00:08:13.009
每件事至少需要一代人的时间，因为我们不会改变主意。
everything takes at least a generation, is because we don't change minds.

132
00:08:14.699 --> 00:08:19.930
我们必须等待一代人退休或死亡之前
We have to wait for a generation to retire or die before

133
00:08:19.930 --> 00:08:24.870
我们可以在下一个新想法上获得临界质量，这就是进展的方式。
we can get critical mass on the next new idea and that's the way progress goes.

134
00:08:24.870 --> 00:08:28.990
我们认为这是一个极具创新性的行业，在某些方面确实如此，但是
We imagine this is an extremely innovative industry, and in some ways it is, but

135
00:08:28.990 --> 00:08:31.019
在某些方面，我们和其他人一样。
in some ways, we're just like everybody else.

136
00:08:32.059 --> 00:08:33.465
所以，我经历了Goto的事情。
So, I lived through the goto thing.

137
00:08:33.465 --> 00:08:37.783
我记得当时发生的事情和所有的争论，他们真的
I remember when that was happening and all the arguments, and they were really

138
00:08:37.783 --> 00:08:41.720
情绪愤怒的争论，而所有的争论都来自情感。
emotional angry arguments, and all the arguments were from emotion.

139
00:08:41.720 --> 00:08:46.200
很少有来自事实的争论
There was very little argument from fact and

140
00:08:46.200 --> 00:08:50.980
它只是继续，然后它变得安静。
it just went on, and on, and on, and on, and then it got quiet.

141
00:08:52.159 --> 00:08:54.620
就像是，他们走了吗？
It was like, are they gone?

142
00:08:56.220 --> 00:08:57.379
我们现在可以摆脱Goto了吗？
Can we get rid of the goto now?

143
00:08:58.620 --> 00:09:01.559
我们做到了，我们摆脱了它，它不见了。
And we did, we got rid of it and it's gone.

144
00:09:01.559 --> 00:09:06.066
我们不会错过所有的承诺
And we're not missing it and all of the promises

145
00:09:06.066 --> 00:09:09.990
世界末日即将来临，如果我们除掉Goto或者
that the world was going to end, if we took rid of goto or

146
00:09:09.990 --> 00:09:12.659
程序员的生活将变得更加悲惨。
the lives of programmers are gonna be made more miserable.

147
00:09:12.659 --> 00:09:15.019
这些都不是真的，我们没有错过。
None of that turned out to be true, we're not missing it.

148
00:09:15.019 --> 00:09:16.889
没有它我们做得很好。
We're doing great without it.

149
00:09:16.889 --> 00:09:21.176
事实上，我们的一些语言可能有一点太多的Goto留在他们，
In fact, some of our languages have maybe a little bit too much goto left in them,

150
00:09:21.176 --> 00:09:23.009
但我们还过得去。
but we're getting by.

151
00:09:23.009 --> 00:09:24.977
所以，事实证明我们从来都不需要Goto。
So, it turns out we never needed goto.

152
00:09:24.977 --> 00:09:25.499
不需要。
Don't need it.

153
00:09:25.499 --> 00:09:27.200
没有它我们做得更好。
We're doing better without it.

154
00:09:27.200 --> 00:09:33.779
事实上，真正发生的是摆脱了后藤，
And in fact, what actually happened was by getting rid of goto,

155
00:09:33.779 --> 00:09:37.639
它使编写更复杂的程序变得更容易。
it made it easier to write programs of greater complexity.

156
00:09:38.889 --> 00:09:44.610
因为如果您唯一的控制结构是GOTO和条件GOTO，
Because if your only control construct is goto and conditional goto,

157
00:09:44.610 --> 00:09:50.179
在程序变得无法管理之前，程序的复杂程度是有限的。
there's a limit to how complex a program can get before it comes unmanageable.

158
00:09:50.179 --> 00:09:54.937
通过去掉Goto，我们可以在更大的程序中做得更好
And by getting rid of goto, we could do better with larger programs and

159
00:09:54.937 --> 00:10:00.070
我们可以在编写软件方面更好地实现我们的雄心壮志。
we could do better at achieving our ambitions in terms of writing software.

160
00:10:01.070 --> 00:10:05.552
所以，反对后藤的人就是那些
So, the people who are arguing against goto were the people who would have

161
00:10:05.552 --> 00:10:06.936
受益于Goto。
benefited from goto.

162
00:10:06.936 --> 00:10:11.551
他们从摆脱Goto中受益，而且总是这样，而且
They're benefited from getting rid of goto and it is always like that, and

163
00:10:11.551 --> 00:10:14.190
我希望永远都是这样。
I expect it will always be like that.

164
00:10:14.190 --> 00:10:19.029
所以在寻找下一种语言时，我希望它能有所不同
So in looking for the next language, I'm looking for it to be different in

165
00:10:19.029 --> 00:10:24.009
一些重要的方式，我希望它会因为这些差异而被钉在十字架上。
some important ways and I'm expecting it to be crucified for those differences.
