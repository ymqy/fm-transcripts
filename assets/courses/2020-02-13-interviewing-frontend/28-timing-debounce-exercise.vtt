WEBVTT

1
00:00:00.260 --> 00:00:06.299
计时和 JavaScript 这就是我不想说
Timing and JavaScript, this is,
I try not to say which

2
00:00:06.299 --> 00:00:11.740
公司给了我这些问题，因为我和他们谈过很多。
companies gave me these questions, because
there's a lot of them that I've talked to.

3
00:00:11.740 --> 00:00:14.070
但这是一家真正的公司，是一个很大的公司。
But this is a real company,
it's a big one.

4
00:00:14.070 --> 00:00:15.509
这一点都没有帮助
That's not helpful at all.

5
00:00:15.509 --> 00:00:19.170
这是我在时间上所解决的一个真正问题。
This is a real problem that I
have solved before about timing.

6
00:00:19.170 --> 00:00:20.660
但要开始计时
But to start with timing,

7
00:00:20.660 --> 00:00:24.660
如何在 JavaScript中调度内容 ?
what do we know about how to
schedule things in JavaScript?

8
00:00:24.660 --> 00:00:30.250
所以，让我们说我想要每 200 毫秒发生的事情。
So let's say I wanted something
to happen every 200 milliseconds.

9
00:00:30.250 --> 00:00:31.530
在 JavaScript中如何执行此操作 ?
How would I do that in JavaScript?

10
00:00:31.530 --> 00:00:35.975
假设我在 JavaScript中每 200 毫秒都要打印 hello world
Let's say I wanna print hello world
every 200 milliseconds in JavaScript,

11
00:00:35.975 --> 00:00:37.110
我要怎么做
how would I do that?

12
00:00:37.110 --> 00:00:38.280
>> setInterval。 >> setInterval，这是正确的。
&gt;&gt; setInterval.
&gt;&gt; setInterval, that's right.

13
00:00:38.280 --> 00:00:42.314
setInterval在循环之前会发生某种情况，直到您将其取消为止。
setInterval, have something happen
on a loop until you cancel it.

14
00:00:42.314 --> 00:00:47.174
所以如果我说 setInterval ，它会在 x 毫秒后执行一些功能。
So if I say setInterval, it'll execute
some function at x milliseconds.

15
00:00:47.174 --> 00:00:52.011
setTimeout 表示它将等待任何秒数， 500，不管您传入什么，
setTimeout means it'll wait whatever
seconds, 500, whatever you pass in, and

16
00:00:52.011 --> 00:00:53.631
那就能起作用了
then it'll that function.

17
00:00:53.631 --> 00:00:57.250
这就是在 JavaScript中进行计时的两种方法。
So those are the two ways of
doing timing in JavaScript.

18
00:00:57.250 --> 00:01:00.387
我们将讨论请求动画框架
We'll talk about request
animation frame for

19
00:01:00.387 --> 00:01:06.040
但我不想把这些都混在一起
a different sort of timing, but
I didn't wanna mix that up into here.

20
00:01:06.040 --> 00:01:10.733
好吧，那么说时间，什么是借项 ?
All right, so talking about timing,
what is debounce?

21
00:01:10.733 --> 00:01:17.480
> > 这是一种节流的方法，所以你不会做得太多了吧。
&gt;&gt; It's a way to throttle things, so
you don't do it too much, I guess.

22
00:01:17.480 --> 00:01:21.590
> > 嗯，那是正确的，它是一种减缓某些东西的方法。
&gt;&gt; Yeah, that's exactly right,
it's a way of slowing something down.

23
00:01:21.590 --> 00:01:26.150
一个很好的思维方式是自动完成搜索。
A good way of thinking about
debounce is autocomplete search.

24
00:01:27.359 --> 00:01:31.474
我不希望我输入的每个字符都要触发请求。
I don't want every single character
that I type to be firing off requests.

25
00:01:31.474 --> 00:01:33.912
所以如果我打字，我如何变得像杰姆一样高，
So if I'm typing,
how do I become tall like Jem,

26
00:01:33.912 --> 00:01:35.877
那就意味着只要那句是
that means as long as that sentence is,

27
00:01:35.877 --> 00:01:39.763
意思是我每一个请求都要解雇所以我们要去处理
that means I'm firing off every single
request, so we wanna debounce that.

28
00:01:39.763 --> 00:01:43.409
所以我们想把 debunce 设定在 500 毫秒内
So we wanna set the debounce to,
say, 500 milliseconds.

29
00:01:43.409 --> 00:01:45.302
也就是说每当有人停止打字
So that means,
whenever someone stops typing,

30
00:01:45.302 --> 00:01:46.926
那就会被开除了
that's when the debounce is gonna fire.

31
00:01:48.103 --> 00:01:50.129
让我们开始行动
So let's implement debounce.

32
00:01:50.129 --> 00:01:56.150
我不久前才在电话屏幕上找到这个
I actually got this one on
a phone screen not too long ago.

33
00:01:56.150 --> 00:01:58.340
所以我不仅仅是让这些问题难以解决。
So I'm not just making these
questions up to be hard.

34
00:01:58.340 --> 00:02:00.430
这些都是人们所问的真正的问题。
These are real questions that people ask.

35
00:02:00.430 --> 00:02:05.600
这对一个人的理解很有吸引力
And it's a fascinating insight
into someone's understanding,

36
00:02:05.600 --> 00:02:07.361
设定我的 debunce
setting my debounce.

37
00:02:07.361 --> 00:02:13.180
我给你一个提示，你需要 setInterval 或 setTimeout。
I'll give you a hint, you're gonna
need either setInterval or setTimeout.

38
00:02:13.180 --> 00:02:17.829
我可能会用 setTimeout ，但你会做的。
I would probably use setTimeout,
but you do you.
