WEBVTT

1
00:00:00.380 --> 00:00:03.395
让我们从一些知识开始。
Let's start with a bit of knowledge.

2
00:00:03.395 --> 00:00:05.389
我们谈谈弦吧
Let's talk about strings.

3
00:00:05.389 --> 00:00:08.134
字符串有什么有趣的地方 ?
What is something
interesting about strings?

4
00:00:11.789 --> 00:00:14.007
有什么有趣的事吗
Anything interesting at all?

5
00:00:14.007 --> 00:00:15.512
>> 它们是基本类型。
&gt;&gt; They're primitive type.

6
00:00:15.512 --> 00:00:18.329
> > 嗯，它们是原始类型的，是的。
&gt;&gt; Yeah, they're primitive type, yeah.

7
00:00:18.329 --> 00:00:21.109
这也是骗人的，因为 JavaScript 喜欢忽悠你。
Which is also deceiving because
JavaScript likes to trick you.

8
00:00:21.109 --> 00:00:22.687
这是一种原始类型但
It's a primitive type, but

9
00:00:22.687 --> 00:00:26.629
还有一些方法在我可以调用的字符串上。
there is also methods that
are on a string that I can call.

10
00:00:26.629 --> 00:00:30.364
事实上，这些是一些有用的字符串方法。
In fact, these are some useful methods for
strings.

11
00:00:30.364 --> 00:00:34.177
分割非常有用，因为使用分割可以将字符串转换为数组，并且
Split is useful because using split I
can turn a string into an array, and

12
00:00:34.177 --> 00:00:38.070
一旦我有了阵列我就可以为所欲为了
then once I have the array I
can do whatever I want with it.

13
00:00:38.070 --> 00:00:40.368
LowerCase 如果你要处理大量的字符串
LowerCase if you're dealing
with a lot of strings,

14
00:00:40.368 --> 00:00:43.505
如果你在比较字符串的情况下要把它们都用小写字母
having to putting them all in
lowercase if you're comparing strings,

15
00:00:43.505 --> 00:00:45.662
那样的话就没什么用了
things like that, just so
useful nothing, no.

16
00:00:45.662 --> 00:00:50.445
子串或子 STR，具体取决于您希望用于获取部分
Substring or sub STR, depending which
one you like to use to get a part of

17
00:00:50.445 --> 00:00:54.670
一个字符串从另一个字符串中开始，并且开头是惊人的。
a string out of another string and
starts with is amazing.

18
00:00:54.670 --> 00:00:58.722
这不是几年前的问题了
It wasn't around to a couple of years ago.

19
00:00:58.722 --> 00:01:01.445
在过去的时候也许正则表达式和所有这些东西的开头都是
In the old days, maybe regular expressions
and all this stuff starts with is so

20
00:01:01.445 --> 00:01:02.439
最棒的结局
great ends with this.

21
00:01:02.439 --> 00:01:06.784
有一些有用的方法也许我想说的是关于弦的事情
There's such useful methods, probably the
main thing I'd say to know about strings,

22
00:01:06.784 --> 00:01:08.204
这些字符串是不可改变的
the strings are immutable.

23
00:01:08.204 --> 00:01:09.890
一旦创建字符串，就无法更改它。
Once you create a string,
you can't change it.

24
00:01:09.890 --> 00:01:12.254
如果你改变了它，你实际上是在创造另一个字符串。
And if you do change it,
you're actually creating another string.

25
00:01:12.254 --> 00:01:14.611
重要的是要知道如果你缺少太多的字符串
And it's important to know that if
you're missing a lot of strings,

26
00:01:14.611 --> 00:01:16.530
你只是在创造更多的字符串
you're actually just creating more and
more strings.

27
00:01:16.530 --> 00:01:20.012
所以如果你看图表，如果你在做一个记忆档案，你会看到
So if you watch the graph, if you're
doing a memory profile, you'll see

28
00:01:20.012 --> 00:01:24.021
如果你创造了大量的字符串，那么这个园丁会向上，向下，向上和向下。
the garselecter go up and down, and up and
down if you're creating a lot of strings.

29
00:01:24.021 --> 00:01:27.373
通常，将字符串转换为数组，然后对其进行处理
Generally, it's useful to turn a string
into an array and then manipulate it and

30
00:01:27.373 --> 00:01:30.147
将它返回到字符串中而不是创建串字符串。
turn it back into a string rather
than creating a bunch of strings.
