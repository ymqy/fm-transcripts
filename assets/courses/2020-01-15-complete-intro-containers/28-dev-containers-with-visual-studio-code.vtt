WEBVTT

1
00:00:00.060 --> 00:00:02.850
现在，让我们使用 Visual Studio 代码进入 dev 容器。
Let's get into dev containers
with Visual Studio Code now.

2
00:00:02.850 --> 00:00:06.419
作为微软的一个项目经理，在 Visual Studio Code上工作。
So being a program manager at Microsoft,
works on Visual Studio Code.

3
00:00:06.419 --> 00:00:08.869
我很想告诉你这事但是
I'm obviously a little incentivized
to tell you about this, but

4
00:00:08.869 --> 00:00:10.560
我也很兴奋。
I'm also very excited about it.

5
00:00:10.560 --> 00:00:13.630
我觉得这是关于 Visual Studio 代码的最酷的特点之一
I think this is one of the coolest
features about Visual Studio Code,

6
00:00:13.630 --> 00:00:16.410
这就是为什么不能把它关起来
that's why just cannot shut up about it.

7
00:00:16.410 --> 00:00:20.679
这些叫做 " 开发容器 "
So these are called dev containers that
we're gonna get into with regards to

8
00:00:20.679 --> 00:00:21.888
Visual Studio 代码。
Visual Studio Code.

9
00:00:21.888 --> 00:00:24.007
首先，如果你不是 Visual Studio Code 用户，
So first of all,
if you're not a Visual Studio Code user,

10
00:00:24.007 --> 00:00:25.998
我只邀请你去下载
I'm just gonna invite you to go ahead,
download it and

11
00:00:25.998 --> 00:00:29.710
跟我一起试一下如果你不喜欢的话你可以把它卸了
try it out with me and you can uninstall
it afterwards if you don't like it.

12
00:00:29.710 --> 00:00:33.384
我想说的另一件事是 Burke Holland 有一个免费的课程
And the other thing I wanted to call out
is Burke Holland has a free course on

13
00:00:33.384 --> 00:00:36.969
前端是如何使用 Visual Studio 代码进行级别的主控。
Frontend Masters of how to level
up with Visual Studio Code.

14
00:00:36.969 --> 00:00:41.039
真的很棒完全可以和你的朋友分享
It's really great and totally free so you
can totally share it with your friends and

15
00:00:41.039 --> 00:00:41.700
同事。
coworkers.

16
00:00:43.890 --> 00:00:47.100
好了我们要和远程容器一起工作
Okay, so we're gonna be working with
something called the remote containers

17
00:00:47.100 --> 00:00:47.609
扩展。
extension.

18
00:00:48.689 --> 00:00:51.259
所以有几个远程扩展
So there are several remote
extensions that have come out of

19
00:00:51.259 --> 00:00:52.270
最近是 Visual Studio 代码。
Visual Studio Code recently.

20
00:00:52.270 --> 00:00:58.369
其中一个是 WSL，因此您可以将 Visual Studio 代码连接到 WSL。
One of them is WSLs, so you can have your
Visual Studio Code connected to WSL.

21
00:00:58.369 --> 00:01:01.719
其中一个是 SSH ，所以您可以说任何可以 SSH 的框，
One of them is SSH, so
you can say any box that you can SSH into,

22
00:01:01.719 --> 00:01:05.652
您现在也可以连接到 Visual Studio 代码，这真的很酷，但是
you can now connect to Visual Studio Code
too, which is really cool, but

23
00:01:05.652 --> 00:01:10.805
让我进入远程容器
let me get into the remote
containers one So

24
00:01:10.805 --> 00:01:14.724
我们会为其中一个项目创建第二个 Docker 文件
we're gonna create a second Docker
file for one of these projects,

25
00:01:14.724 --> 00:01:18.643
如果你能挑选其中的任何一个
it doesn't really matter which one so
you can pick any one of these,

26
00:01:18.643 --> 00:01:20.109
节点的其中一个节点。
the one of the node ones.

27
00:01:20.109 --> 00:01:26.260
所以，让我们进入我们的项目文件夹。
So let's go ahead and
go into our projects folder.

28
00:01:26.260 --> 00:01:28.750
我们不能在雨果里这么做我们要去做
We're not gonna do this in Hugo,
we're gonna do it in.

29
00:01:28.750 --> 00:01:31.349
让我们来做这个吧
Let's do, which one is this?

30
00:01:31.349 --> 00:01:35.150
让我们来做一个更复杂节点的应用，好吗 ?
Let's do this one, the
more-complicated-node application, okay?

31
00:01:35.150 --> 00:01:37.909
这个有一个 Docker 文件，做很多好事。
So this one has a Docker file
that does lots of good things.

32
00:01:37.909 --> 00:01:40.270
这就是我们生产的产品，对吧 ?
And this is our production
one that we have, right?

33
00:01:41.829 --> 00:01:44.509
所以我们要在这里创建另一个目录
So we're gonna create another
directory here inside of

34
00:01:44.509 --> 00:01:46.640
一个更复杂节点的应用
a more-complicated-node app one.

35
00:01:46.640 --> 00:01:48.120
再一次你可以在他们的任何一个
And again,
you could do this in anyone of them,

36
00:01:48.120 --> 00:01:50.106
不必是更复杂节点的应用
doesn't have to be
the more-complicated-node app.

37
00:01:51.579 --> 00:01:53.353
这就是我现在要做的
That's just what I'm
gonna do in right now.

38
00:01:53.353 --> 00:01:56.729
我要你在这里创建一个新的文件夹
I want you to create a new folder in here.

39
00:01:56.729 --> 00:02:01.381
这个要叫 . devcontainer，很重要的
This one is gonna be called .devcontainer,
it's very important that this be

40
00:02:01.381 --> 00:02:05.891
尤其如此，因为 Visual Studio Code 正在寻找点或
called particularly that, because
Visual Studio Code is looking for dot or

41
00:02:05.891 --> 00:02:10.943
.devcontainer 中的句点 devcontainer ，
period devcontainer
Inside of .devcontainer,

42
00:02:10.943 --> 00:02:13.781
我希望您输入一个新文件，该文件将成为 Docker 文件。
I want you to put a new file,
which is gonna be a Docker file.

43
00:02:15.930 --> 00:02:18.687
您可以在此处定义开发环境的外观。
This is where you would define what
your development environment looks.

44
00:02:20.656 --> 00:02:26.299
所以我们就在这里说我们要从 12 号节点开始
So let's just say for our sake here, we're
gonna be doing it from node 12-stretch.

45
00:02:29.603 --> 00:02:33.038
我们需要一些东西安装在这里。
And we need a couple
things installed in here.

46
00:02:33.038 --> 00:02:39.188
所以我们要说的是 " RUN npm " 安装 - 全球，
So we're gonna say,
RUN npm install --global,

47
00:02:41.099 --> 00:02:43.465
埃斯特特和漂亮的人
eslint and prettier.

48
00:02:43.465 --> 00:02:46.864
让我们说，这些是我们特定项目需要的两个工具。
Let's say that those are the two tools
that we need for our particular project.

49
00:02:46.864 --> 00:02:49.049
但你可以在这里放任何东西
But you can put anything in here,

50
00:02:49.049 --> 00:02:53.197
你可以把堆跟踪和各种东西放在这里
you can put stack tracing and
all sorts of stuff in here as well.

51
00:02:55.461 --> 00:02:57.659
您需要的任何依赖关系。
Any sort of dependency that you'll need.

52
00:02:57.659 --> 00:02:58.560
这对现在是好的
This is good for now though,

53
00:02:58.560 --> 00:03:01.042
这就是我们要把集装箱装好然后跑的所有东西
this is everything that we're gonna need
to get our container up and running.

54
00:03:01.042 --> 00:03:02.520
请注意我不打算在这里放个 CMD
Notice that I'm not
gonna put a CMD in this,

55
00:03:02.520 --> 00:03:06.289
因为它不是关于运行任何特定命令的，对吧 ?
because it's not actually about
running any particular command, right?

56
00:03:06.289 --> 00:03:09.724
是关于建立一个环境的问题。
It's about setting up an environment.

57
00:03:09.724 --> 00:03:13.819
好的，我们需要为 Docker 文件执行所有操作。
Okay, so that 's all we need to do for
our Docker file.

58
00:03:13.819 --> 00:03:18.908
然后在该 Docker 文件的目录下，在 devcontainer 中
Then next to that Docker file,
same directory, in the devcontainer

59
00:03:18.908 --> 00:03:24.454
我们将创建另一个名为 devcontainer.json的文件。
directory we're gonna create another
file called devcontainer.json.

60
00:03:24.454 --> 00:03:30.229
现在，关键在这里，不是 .devcontainer.json，它叫 devcontainer.json。
Now, key here, not .devcontainer.json,
it's called devcontainer.json.

61
00:03:30.229 --> 00:03:34.156
此处的名称非常重要，因此请将其命名为 devcontainer.json。
The name here is quite important so please
make it called the devcontainer.json.

62
00:03:34.156 --> 00:03:39.253
它必须在 .devcontainer 目录中。
And it must be in
the .devcontainer directory.

63
00:03:41.293 --> 00:03:44.826
这里我们可以给 Visual Studio 代码提供一些信息
And here we can give a bunch of
information to Visual Studio Code so

64
00:03:44.826 --> 00:03:47.334
这特别适用于 Visual Studio Code，
this is specifically for
Visual Studio Code,

65
00:03:47.334 --> 00:03:50.305
为您的项目设置的所有内容。
of all the things that you want set up for
your project.

66
00:03:50.305 --> 00:03:51.703
所以你可以给它一个名字
So you can give it a name, and

67
00:03:51.703 --> 00:03:55.659
这样你就能从不同的窗户里看出来
that's the way you can kinda tell
it apart from different windows.

68
00:03:55.659 --> 00:03:57.629
所以我们要把这个叫做 Froncend Masters 样本
So we're gonna call this one
the Frontend Masters Sample, but

69
00:03:57.629 --> 00:03:58.719
你可以随便给它打个电话
you can call it whatever you want.

70
00:04:00.492 --> 00:04:01.663
我们会关门的
We'll close that.

71
00:04:04.782 --> 00:04:07.281
您要将其指向 Docker 文件所在的位置，因此
You're gonna point it to
where the Docker file is, so

72
00:04:07.281 --> 00:04:10.139
您可以在任何位置放置 Docker 文件。
you can put your Docker
file anywhere you want.

73
00:04:10.139 --> 00:04:13.747
我们正好在这里我要把它叫做 Dockerfile 的库
Ours is just happens to be here, I'm gonna
call it Dockerfile cuz that's where it is.

74
00:04:15.614 --> 00:04:22.918
appPort，这在端口 3000 上运行，因为这是我们做的。
The appPort, This runs on port 3000,
because that's where we made it.

75
00:04:22.918 --> 00:04:25.610
但你可以在这里展示你需要的各种不同港口。
But you could expose all of the various
different ports here that you need to.

76
00:04:25.610 --> 00:04:30.160
所以我可以把 8080 和 blah blah 之类的东西
So I can put 8080 and blah blah blah,
all that kind of stuff,

77
00:04:30.160 --> 00:04:33.548
但现在我们只需要 3000口
but for now we're just gonna do port 3000.

78
00:04:33.548 --> 00:04:39.129
运行程序，所以这是我们运行应用程序的方式。
runArgs, so this is how we're
going to run the application.

79
00:04:39.129 --> 00:04:44.735
我们要做 -u 公共节点来运行节点。
We're gonna do -u common node to run node.

80
00:04:44.735 --> 00:04:47.435
然后我们要做准备
And then here, we're gonna do settings.

81
00:04:49.360 --> 00:04:52.396
在设置中，我们可以为以下项指定不同的设置 :
And inside of settings, we can specify
a bunch of different settings for

82
00:04:52.396 --> 00:04:53.610
Visual Studio 代码本身。
Visual Studio Code itself.

83
00:04:54.730 --> 00:04:57.870
所以，让我们说，非常重要的是，我们希望所有用户都能
So let's say that it was very important
that we wanted all of our users to

84
00:04:57.870 --> 00:04:59.240
使用特定主题。
use a particular theme.

85
00:05:00.319 --> 00:05:03.560
我不知道你为什么要这么做但你可以的对吧
I don't know why you would do that,
but you can, right?

86
00:05:03.560 --> 00:05:06.206
我们要这么做我们会说工作台
So we're gonna do that,
we're gonna say workbench,

87
00:05:06.206 --> 00:05:09.845
这样你就能自动完成这些了吧
that's nice that lets you kind of
autocomplete all these as well, right?

88
00:05:09.845 --> 00:05:12.348
当您在此处执行 workbench.colorTheme 时。
When you do workbench.colorTheme
right there.

89
00:05:12.348 --> 00:05:16.163
这里有我所有的人都知道了它知道他们是什么
And here it has all of mine listed out,
cuz it knows what they are.

90
00:05:16.163 --> 00:05:19.548
我们要从另一个最喜欢的
And we're gonna do a theme
from one of our other favorite

91
00:05:19.548 --> 00:05:23.740
Fronpend Masters 教练， Sarah Drasner ，称夜猫头鹰。
Frontend Masters instructors,
Sarah Drasner, called Night Owl.

92
00:05:28.891 --> 00:05:34.980
好了我们要做终端了
Okay, and then we're gonna do terminal,
.integrated,

93
00:05:37.612 --> 00:05:43.975
.shell， .linux。
.shell, .linux.

94
00:05:43.975 --> 00:05:45.250
我们为什么要这么做
Now why are we gonna do this?

95
00:05:46.639 --> 00:05:50.209
当你进入容器后一旦你进入容器
Because once you get into the container,
once you're inside the container,

96
00:05:50.209 --> 00:05:54.449
针对它编程，您想能够指定哪个 shell 是正确的。
programming against it, you wanna be able
to specify which shell is the correct one.

97
00:05:54.449 --> 00:06:00.800
因此，例如在我的本地计算机上，我有一个设置，所以 Zsh 是我的缺省 shell。
So for example on my local computer I
have a set so Zsh is my default shell.

98
00:06:00.800 --> 00:06:03.149
当我进入这个容器的时候它必须是巴什的
And when I get inside of this
container it needs to be bash.

99
00:06:03.149 --> 00:06:06.199
所以我就会有特别的具体情况
And so
I'm just gonna be specific about it and

100
00:06:06.199 --> 00:06:09.661
表示 bin/bash 是要使用的正确终端。
say that bin/bash is
the correct terminal to use.

101
00:06:12.411 --> 00:06:14.976
我要说 postCreateCommand
I'm gonna say postCreateCommand.

102
00:06:14.976 --> 00:06:16.870
这就是我们进入抚养权的地方，对吧 ?
This is where we get into
the dependency thing, right?

103
00:06:16.870 --> 00:06:19.519
因为一旦我们进入容器内
Because once we're inside the container,
once the container is up and

104
00:06:19.519 --> 00:06:21.973
运行，然后我们想运行 npm 安装，对吗 ?
running, then we wanna run npm install,
right?

105
00:06:21.973 --> 00:06:23.672
这就是我们要做的
So that's what we're gonna do.

106
00:06:23.672 --> 00:06:27.975
在我运行 npm 安装时创建容器之后，安装该类型的容器
After it's finished creating the container
when I run npm install that kind of

107
00:06:27.975 --> 00:06:32.276
绕过不具有正确依赖性和节点模块的问题，
sidesteps the issue of not having
the correct dependencies and node modules,

108
00:06:32.276 --> 00:06:33.334
都是些什么东西
all kind of stuff.

109
00:06:36.071 --> 00:06:40.045
好吧接下来你可以做点很酷的事
Okay, and then here,
something else very cool you can do is you

110
00:06:40.045 --> 00:06:45.350
可以指定要为用户安装哪些扩展，对吗 ?
can specify which extensions that you
want installed for your users, right?

111
00:06:45.350 --> 00:06:48.009
所以有人可以进入你的项目，让我们说你的项目要靠
So someone can come into your project and
let us say your project depends on

112
00:06:48.009 --> 00:06:51.449
每个人都在使用 ESLint and Pretier 和 unit testing ，对吗 ?
everyone using ESLint and
Prettier and unit testing, right?

113
00:06:51.449 --> 00:06:52.810
那你就可以去安装了
So you can go and install for

114
00:06:52.810 --> 00:06:55.329
它们将需要运行项目的所有扩展。
them all the extensions that they
are gonna need to run the project.

115
00:06:57.360 --> 00:07:01.379
首先我们做了夜间猫头鹰的缺省值
So first of all, we made Night Owl
the default that does actually come with

116
00:07:01.379 --> 00:07:05.759
缺省情况下，必须指定 Visual Studio 代码，因此请安装此主题。
Visual Studio Code by default, so we have
to specify, please install this theme.

117
00:07:05.759 --> 00:07:10.211
所以我们要把 sdras 放在 Sarah Drasner 上
So we're gonna put sdras, for
Sarah Drasner, .night-owl.

118
00:07:10.211 --> 00:07:12.603
然后再为我们安装主题。
And then will go and
install the theme for us.

119
00:07:14.863 --> 00:07:21.029
好的我们会去找斯考特
Okay, we'll do dbaeumer.vscode-eslint,

120
00:07:21.029 --> 00:07:26.432
将安装 ELinint 扩展。
that will install the EsLint extension.

121
00:07:26.432 --> 00:07:31.149
我们会去做 esbernp.prettier-vscode
And we'll do it esbernp.prettier-vscode,
and

122
00:07:31.149 --> 00:07:38.505
它将得到作为 JavaScript 的代码格式化程序的 Prettier 扩展。
that will get the Prettier extension
which is a code formatter for JavaScript.

123
00:07:38.505 --> 00:07:41.052
Esrint 是 Lint 术语，在不明显的情况下。
And the EsLint is a Lint term,
in case that was not obvious.

124
00:07:43.444 --> 00:07:44.805
好吧省省吧
All right, so save that.

125
00:07:46.810 --> 00:07:48.519
现在有几件事是你能做的
Now there's a couple of
things that you can do.

126
00:07:50.220 --> 00:07:51.720
让我们这样做吧
Let's actually do it this way.

127
00:07:51.720 --> 00:07:55.350
现在我在我的档案探索者里
Right now I have here in my file explorer.

128
00:07:55.350 --> 00:07:58.814
我把这些不同的项目都打开了，我想打开
I have all these different projects open,
I wanna open it so

129
00:07:58.814 --> 00:08:01.879
这只是一个更复杂的项目
it's just
the more-complicated-node project.

130
00:08:03.089 --> 00:08:05.569
所以我要把这个降到最低
So for a second, I'm gonna minimize this.

131
00:08:08.411 --> 00:08:13.579
我要打开一个更复杂的节点项目
And I'm gonna open a more-complicated-node
project just itself,

132
00:08:13.579 --> 00:08:17.649
对，就在我的 Visual Studio 代码中。
right, just that in my Visual Studio Code.

133
00:08:17.649 --> 00:08:19.437
现在，如果我单击此处的 " 打开 " 。
So now if I click Open here.

134
00:08:31.040 --> 00:08:34.615
注意上面说的第一句话我发现你有一个 dev 容器
Notice the first thing it says, hey,
I noticed you have a dev container

135
00:08:34.615 --> 00:08:37.789
配置文件，要在容器中打开此文件吗 ?
configuration file,
do you wanna open this in the container?

136
00:08:38.919 --> 00:08:41.528
所以我想说我愿意谢谢你
So I'm gonna say, yes, I would, thank you.

137
00:08:44.511 --> 00:08:47.169
在这里你可以看到它正在打开一个遥远的
So down here you can see
that it's opening a remote.

138
00:08:47.169 --> 00:08:50.679
然后单击此处的详细信息，您可以看到它实际上正在运行
And click details here, and
you can see it's actually running

139
00:08:50.679 --> 00:08:55.162
Docker 在我的特定 dev 容器的后台构建。
the Docker build in the background for
my particular dev container.

140
00:08:55.162 --> 00:08:57.360
一旦完成了它就会为我和
And so once it's done that,
then it's gonna run it for me and

141
00:08:57.360 --> 00:08:59.788
它会把我连接到正在运行的容器
it's going to attach me
to the running container.

142
00:08:59.788 --> 00:09:02.429
其实我要在容器里做开发
I'm actually gonna be doing development
inside of the container and

143
00:09:02.429 --> 00:09:04.190
所有东西都在容器里工作
everything would be working
inside of the container.

144
00:09:05.889 --> 00:09:09.850
然后就会用那些暴露了的港口
But then it's going to be
using those port exposing so

145
00:09:09.850 --> 00:09:14.250
我可以在本地主机上运行代码
that I could actually run the code
locally in my local host.

146
00:09:14.250 --> 00:09:16.352
所以这需要一秒的时间
So this will take a second,
there's a bunch of stuff for

147
00:09:16.352 --> 00:09:17.936
你把一切都准备好了
you to get everything working and ready.

148
00:09:23.687 --> 00:09:27.144
所以如果它没有弹出来，在 dev 容器中重新打开，或者如果你想
So if it didn't pop up,
reopen in dev container, or if you wanna

149
00:09:27.144 --> 00:09:31.059
在弹出式弹开后就做，现在不在我的表上。
do it after the pop-up goes away,
right now it doesn't show it on mine.

150
00:09:31.059 --> 00:09:34.799
但在左下角有两个小尖括号，对吧 ?
But in the bottom left there's two little
angle brackets next to each other, right?

151
00:09:34.799 --> 00:09:38.213
如果单击该选项，那么应该有一个在容器中重新打开的选项。
If you click that, there should be
an option to reopen in container.

152
00:09:42.263 --> 00:09:47.155
如果你现在使用的是 Windows ，具体是在 WSL 中，
If you're using Windows right now and
you're in WSL specifically,

153
00:09:47.155 --> 00:09:49.018
你得离开 WSL
you have to get out of WSL.

154
00:09:49.018 --> 00:09:52.865
因此，您必须单击同一徽标，然后在 Windows 中重新打开。
So you have to click that same logo and
say reopen in Windows and

155
00:09:52.865 --> 00:09:54.950
那它就会问你
then it will ask you.

156
00:09:54.950 --> 00:09:56.745
>> 您所做的只是关闭并重新打开。
&gt;&gt; All you did was just close and reopen.

157
00:09:56.745 --> 00:10:00.429
>> Mm - hm，将弹出到您并重新打开此容器。
&gt;&gt; Mm-hm, that'll pop up to you and
reopen this container.

158
00:10:02.070 --> 00:10:05.320
所以我现在是完全不同的主题了，对吧 ?
So notice here now I'm totally
different theme, right?

159
00:10:05.320 --> 00:10:09.110
您可以看到我在 Dev 容器前端主样本。
And you can see here I'm in
Dev Container Frontend Master Sample.

160
00:10:09.110 --> 00:10:11.009
如果我点了点
And here if I click plus,

161
00:10:11.009 --> 00:10:16.330
如果我说猫的问题，你可以看到我在 Debian 里面，对吧 ?
if I say cat /etc/issue you can see
here I'm inside of Debian, right?

162
00:10:16.330 --> 00:10:21.320
所以我现在正在容器里做开发，但是
So I'm actually inside of the container
right now doing development, but

163
00:10:21.320 --> 00:10:23.100
都是同一个项目
it's the same project.

164
00:10:23.100 --> 00:10:29.490
如果我说节点 index.js ，那么它将运行我的项目。
If I say node index.js
it'll run my project.

165
00:10:30.850 --> 00:10:36.620
如果我打开它你会看到它还在运转
And if I open this,
You'll see that it's still running.

166
00:10:36.620 --> 00:10:38.600
你甚至可以看到它在另一个端口上打开了它。
You can even see that it
opened it on a different port.

167
00:10:38.600 --> 00:10:42.029
我甚至都不知道它会这样做但它只是为了你
I didn't even know it was gonna do that,
but it just kinda does that for you.

168
00:10:42.029 --> 00:10:43.350
这里是 VS .
It's coming back here to VS Code.

169
00:10:44.679 --> 00:10:47.480
我现在在这里有个小探险家
I now have this little
remote explorer over here.

170
00:10:47.480 --> 00:10:56.309
您可以在此处看到 " 远程资源管理器 " 。
You can see here, Remote Explorer.

171
00:10:56.309 --> 00:10:59.529
它应该告诉我这里会有
It should tell me,
there it's gonna be in here.

172
00:10:59.529 --> 00:11:00.783
在这里转发的港口
So here the forwarded ports,

173
00:11:00.783 --> 00:11:04.341
我可以看到它的所有端口，以及它们的位置和位置。
I can actually see all the ports that it's
forwarding and where they're going to and

174
00:11:04.341 --> 00:11:06.914
我可以重新配置它们还有一堆类似的东西
I can reconfigure them and
a bunch of stuff like that as well.

175
00:11:14.581 --> 00:11:16.708
有问题吗
Any questions?

176
00:11:16.708 --> 00:11:18.791
> > 这就是我想思考的。
&gt;&gt; Here's what I'm trying to think.

177
00:11:18.791 --> 00:11:22.421
所以一切都很棒你在容器里做开发
So it's all great, you're in the
container, you're doing the development

178
00:11:22.421 --> 00:11:25.886
我假设你的所有内容都被保存了对吧
there, I'm assuming that's where
all your contents are saved, right?

179
00:11:25.886 --> 00:11:30.900
现在，您要落实并基本遵循常规工作流程。
Now you wanna commit and
basically follow your regular workflow.

180
00:11:30.900 --> 00:11:31.914
那是怎么工作的
How does that work?

181
00:11:31.914 --> 00:11:33.052
只是例行的吗
Just the regular way?

182
00:11:33.052 --> 00:11:34.211
> > 所以它是有约束力的，对吧 ?
&gt;&gt; So it's a bind bound, right?

183
00:11:34.211 --> 00:11:36.479
所以它实际上是写在主机操作系统上。
So it's actually writing to
the host operating system.

184
00:11:36.479 --> 00:11:38.125
> > 这就是它的意思吗 ?
&gt;&gt; So that's what it does?

185
00:11:38.125 --> 00:11:40.331
> > 恩，好的问题。
&gt;&gt; Yep, good question.

186
00:11:40.331 --> 00:11:42.269
你让它工作了吗
Did you get it to work?

187
00:11:42.269 --> 00:11:43.625
你让它工作了吗
Did you get it to work?

188
00:11:43.625 --> 00:11:44.686
> > 我还在研究呢
&gt;&gt; I'm still working on it.

189
00:11:44.686 --> 00:11:45.297
>> 还在处理吗 ?
&gt;&gt; Still work on it?

190
00:11:45.297 --> 00:11:46.004
> > 是。
&gt;&gt; Yeah.

191
00:11:46.004 --> 00:11:48.493
> > 是啊， Windows 和 WSL 有点，
&gt;&gt; Yeah, with Windows and
WSL it's a little,

192
00:11:48.493 --> 00:11:52.192
我们要在这方面做得更好
working on that we're gonna make
that a better experience but for

193
00:11:52.192 --> 00:11:55.509
现在你必须退出 WSL 然后重新连接
right now you have to exit out of WSL and
then reconnect it.

194
00:11:55.509 --> 00:11:59.669
在这里的任何时候，我都可以说，点击这里的这个小东西。
Here at any time though I can say,
clicking on this little thing down here.

195
00:11:59.669 --> 00:12:01.950
我可以说 " 关闭远程连接 " 或您想要的任何内容。
I can say Close Remote Connection or
whatever you want.

196
00:12:03.299 --> 00:12:07.119
实际上，就说，关闭远程连接。
And actually, just says,
Close Remote Connection.

197
00:12:07.119 --> 00:12:10.809
这会把我送回正常的 VS .
This will send me back
into normal VS Code land.

198
00:12:13.753 --> 00:12:16.899
然后你就可以在容器里重新打开文件夹对吧
And then down here you can always say
reopen folder in container, right?

199
00:12:16.899 --> 00:12:19.639
所以你随时都能做到这些
So you can do all that
stuff up at anytime.

200
00:12:21.450 --> 00:12:22.456
让我们看看吧
So let's see.

201
00:12:29.234 --> 00:12:33.003
所以我想向你们展示如何对你的同事有点邪恶，对它很有趣。
So I wanna show you how to be a little
bit evil to your coworkers, cuz it's fun.

202
00:12:35.384 --> 00:12:36.178
这是哪儿
Where is this?

203
00:12:36.178 --> 00:12:39.959
所以我们要再次打开它
So we're just gonna open this again, and

204
00:12:39.959 --> 00:12:45.365
我们要打开一个更复杂的项目
we're gonna open
the more-complicated-node project.

205
00:12:47.749 --> 00:12:49.552
所以现在我不能打开同一个容器
So right now I'm not gonna
open the same container,

206
00:12:49.552 --> 00:12:51.860
我们要在这里再做一次
we're gonna do it here in just a second.

207
00:12:51.860 --> 00:12:55.669
所以这里有个有趣的愚弄愚弄你的同事
So here is a funny April fools joke
to play on your coworkers, and

208
00:12:55.669 --> 00:12:57.100
别这样对我我会很生气的
do not do it to me,
cuz I will be very upset.

209
00:12:58.460 --> 00:13:00.909
所以我们要回到我们的 devcontainer.json
So we 're gonna go back over
here to our devcontainer.json.

210
00:13:00.909 --> 00:13:04.599
而不是在夜猫头鹰的情况下我们要做热狗的准备
And instead of being on Night Owl,
we're gonna make this Hot Dog Stand.

211
00:13:09.578 --> 00:13:11.706
所以我们要做热狗的准备
So we're gonna make this Hot Dog Stand.

212
00:13:11.706 --> 00:13:16.495
而不是在这里装夜猫头鹰
And instead of installing
Night Owl right here,

213
00:13:16.495 --> 00:13:22.679
我们要把它放在热狗摊上
we're going to put
somekittens.hot-dog-stand.

214
00:13:22.679 --> 00:13:26.184
现在我要警告这会烧掉你的眼珠
Now I'm going to warn this is going
to burn your eyeballs as soon as

215
00:13:26.184 --> 00:13:27.090
我们重新打开这个
we reopen this.

216
00:13:27.090 --> 00:13:29.340
所以如果你不想让你的眼珠烧掉
So if you don't want your eyeballs burnt,

217
00:13:29.340 --> 00:13:31.786
现在就别再打开一个容器了
just don't click open
a container right now.

218
00:13:34.509 --> 00:13:37.161
好了现在我们有了这个我要点击这个
Okay, so now that we have that,
I'm gonna click this and

219
00:13:37.161 --> 00:13:41.099
说在集装箱里重新开放对吧
say, Reopen in Container, right?

220
00:13:46.240 --> 00:13:48.091
所以它将会经历并重建这个容器。
So it's gonna go through and
rebuild the container.

221
00:13:49.915 --> 00:13:51.120
我要点击重建
I'm gonna click Rebuild.

222
00:13:51.120 --> 00:13:56.941
所以我那天发现的热狗主题其实是从 Windows 3.1开始的。
So a Hot Dog theme I found out the other
day is actually from Windows 3.1.

223
00:13:56.941 --> 00:14:00.143
有个主题可以放在 Windows 3.1 上
There was a theme that you can
put on Windows 3.1 that was just

224
00:14:00.143 --> 00:14:02.025
全世界最糟糕的主题
the worst theme in the entire world.

225
00:14:02.025 --> 00:14:04.113
有人为 Visual Studio 代码重新创建了它。
And someone recreated it for
Visual Studio Code.

226
00:14:06.629 --> 00:14:07.990
这很恐怖。
And it is just horrifying.

227
00:14:07.990 --> 00:14:12.783
我连看都看不清楚，这让我头疼。
[LAUGH] I can not even look at it for
very long, it gives me a headache.

228
00:14:15.884 --> 00:14:18.094
所以如果你有一个工作的容器
So if you have a dev container for
your work,

229
00:14:18.094 --> 00:14:21.879
只要把这个改为热狗容器你就会得到这个怪物
just go change this to Hot Dog container
and you get this just monstrosity.

230
00:14:24.187 --> 00:14:26.639
好吧我得停了
Okay, I have to stop.

231
00:14:26.639 --> 00:14:29.309
我对现在在那里受伤的所有人都很抱歉
I'm so sorry to all the people
I've harmed out there now.

232
00:14:30.710 --> 00:14:34.326
但很酷，你可以做各种疯狂的事情。
But pretty cool, and
you can do all sorts of crazy stuff.

233
00:14:34.326 --> 00:14:37.889
在缺省情况下，您可以继续使用 " Times New Roman " 或 " Times New Roman " 。
You can go on and make the font Times
New Roman by default or something that.

234
00:14:39.080 --> 00:14:42.389
或者 Comic Sans，我们应该做漫画漫画。
Or Comic Sans,
we should have done Comic Sans.

235
00:14:42.389 --> 00:14:43.485
总之下次吧
Anyway, next time.

236
00:14:43.485 --> 00:14:47.580
好的，我们会关闭远程连接。
[LAUGH] All right, so
we'll close remote connection.

237
00:14:47.580 --> 00:14:49.720
这就是我想给你看的 < Visual Studio 代码> 。
That's all I wanted to show
you with Visual Studio Code.

238
00:14:49.720 --> 00:14:53.269
我认为这对于你和你的团队来说是一个真正具有吸引力的工作流程，对吧 ?
I think this is a truly compelling
workflow for you and your team, right?

239
00:14:53.269 --> 00:14:55.450
你可以和你的发展容器一起
You could all just come up
with your dev container and

240
00:14:55.450 --> 00:14:57.879
只要有人打开他们的 Visual Studio 代码
then as soon as someone just opens
their Visual Studio Code with that, and

241
00:14:57.879 --> 00:15:00.159
我们会在一个容器里给你打开这个
there's, ey, we're gonna open
this in a container for you.

242
00:15:00.159 --> 00:15:02.570
它会为你设定一切，坐等，
It will set everything up for
you, just sit back and wait, and

243
00:15:02.570 --> 00:15:05.649
一旦完成了一切都将为你工作
then once it's done,
everything will just be working for you.

244
00:15:05.649 --> 00:15:08.879
我没有给你看但发生的事是埃斯林特
The thing I didn't show you but
was happening is EsLint and

245
00:15:08.879 --> 00:15:10.980
也会自动安装 Pretier 。
Prettier were automatically
installed as well.

246
00:15:10.980 --> 00:15:14.592
所以如果我开始保存我的作品就会自动格式化
So if I started saving my work,
it would automatically be formatting and

247
00:15:14.592 --> 00:15:17.688
把我的代码给我从盒子里出来也很棒
wanting my code for me just out
of the box, which is great too.
