WEBVTT

1
00:00:00.660 --> 00:00:05.016
因此，我希望您在项目目录中创建一个新目录，并且
So I want you to make a new directory
inside of your project directory, and

2
00:00:05.016 --> 00:00:08.678
我们会把这一网络联系成网络
we're gonna call this one networking,
cd into networking.

3
00:00:11.201 --> 00:00:18.832
我们来做吧
And, Let's do this.

4
00:00:18.832 --> 00:00:22.556
我们会说 npm 的 init - y
We're gonna say npm init -y.

5
00:00:22.556 --> 00:00:28.669
我们会说 npm install mongodb
And we're gonna say npm install mongodb

6
00:00:28.669 --> 00:00:34.968
@hapi/ hapi，并且我们需要 hapi-pino。
@hapi/hapi, and we need hapi-pino.

7
00:00:34.968 --> 00:00:39.076
P -I-N-O，我认为这就是我们需要的，让我看看。
P-I-N-O, I think that's all we need,
let me check.

8
00:00:39.076 --> 00:00:40.845
是啊应该很好
Yeah, that should be good.

9
00:00:46.530 --> 00:00:49.148
这将需要第二个时间来安装其中一些东西。
That'll take a second to
install a few of those things.

10
00:00:49.148 --> 00:00:53.531
在这里，我要创建一个 index.js 。
And here, I'm going to create an index.js.

11
00:00:53.531 --> 00:00:55.145
其实我们是从档案探险家来的
Actually let's just do it
here from the file explorer.

12
00:00:57.378 --> 00:00:58.750
把剩下的都关了
Close the rest of those.

13
00:01:00.710 --> 00:01:04.579
在网络里我们会说新文件
And here inside the networking,
we're gonna say New File and

14
00:01:04.579 --> 00:01:08.969
这将被称为 index.js 。
this is gonna be called index.js.

15
00:01:08.969 --> 00:01:13.168
我要来这里和 Docker联网
And I'm gonna come back over
here to networking with Docker,

16
00:01:13.168 --> 00:01:16.000
我们会把所有东西都复制到这里
and we are going to copy everything here.

17
00:01:22.219 --> 00:01:26.415
它是一个比较复杂的应用程序，它与一个数据库进行对话。
It's a little bit more complicated app,
it talks to a database.

18
00:01:26.415 --> 00:01:27.760
你也不一定要明白
Again, you don't necessarily
have to understand

19
00:01:27.760 --> 00:01:29.719
来了解我们在这里所做的事情
this to understand what we are doing here.

20
00:01:29.719 --> 00:01:32.659
只是暂时让你穿过这里的代码
But to just momentarily walk
you through the code here.

21
00:01:34.400 --> 00:01:38.118
它将通过官方的驾驶员连接到蒙戈 db 。
It's going to connect to mongodb
via the official driver.

22
00:01:38.118 --> 00:01:41.939
让我们确保正确的版本。
Let's make sure that we
get the right version.

23
00:01:41.939 --> 00:01:44.560
那是我最后一次的大问题
That was a big problem for me last time.

24
00:01:44.560 --> 00:01:49.311
当你晚上做 npm 的安装时
To be safe, when you're doing npm install,

25
00:01:52.542 --> 00:01:54.997
你想做 @hapi/hapi，
You wanna do @hapi/hapi,

26
00:01:58.007 --> 00:02:03.959
hapi-pino 和 mongodb@3。
hapi-pino and mongodb@3.

27
00:02:03.959 --> 00:02:08.026
只是为了确保你能找到正确的司机
Just to make sure that you're
getting the correct driver for this.

28
00:02:11.008 --> 00:02:12.793
我们甚至说 @3.3。
Let's even say @3.3.

29
00:02:12.793 --> 00:02:14.031
我们就这么做吧
Let's just do that.

30
00:02:14.031 --> 00:02:18.569
这将使您的 mongodb 降级到 3.35。
So this will downgrade
your mongodb to 3.35.

31
00:02:22.478 --> 00:02:28.270
我们走了， 3.4 可能会起作用，可能不会，我们不会去检查的。
There we go, 3.4 might work,
it might not, we're not going to check.

32
00:02:30.360 --> 00:02:31.199
好的回去吧
Okay, going back.

33
00:02:34.551 --> 00:02:37.430
我们要启动一个单台服务器，它将会实例化 MongoClient。
We're gonna start a hapi server,
it's going to instantiate a MongoClient.

34
00:02:37.430 --> 00:02:41.251
如果我提供一个环境变量的话它也会连接到
And it's going to connect to either if
I provide an environmental variable of

35
00:02:41.251 --> 00:02:43.849
它会连接到 Mongo 连接串
it Mongo connection string
it'll connect to that.

36
00:02:43.849 --> 00:02:46.735
否则它将缺省连接到本地
Otherwise it's going to default
to connecting to just a locally

37
00:02:46.735 --> 00:02:47.594
运行 MongoDB。
running MongoDB.

38
00:02:47.594 --> 00:02:51.688
如果你在笔记本电脑上运行 MongoD ，你可以在本地运行。
So you could run this locally if
you're running MongoD, on your laptop.

39
00:02:51.688 --> 00:02:56.699
好的，我们会给它一个数据库的数据库名称，我们会给它一个集合的名字。
Okay, we'll give it a DB name of dockerApp
and we'll give a collection name of count.

40
00:02:56.699 --> 00:03:00.699
每当你点击这个斜杠的路径时
Anytime that you hit
the slash route it's going

41
00:03:00.699 --> 00:03:05.199
说我有多少项目，我叫它什么 ?
to say how many items do I have in my,
what do I call it?

42
00:03:05.199 --> 00:03:06.319
盘点集合。
Count collection.

43
00:03:07.530 --> 00:03:10.098
所以，集合就像 SQL 术语中的表格，对吧 ?
So collections are like
tables in SQL terms, right?

44
00:03:10.098 --> 00:03:11.900
数据库是数据库对吧
And databases are databases, right?

45
00:03:13.889 --> 00:03:16.219
所以每当你打电话给我
So and then whenever you call /add,

46
00:03:16.219 --> 00:03:21.469
它只会插入一个空虚的物体对吧
it's going to insert just
a literally empty object, right?

47
00:03:21.469 --> 00:03:22.316
那就得有个 ID
Which is just gonna have an ID.

48
00:03:22.316 --> 00:03:25.610
所以要做的就是要不断地把东西加进去
So that's all it's gonna do is it's
just going to continually add things to

49
00:03:25.610 --> 00:03:26.340
您的数据库。
your database.

50
00:03:26.340 --> 00:03:28.997
基本上是最好的应用
Basically, the best application ever.

51
00:03:28.997 --> 00:03:29.992
我支持这项工作。
I stand by this work.

52
00:03:29.992 --> 00:03:31.320
不我开玩笑的
No, I'm just kidding.

53
00:03:31.320 --> 00:03:34.829
就这样了真的就这样
That's it, yeah, that's really just it.

54
00:03:38.150 --> 00:03:42.230
好了又来了你可以说煮的是蒙哥 db
Okay, and again, you could just
say brew install mongodb, and

55
00:03:42.230 --> 00:03:44.507
然后在后台运行 mongod 。
then run mongod in the background.

56
00:03:44.507 --> 00:03:46.259
所有这些都是正常的，那就好了，但是
All this would just work and
that'd be fine, but

57
00:03:46.259 --> 00:03:47.593
我们要用集装箱来做
we're gonna do it with containers.

58
00:03:51.824 --> 00:03:55.663
恩，这就是我在这儿的，好的， npm-install mongodb@3.3，
Yeah, that's actually what I have here,
okay, npm-install mongodb@3.3,

59
00:03:55.663 --> 00:03:56.805
这就是我们想要的
so that's what we want.

60
00:03:59.406 --> 00:04:06.328
所以如果你有问题，请确保 mongo 3.3 而不是 3.4。
So if you're having issues,
make sure you have mongo 3.3 and not 3.4.

61
00:04:06.328 --> 00:04:15.159
好，现在我们要做的是，我们是否需要给它一个 Docker 文件。
Okay, now what we're going to do,
Is we need to give it a Docker file.

62
00:04:17.139 --> 00:04:18.473
因此，任何旧的 Docker 文件都将正常运行。
So really any old Docker
file is gonna work.

63
00:04:18.473 --> 00:04:25.793
所以我们就复制一个我们应该得到的
So let's just copy the one from the,
Which one should we get,

64
00:04:25.793 --> 00:04:28.266
而不是卷，让我们从更复杂的节点应用中进行操作。
not the volumes, let's do it from
the more complicated node app.

65
00:04:30.918 --> 00:04:31.699
不是那个那个
Not that one, this one.

66
00:04:36.519 --> 00:04:39.911
我们要把它复制到一个新的 Docker 文件中。
And we're just going to copy that
into a new Docker file here.

67
00:04:44.630 --> 00:04:47.600
基本上，我们只需要一个工作节点应用程序。
Basically, we just need
a working node application.

68
00:04:47.600 --> 00:04:53.850
因此，这一操作会复制所有内容，运行 npm 安装。
So this one that does, copies
everything over, run the npm install.

69
00:04:55.000 --> 00:04:58.370
不需要曝光，您可以删除。
Don't need the expose,
you can delete that.

70
00:04:58.370 --> 00:05:00.511
然后在此命令节点， index.js， right?
Then the command here of node,
index.js, right?

71
00:05:03.471 --> 00:05:07.600
此处的关键是我们只需在工作中启动节点应用程序
The key here is that we just need to
start the node application in a working

72
00:05:07.600 --> 00:05:08.488
环境。
environment.

73
00:05:11.050 --> 00:05:15.721
所以我要到这里去
So I'm going to come
in here to where am I?

74
00:05:15.721 --> 00:05:16.589
我在联网
I'm in networking.

75
00:05:16.589 --> 00:05:20.005
所以我要说 docker build -- tag 和
So I'm going to say docker build --tag and

76
00:05:20.005 --> 00:05:24.817
我们会把这个叫做 " 带蒙戈 " 之类的
we'll call this node-with-mongo or
something like that.

77
00:05:24.817 --> 00:05:26.422
你可以随便给它打个电话
You can call it whatever you want.

78
00:05:26.422 --> 00:05:27.500
我在这里叫什么
What do I call here?

79
00:05:27.500 --> 00:05:32.057
App - with-mongo ，因此我们将坚持使用 mongo应用程序。
App-with-mongo, so
we'll stick to app-with-mongo.

80
00:05:41.492 --> 00:05:42.668
那得花第二个
That'll take a second to build.

81
00:05:42.668 --> 00:05:48.699
然后把它包装好，准备好去，然后我们就去了。
And then it should be packaged up and
ready to go, and there we go.

82
00:05:48.699 --> 00:05:50.231
现在我们要运行这个应用
So now we're going to run this app and

83
00:05:50.231 --> 00:05:52.264
连接到正在运行的其他数据库。
connect to the other
database that's running.

84
00:05:52.264 --> 00:05:59.144
所以我们会说 docker run -p 3000:3000
So we're gonna say,
docker run -p 3000:3000

85
00:05:59.144 --> 00:06:03.444
--network=app-net --env，
--network=app-net --env,

86
00:06:03.444 --> 00:06:08.757
我们得告诉它在哪里连接对吧
we have to tell it where to connect,
right?

87
00:06:08.757 --> 00:06:11.591
所以我们要
So we're gonna

88
00:06:11.591 --> 00:06:17.694
表示 MONGO_CONNECTION_STRING
say MONGO_CONNECTION_STRING

89
00:06:17.694 --> 00:06:24.454
=mongodb://db:27017。
=mongodb://db:27017.

90
00:06:24.454 --> 00:06:27.870
再记住，如果你把 db 放在一起，它就会知道因为它们在
Again, remember, if you put db,
it's going to know because they're on

91
00:06:27.870 --> 00:06:31.192
将数据库转至数据库容器的相同网络，我们将其命名为 cuz 。
the same network that db goes over to
the db container, cuz we named it.

92
00:06:33.600 --> 00:06:38.327
然后我们要用 " mongo " 来运行它，或者
And then we're gonna run
it with app-with-mongo, or

93
00:06:38.327 --> 00:06:41.552
不管你叫什么容器
whatever you called your container.

94
00:06:41.552 --> 00:06:43.779
我想我的笔记其实是说我的应用
I think my notes actually
say my app-with-mongo,

95
00:06:43.779 --> 00:06:46.675
只要你把它叫做一样东西就不重要了
as long as you call it the same thing,
it doesn't actually matter.

96
00:06:51.197 --> 00:06:52.659
因此，您可以看到它已正确启动。
So you can see it started up correctly.

97
00:06:52.659 --> 00:06:56.029
现在如果我去本地主机 3000
And now if I go over
here to local host 3000,

98
00:06:56.029 --> 00:06:58.994
您可以看到它有此计数值。
you can see that it has this count number.

99
00:06:58.994 --> 00:07:00.204
我能把它做大吗
Can I make that bigger?

100
00:07:00.204 --> 00:07:00.704
我能
I can.

101
00:07:03.468 --> 00:07:04.769
这就是我们所期望的。
So that's what we expect.

102
00:07:04.769 --> 00:07:05.928
它现在什么都没收好
It has nothing in that
collection right now.

103
00:07:05.928 --> 00:07:10.310
如果我打开 / 添加，那么它会说，很酷，我插了些东西。
If I open it with /add, then it's
gonna say, cool, I inserted something.

104
00:07:10.310 --> 00:07:14.887
现在，如果我返回到另一个并刷新，那么您可以看到其计数为 1。
And now if I go back to the other one and
refresh, you can see that its count is 1.

105
00:07:14.887 --> 00:07:18.639
或者我到这里来一次又一次刷新几次
Or if I come back over here and
just hit refresh a bunch of times.

106
00:07:20.629 --> 00:07:25.699
我回到这里 /，你可以看到我现在有 18 个项目在数据库里。
And I go back over here to /, you can
see now I have 18 items in the database.

107
00:07:27.060 --> 00:07:28.697
所以现在我有一个集装箱
So now I have one container,

108
00:07:28.697 --> 00:07:32.668
与 MangobDB 容器交谈的应用程序 - mango 容器。
the app-with-mango container
talking to the MangoDB container.

109
00:07:32.668 --> 00:07:36.279
他们通过我们为自己建立的应用网络来做。
They're doing it via the app network
that we set up for ourselves.

110
00:07:36.279 --> 00:07:39.670
所以我意识到这有点麻烦，对吧 ?
So I recognize this is a bit
burdensome to do, right?

111
00:07:39.670 --> 00:07:41.165
建立网络不是很有趣的
It's not very fun to
set up the network and

112
00:07:41.165 --> 00:07:43.106
确保所有网络都在交谈。
make sure all the networks
are talking to each other.

113
00:07:43.106 --> 00:07:46.909
如果有一个工具为我们做了这些东西，那就更好了。
It'd be better if there was a tool
that just did all this stuff for us.

114
00:07:48.019 --> 00:07:53.090
有但你可以把我的教学风格
There is, but you can kind of
get my teaching style where I

115
00:07:53.090 --> 00:07:56.129
让你感受痛苦然后我想给你一个解决疼痛的工具
want you to feel the pain and then I want
to give you the tool that solves the pain.

116
00:07:56.129 --> 00:07:59.394
我不想给你一个解决痛苦的工具
And I don't want to give you the tool that
solves the pain before you understand why

117
00:07:59.394 --> 00:08:00.733
你先做个烂事对吧
something sucks first, right?

118
00:08:00.733 --> 00:08:01.920
我想先吸点东西
I wanted something to suck first.

119
00:08:01.920 --> 00:08:03.196
然后我想让你为
And then I want you to be happy for

120
00:08:03.196 --> 00:08:05.242
解决这件事的工具对吧
the tool that solves the thing that sucks,
right?

121
00:08:05.242 --> 00:08:09.723
接下来我们要谈的是 Docker Compose。
So the next thing we're going
to talk about is Docker Compose.

122
00:08:09.723 --> 00:08:13.379
Docker Compose 会把所有这些东西都用在你的盒子里
And Docker Compose takes care of all this
stuff for you just kind of out of the box.
