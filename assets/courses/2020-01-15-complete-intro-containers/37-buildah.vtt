WEBVTT

1
00:00:00.190 --> 00:00:04.003
我们刚刚讨论了多个容器项目和 Docker 组成和
We just talked about multi container
projects and doing Docker compose and

2
00:00:04.003 --> 00:00:06.788
Kubernetes，做一些很酷的事情
Kubernetes, doing some
really cool stuff like that,

3
00:00:06.788 --> 00:00:08.737
协调容器。
coordinating containers together.

4
00:00:08.737 --> 00:00:11.066
我们还会再去一次
And we're gonna go into one more section,

5
00:00:11.066 --> 00:00:13.855
我们会把整个生态系统都抛在身后
we're gonna leave that
entire ecosystem behind.

6
00:00:13.855 --> 00:00:17.390
我们将讨论一些叫做 OCI 容器的东西。
And we're going to talk about
something called OCI containers.

7
00:00:17.390 --> 00:00:21.917
OCI 代表开放式容器计划。
And OCI stands for
open container initiative.

8
00:00:21.917 --> 00:00:23.861
因此，这些将与非 Docker 容器相似。
So these are going to be
like non-Docker containers.

9
00:00:23.861 --> 00:00:27.015
所以我们要做容器，但没有 Docker。
So we're going to do containers but
without Docker.

10
00:00:27.015 --> 00:00:31.314
库兹我想向你证明 Linux 容器不仅仅是
Cuz I want to kind of prove the point to
you that Linux containers are not just

11
00:00:31.314 --> 00:00:34.127
Docker， Docker 不仅仅是 Linux 容器。
Docker, Docker's not
just Linux containers.

12
00:00:34.127 --> 00:00:35.880
然后我们就能拿到保监处的东西了
And so
we're gonna get into this OCI stuff.

13
00:00:37.509 --> 00:00:40.779
所以我们要谈谈两种不同的技术。
So we're gonna talk about two different
technologies that are paired together.

14
00:00:40.779 --> 00:00:42.820
一个叫 Buildah ，一个叫波德曼。
One's called Buildah, one's called Podman.

15
00:00:42.820 --> 00:00:44.229
所以，让我们继续跳进 Buildah。
So let's go ahead and jump into Buildah.

16
00:00:45.590 --> 00:00:49.929
首先，这些工具只在 Linux中工作。
So first of all,
these tools only work in Linux.

17
00:00:49.929 --> 00:00:53.649
因此，我们将使用包含 Buildah 的 Docker 容器
So we are going to be using actually
a Docker container that contains Buildah

18
00:00:53.649 --> 00:00:56.801
来完成所有这些我知道的容器内的容器
to make all this work, which I know
is containers within containers.

19
00:00:56.801 --> 00:00:59.570
但这就是所有工作的方式。
But that's just kind
of how that all works.

20
00:01:01.957 --> 00:01:05.421
因此，如果您正在使用 Windows 和 WSL ，那么一切都应该无缝地工作。
So if you're working with Windows and WSL,
everything should just work seamlessly.

21
00:01:05.421 --> 00:01:09.986
你不应该用这个容器之类的东西。
You shouldn't have to use necessarily
the container or anything like that.

22
00:01:09.986 --> 00:01:13.750
如果你在 Mac OS 上你得跟我一起跳进 Buildah 的集装箱里
If you're on Mac OS, you're gonna have to
jump into the Buildah container with me.

23
00:01:15.281 --> 00:01:17.569
所以如果你想去查的话我就离开了
So I left a link there if
you wanna go check it out.

24
00:01:17.569 --> 00:01:19.430
这就在 Docker Hub上。
That's just on Docker Hub.

25
00:01:21.039 --> 00:01:24.817
因此， buildah 容器 ( buildah/buildah ) 具有 Buildah 和
So the Buildah container, which is
buildah/buildah, has both Buildah and

26
00:01:24.817 --> 00:01:26.900
波德曼在其中你不需要两者
Podman in it, you don't need both.

27
00:01:26.900 --> 00:01:28.200
你不需要两个不同的容器
You don't need two different containers.

28
00:01:30.987 --> 00:01:35.924
所以在容器和容器周围
So a lot of the gravity
around containers and

29
00:01:35.924 --> 00:01:42.341
这个容器的世界是围绕着 Docker 的，对吧 ?
the container world is
centered around Docker, right?

30
00:01:42.341 --> 00:01:49.307
这是第一个市场。
That was the first to market.

31
00:01:49.307 --> 00:01:52.153
它是那里的重心。
It's kind of the centre of gravity there.

32
00:01:52.153 --> 00:01:57.256
而在努力的过程中，不一定要被锁定在一个弯管机上，因为我们没有
And in effort to not necessarily be
locked into one bender, because we don't

33
00:01:57.256 --> 00:02:02.123
只需要一个云提供商，或者一个操作系统，或者仅仅是 iPhone 或
want just one cloud provider, or
one operating system, or just iPhone or

34
00:02:02.123 --> 00:02:06.935
只有 Mac，才能有一个有竞争力的创意市场。
just Mac, it's a good idea to have
a competitive marketplace of ideas.

35
00:02:06.935 --> 00:02:10.020
因此，当开放式容器计划开始实现的时候。
And so that's when the open container
initiative kind of came to fruition.

36
00:02:11.530 --> 00:02:14.129
因此，它是 Linux Foundation 下的产品。
So it is a product underneath
the Linux Foundation.

37
00:02:14.129 --> 00:02:16.210
所以它背后有很多支持。
So there's a lot of support behind it.

38
00:02:16.210 --> 00:02:20.199
记住 Docker 是 OCI的一部分是一件好事。
And it's a good thing to keep in
mind that Docker is a part of OCI.

39
00:02:20.199 --> 00:02:23.867
这不是 Docker 与 OCI 的对比，对吧 ?
So this is not like Docker versus OCI,
right?

40
00:02:23.867 --> 00:02:27.650
他们都在竞争
They're both competing together and

41
00:02:27.650 --> 00:02:30.780
互相帮助，这是一个非常合作的环境。
helping each other,
it's a very collaborative environment.

42
00:02:30.780 --> 00:02:32.793
太棒了
So it's great.

43
00:02:32.793 --> 00:02:35.985
另一件事是你可以用 Docker 和
And the other thing is that you can
build containers with Docker and

44
00:02:35.985 --> 00:02:38.000
用波德曼和 Buildah来执行
execute them with Podman and Buildah.

45
00:02:38.000 --> 00:02:40.819
反之亦然你可以用 Buildah 和 Podman
And visa versa, you can build
them with Buildah and Podman and

46
00:02:40.819 --> 00:02:42.579
执行 Docker 。
execute them with Docker.

47
00:02:42.579 --> 00:02:44.876
所以这些工具相互关联
So these tools interrelate and

48
00:02:44.876 --> 00:02:47.379
它们在这种特殊的情况下是相容的
they're compatible with each
other in that particular way.

49
00:02:48.939 --> 00:02:53.060
因此，它鼓励市场参与者的健康多样化。
So it encourages a healthy
diversity of players in the market.

50
00:02:53.060 --> 00:02:56.745
大家都赢了
Everybody wins here.

51
00:02:56.745 --> 00:02:58.813
所以 Buildah 和 Podman 不是唯一的项目
So Buildah and
Podman are not the only projects,

52
00:02:58.813 --> 00:03:00.590
我最后再谈几个话题
I'll talk about a couple more at the end.

53
00:03:00.590 --> 00:03:02.681
这些都是最有蒸汽的
These are just the two
that have the most steam,

54
00:03:02.681 --> 00:03:05.676
那是我想在你面前做的
that are kind of rolling forward that
I wanted to get in front of you.

55
00:03:08.069 --> 00:03:11.109
而且奇怪的是我们正在利用 Docker 和
And so it's kind of strange
that we're taking Docker and

56
00:03:11.109 --> 00:03:15.237
我们要把它分成两个不同的产品， Buildah 和 Podman
we're splitting it into two different
products here, Buildah and Podman.

57
00:03:15.237 --> 00:03:17.665
但实际上 Docker 实际上是分开的
But in reality,
Docker is actually split the same way,

58
00:03:17.665 --> 00:03:19.650
你根本就没意识到
you just don't actually really realize it.

59
00:03:19.650 --> 00:03:22.710
Docker， Docker ， Docker ，它是客户。
So Docker, there's actually Docker,
which is the client.

60
00:03:22.710 --> 00:03:24.610
那是什么建筑之类的
Which does the building and
things like that.

61
00:03:24.610 --> 00:03:27.079
有个不同的东西在叫 Dockerd的背景下运行
And there's a different thing running
in the background called Dockerd,

62
00:03:27.079 --> 00:03:31.689
它代表 Docker 守护程序，实际上是执行代码的操作
which stands for Docker daemon, which is
actually what's executing the code for

63
00:03:31.689 --> 00:03:34.759
或为您执行容器。
you, or executing the containers for you.

64
00:03:34.759 --> 00:03:39.280
因此，当您说 docker 运行某些内容时，它会将它发送到 Docker 守护程序
And so when you say docker run something,
it sends that to the docker daemon in

65
00:03:39.280 --> 00:03:43.280
通过 Docker 守护程序为您运行这些内容。
the background and it's running that
stuff for you via the Docker daemon.

66
00:03:43.280 --> 00:03:45.073
所以即使你不知道那是在那里
So even though you didn't
know that that was there,

67
00:03:45.073 --> 00:03:46.435
这就是正在发生的事情
that's actually what's happening.

68
00:03:46.435 --> 00:03:48.996
这就是与 Buildah 和 Podman 分割的方式。
And that's kind of how this is
split with Buildah and Podman.

69
00:03:48.996 --> 00:03:51.250
Buildah 准备为你建造容器
Buildah is going to build
the containers for you and

70
00:03:51.250 --> 00:03:54.459
然后波德曼就会成为真正为你执行的人
then Podman is going to be the one
that's actually executing it for you.

71
00:03:54.459 --> 00:03:58.009
波德曼 over Dockerd 的优势在于它实际上不是作为一个守护程序
The advantage of Podman over Dockerd is
it's actually not running as a daemon in

72
00:03:58.009 --> 00:04:00.395
它的背景其实就是执行它
the background,
it's actually just executes it and

73
00:04:00.395 --> 00:04:01.841
那样的人就会被淘汰
that kind of gets out of the way.

74
00:04:04.360 --> 00:04:08.550
因此，让我们从 Buildah开始。
So let's get started with Buildah.

75
00:04:08.550 --> 00:04:10.799
关于 Buildah 如何被命名的有趣之处
So the funny thing about
how Buildah was named,

76
00:04:10.799 --> 00:04:13.622
它的名字叫 " 波士顿口音" 的建造者
it's named how you would say
builder with a Boston accent.

77
00:04:13.622 --> 00:04:16.582
因为这个项目的核心保持者显然是
Because apparently one of the core
maintainers of this project was from

78
00:04:16.582 --> 00:04:18.220
他一直叫 " buildah" 。
Boston and he always called a buildah.

79
00:04:19.350 --> 00:04:22.540
我对这件事没有很好的印象因为我不是从波士顿来的
Which I'm not doing a very good impression
of it, because I'm not from Boston.

80
00:04:22.540 --> 00:04:23.980
但我觉得这很有趣
But I thought that was very funny.

81
00:04:25.139 --> 00:04:27.970
因此，您可以遵循指示信息下载和执行
So you can follow the instructions
to download and execute and

82
00:04:27.970 --> 00:04:29.860
如果你想的话这些东西都在这里
all that kind of stuff
here if you want to.

83
00:04:29.860 --> 00:04:31.740
我只是直接用它的容器
I'm just gonna use it
direct from the container,

84
00:04:31.740 --> 00:04:32.949
也可以自由地跟我做同样的工作
feel free to do the same with me.

85
00:04:34.250 --> 00:04:39.798
如果你要把它安装在我的 WSL 电脑里
If you are going to install it, which
I did do within my WSL computer here,

86
00:04:39.798 --> 00:04:44.377
你很可能需要把它放在 registry.com上。
you will very likely need to
put here at this registry.com.

87
00:04:44.377 --> 00:04:47.850
你可能需要把这个贴在里面
You will probably need to put this,
which I pasted in there.

88
00:04:47.850 --> 00:04:49.591
我又要用这个集装箱了，所以
Again, I am going to be
using the container, so

89
00:04:49.591 --> 00:04:51.992
我不会做这种事但你可能需要这个
I'm not going to do anything like that,
but you might need this.

90
00:04:55.156 --> 00:04:58.834
你还得确保你有个叫 " runc" 的东西
And you're also gonna have to make
sure you have this thing called runc,

91
00:04:58.834 --> 00:05:03.079
又是这个开放式容器倡议项目的另一个项目。
which is another project, again, from
this open container initiative project.

92
00:05:04.639 --> 00:05:08.470
而 runc 只是说，嘿，拿着这个容器，做点什么，对吧 ?
And runc is just say, hey, take this
container and do something with it, right?

93
00:05:08.470 --> 00:05:11.259
以某种方式执行该操作，即 runc 是什么。
Execute it in some fashion,
that's what runc is.

94
00:05:11.259 --> 00:05:14.901
Runc underpins Buildah 和 Podman。
Runc underpins Buildah and Podman.

95
00:05:18.562 --> 00:05:22.957
好吧我们走吧
All right, so let's go ahead and

96
00:05:22.957 --> 00:05:27.360
运行 Buildah 或容器。
run Buildah, or the container.

97
00:05:27.360 --> 00:05:30.050
所以我要在我的环境里做这个
So I'm gonna run this in my environment.

98
00:05:31.329 --> 00:05:33.409
这将会运行 Buildah 容器
And this will run
the Buildah container and

99
00:05:33.409 --> 00:05:36.069
它将安装在当前目录中，无论您在何处。
it will mount in your current directory,
wherever you are.

100
00:05:37.379 --> 00:05:40.040
所以我要过来这里
So I'm gonna come over here to this.

101
00:05:40.040 --> 00:05:45.372
让我们做更多的复杂， cd， oops，
Let's do the more-complicated, cd, oops,

102
00:05:45.372 --> 00:05:49.913
../more-复杂化节点应用程序。
../more-complicated-node app.

103
00:05:49.913 --> 00:05:51.060
这是我们所做的
This is something we did with,

104
00:05:58.588 --> 00:06:00.490
太棒了太棒了
Yeah, this is great, perfect.

105
00:06:00.490 --> 00:06:01.180
所以我们要做这个
So we'll do this one.

106
00:06:02.379 --> 00:06:04.389
所以我要在那儿运行 Docker 命令
So I'm gonna run that
Docker command right there.

107
00:06:05.810 --> 00:06:11.350
再次，如果您要通过 Docker 来执行此操作，请执行此操作。
Again, if you're gonna do this via Docker,
do it this way.

108
00:06:11.350 --> 00:06:15.069
如果您不通过 Docker 来执行此操作，那么无需运行此操作。
If you're not gonna do it via Docker,
you don't need to run this.

109
00:06:15.069 --> 00:06:21.519
这将会安装在此目录中，即源代码。
So this is going to mount in this
directory right there, source.

110
00:06:25.906 --> 00:06:29.367
好了，现在我在一个容器里面，正在运行。
Okay, so now I'm inside of a container,
which is going to be running.

111
00:06:29.367 --> 00:06:31.680
我们去看看我都不知道
Let's check, I don't even know.

112
00:06:31.680 --> 00:06:33.143
etc/发出的信息。
etc/issue.

113
00:06:35.807 --> 00:06:39.610
我很确定这是红帽
And I'm pretty sure that this is Red Hat.

114
00:06:41.577 --> 00:06:44.255
所以，让我们一起去吧，我认为这是 Red Hat Linux。
So let's go with that,
I think this is Red Hat Linux.

115
00:06:47.920 --> 00:06:51.865
好了现在我可以进入 Buildah了
Okay, and so now I have access to Buildah.

116
00:06:55.365 --> 00:06:58.204
版本，你去吧
Version, there you go.

117
00:07:01.875 --> 00:07:03.024
很酷吧
Cool?

118
00:07:03.024 --> 00:07:06.154
这是一个写在 Go的工具，以防你好奇。
It's a tool written in Go,
in case you were curious.
