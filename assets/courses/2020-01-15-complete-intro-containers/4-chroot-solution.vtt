WEBVTT

1
00:00:00.620 --> 00:00:03.652
所以我要跳出来摆脱这一切
So I'm gonna type exit to get out of this.

2
00:00:03.652 --> 00:00:07.961
所以现在我回到正常的环境里
So now I'm back in my normal environment,
and

3
00:00:07.961 --> 00:00:14.269
我要做的第一件事就是我要说 ldd/bin/cat
then the first thing I'm gonna
do is I'm gonna say ldd/bin/cat.

4
00:00:14.269 --> 00:00:15.750
你可以忽略这个
You can ignore this one.

5
00:00:16.929 --> 00:00:18.164
它有这个还有这个
It has this one and this one.

6
00:00:18.164 --> 00:00:22.379
事实上，我很确定我们已经复制了这两个。
And I'm actually pretty sure that
we already copied both of these.

7
00:00:22.379 --> 00:00:26.635
所以如果我进入我的新根
So if I go into my new root ls lib,

8
00:00:26.635 --> 00:00:32.805
它要求 libc.so.6 在这里
it's asking for libc.so.6 which is here.

9
00:00:32.805 --> 00:00:38.265
如果我做了 lib64 ，它就能完成它。
And if I do lib64,
it has for so.2, it does.

10
00:00:38.265 --> 00:00:40.375
所以我们其实不用复制任何东西。
So we actually don't
have to copy anything.

11
00:00:40.375 --> 00:00:42.244
他们已经在那里了
They're already there.

12
00:00:42.244 --> 00:00:47.091
所以我现在唯一要做的就是把 /bin/cat 复制到 bin中。
So the only thing I have to do now is
I have to copy from /bin/cat into bin.

13
00:00:50.503 --> 00:00:54.677
现在，如果我看看 bin 里面，你可以看到我也有猫。
And so now if I look inside of bin,
you can see here I have cat as well.

14
00:00:57.689 --> 00:01:02.551
所以现在如果我换个根仓就像那样
So now if I do change root bin per size,
bash like that,

15
00:01:02.551 --> 00:01:05.635
回到我的监狱里
to go back into my jailed process.

16
00:01:08.260 --> 00:01:12.710
我可以看到，我输入的是 ls ，是有用的，现在如果我输入猫咪，
I can see, I type ls, that works and
now if I type cat secret.txt,

17
00:01:12.710 --> 00:01:15.109
它会告诉你我的秘密汽水配方
it tells you my secret soda recipe.

18
00:01:17.180 --> 00:01:20.950
>> 然后，它具有您需要每个副本的二进制文件，获取该二进制文件。
&gt;&gt; So then, it has the binaries that
you need to each copy over, got it.

19
00:01:20.950 --> 00:01:23.069
然后它将使用您复制的库。
And then it will use
the libraries that you copied.

20
00:01:23.069 --> 00:01:27.162
>> 正好，因为它无法到达被监禁的过程之外
&gt;&gt; Exactly, because it cannot reach
outside of the jailed process

21
00:01:27.162 --> 00:01:30.140
能联系到其他的二进制文件
to be able to reach the other binaries.

22
00:01:30.140 --> 00:01:30.939
完全被锁住了
It's totally locked off.

23
00:01:30.939 --> 00:01:35.520
所以你不放进来的东西根本就没放进去
So anything that you don't put in
here doesn't get put in there at all.

24
00:01:35.520 --> 00:01:38.974
>> 因此，当您运行 LDD 时，会列出不同的需求，
&gt;&gt; So when you run LDD and it kind
of lists the different requirements,

25
00:01:38.974 --> 00:01:41.349
为什么我们不能再忽视第一次
why were we able to ignore
the first one again?

26
00:01:41.349 --> 00:01:46.912
> > 我会告诉你，如果我做我的猫，你就可以在这里看到这个吗 ?
&gt;&gt; I will tell you, so if I do l bin cat,
so you can see this one right here?

27
00:01:46.912 --> 00:01:47.412
> > Mm - m.
&gt;&gt; Mm-hm.

28
00:01:50.343 --> 00:01:52.868
>> 如果您询问我们为什么不能忽略它的实际原因，
&gt;&gt; If you're asking for the actual
reason of why we can't ignore it,

29
00:01:52.868 --> 00:01:54.682
我不知道跟你说实话
I don't actually know,
to be honest with you.

30
00:01:54.682 --> 00:01:57.415
我只知道如果它不给你一个完全合格的路径
I just know that if it doesn't give you
a fully qualified path like it does like

31
00:01:57.415 --> 00:01:58.819
那么你就可以自由地无视它了
this, then you're free to ignore it.

32
00:01:58.819 --> 00:01:59.319
>> Cool。
&gt;&gt; Cool.
