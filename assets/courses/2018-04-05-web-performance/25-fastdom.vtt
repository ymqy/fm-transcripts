WEBVTT

1
00:00:00.130 --> 00:00:02.700
&gt；&gt；steve：它起作用了，但很明显，现在你可以足够聪明了，而且
&gt;&gt; Steve: It worked, but clearly, and
now you could be smart enough, and

2
00:00:02.700 --> 00:00:06.150
你可以像我将有一个请求动画帧来统治他们所有。
you could be like I'm gonna have one
request animation frame to rule them all.

3
00:00:06.150 --> 00:00:11.669
但是，就像，在很多情况下，使用抽象在很多时候是有用的。
But like, in a lot of these cases, it's a
lot of times useful to use an abstraction.

4
00:00:11.669 --> 00:00:14.560
我真的很喜欢一个叫Fast Dom的
One I really like is one called Fast Dom,

5
00:00:14.560 --> 00:00:17.769
就像它的整个工作就是想弄清楚这些东西并让它变得更快。
like its whole job is to like figure
this stuff out and make it fast.

6
00:00:17.769 --> 00:00:20.370
和Fast DOM，有一些方法，但是
And Fast Dom effectively,
there's a few methods, but

7
00:00:20.370 --> 00:00:22.289
你只关心两个人。
there's only two that you care about.

8
00:00:22.289 --> 00:00:27.164
测量和变异，对，有效地读然后写。
Measure and mutate, right,
which are effectively read and then write.

9
00:00:27.164 --> 00:00:30.129
这是一个相当小的图书馆。
It's a pretty small library.

10
00:00:30.129 --> 00:00:32.896
如果你真的想，你可以自己写这个库。
If you really wanted to,
you could write this library yourself.

11
00:00:32.896 --> 00:00:36.887
基本上你调用Measure Bunch几次，它需要所有这些函数，对吧？
Basically you call measure bunch of times,
it takes all of those functions, right?

12
00:00:36.887 --> 00:00:45.401
然后请求一个动画帧，在其中播放所有的变异。
And then requests one animation frame
where it plays back all of your mutates.

13
00:00:45.401 --> 00:00:48.896
因此，您可以测量一系列时间，然后可以安排所有的写入
So you can measure a bunch of times,
then you can schedule all of your writes

14
00:00:48.896 --> 00:00:52.838
很多次，它会把一个请求动画帧放在一起，然后
a bunch of times, and it will put together
one request animation frame that will then

15
00:00:52.838 --> 00:00:55.198
一次完成所有你想做的事情。
play through all the things
you want to do at once.

16
00:00:55.198 --> 00:00:58.715
它会阻止你在底部看到的所有黄色尖刺
Which will stop all of those little
yellow spikes you saw at the bottom of

17
00:00:58.715 --> 00:01:00.289
火焰图。
the flame graph.

18
00:01:00.289 --> 00:01:00.892
好吧所以
All right, so,

19
00:01:00.892 --> 00:01:05.989
我要试一试。&gt；&gt；steve：带它去兜风。
I'm gonna give that one a shot.
&gt;&gt; Steve: Take it for a spin.

20
00:01:08.060 --> 00:01:11.969
所以在这里我只想说fast dom.measure。
So here I'm just going
to say fastdom.measure.

21
00:01:13.629 --> 00:01:15.060
不，实际上我是在上面说的。
No, actually I say that up top.

22
00:01:17.319 --> 00:01:23.167
所以我们继续，给它一个匿名函数，我们将测量。
So we'll go ahead, give it an anonymous
function, and we'll measure.

23
00:01:30.600 --> 00:01:33.471
&gt；&gt；steve：我们进去，然后
&gt;&gt; Steve: And we'll go in here, and

24
00:01:33.471 --> 00:01:41.685
我们会变异。&gt；&gt；steve：酷，
we'll mutate.
&gt;&gt; Steve: Cool,

25
00:01:41.685 --> 00:01:47.895
让我们试一试。&gt；&gt；steve：好的，
let's give it a shot.
&gt;&gt; Steve: All right,

26
00:01:47.895 --> 00:01:57.252
又好又光滑。&gt；&gt；Steve：让我们
nice and smooth.
&gt;&gt; Steve: Let's

27
00:01:57.252 --> 00:01:59.164
看看我们这里有什么。
take a look at what we have here.

28
00:01:59.164 --> 00:02:03.468
别这样。&gt；&gt；steve：对，
Stop that.
&gt;&gt; Steve: Right,

29
00:02:03.468 --> 00:02:06.709
你看我们不再有那些小钉子了。
you see we don't have all
those little spikes anymore.

30
00:02:06.709 --> 00:02:11.080
安排动画帧，我们正在做Fast DOM正在进行调用。
Schedule the animation frame,
we're doing Fast Dom is making its call.

31
00:02:11.080 --> 00:02:12.550
我们确实需要重新计算一大堆东西。
We do have to recalculate
a bunch of stuff.

32
00:02:12.550 --> 00:02:13.610
显然，这不是免费的。
Clearly, that's not free.

33
00:02:13.610 --> 00:02:16.584
我们在这个屏幕上有很多盒子。
We have a lot of boxes on this screen.

34
00:02:16.584 --> 00:02:18.835
我们继续画，对吧？
And we go ahead and we paint, right?

35
00:02:18.835 --> 00:02:21.045
但你可以看到我们并不是一下子就像，
But you can see that we're
not all of a sudden like,

36
00:02:21.045 --> 00:02:23.284
我们没有所有这些动画帧的尖峰。
we don't have all those spikes
from all those animation frames.

37
00:02:23.284 --> 00:02:24.264
我们用过图书馆。
We've used the library.

38
00:02:24.264 --> 00:02:25.795
我们都安排好了。
We've scheduled everything.

39
00:02:25.795 --> 00:02:27.944
我们可以走了，对吧？
We're good to go, right?

40
00:02:27.944 --> 00:02:31.775
所以很多时候使用一个工具可以解决很多这样的问题。
So a lot of times using a tool will go a
long way to solve a lot of these problems.
