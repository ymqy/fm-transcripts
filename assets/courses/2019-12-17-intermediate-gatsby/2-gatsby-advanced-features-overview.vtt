WEBVTT

1
00:00:00.210 --> 00:00:04.099
杰森 · 兰斯托夫: 除了表面水平的建筑静态网站,
&gt;&gt; Jason Lengstorf: Beyond just
the surface level building static sites,

2
00:00:04.099 --> 00:00:07.200
盖茨比有许多先进的特点。
Gatsby has tons of advanced features.

3
00:00:07.200 --> 00:00:09.535
今天我们要讨论的内容之一就是主题和
So one of the things that we're gonna
talk about today is theming and

4
00:00:09.535 --> 00:00:10.429
主题作文。
theme composition.

5
00:00:10.429 --> 00:00:15.025
你可以编写捆绑的功能和样式
You can write up bundled functionality and
styles and

6
00:00:15.025 --> 00:00:19.719
的插件和配置，把它们放到一个主题中，然后安装
plugins and configuration for Gatsby, put
that into a theme and then install that

7
00:00:19.719 --> 00:00:23.370
就像插件一样，你会得到所有的功能。
into a site as if it was a plugin,
and you'll get all that functionality.

8
00:00:23.370 --> 00:00:26.030
然后你可以在这个主题旁边安装另一个主题,
Then you can install another
theme next to that theme,

9
00:00:26.030 --> 00:00:27.309
他们只是一起工作。
and they just work with each other.

10
00:00:27.309 --> 00:00:31.559
他们不是在竞争，他们不会为了某些事情而争吵。
They're not competing,
they're not gonna, fight over things.

11
00:00:32.590 --> 00:00:36.159
这确实需要很好地构建你们的主题但我们今天就要这么做,
That does require building your themes
well, but we're gonna do that today,

12
00:00:36.159 --> 00:00:38.710
所以你不用担心。
so don't you worry about that.

13
00:00:38.710 --> 00:00:40.609
您还可以构建自定义数据源。
You can also build custom data sources.

14
00:00:40.609 --> 00:00:45.609
你可以从任何地方获得数据，如果你有一个内部的 API，你可以构建
You can get data from anywhere, if you've
got an in house API, you can build

15
00:00:45.609 --> 00:00:50.369
一个 Gatsby 源代码插件，它将把这个插件加入到 GraphQL API 中。
a Gatsby source plugin that will pull that
in and make it part of the GraphQL API.

16
00:00:50.369 --> 00:00:53.409
我们不会建立一个自定义的数据源，但是
We're not gonna build
a custom data source but

17
00:00:53.409 --> 00:00:58.039
我们将执行模式定制。
we are going to do Schema customization.

18
00:00:58.039 --> 00:01:01.979
因此，这涵盖了采购数据的大部分基本内容。
So that covers most of
the basics of sourcing data.

19
00:01:03.000 --> 00:01:05.420
我们要结合构建时间和运行时间数据
We're gonna combine build time and
run time data so

20
00:01:05.420 --> 00:01:09.409
你可以得到大量的数据，任何不经常变化的数据。
you can get a lot of the data,
anything that doesn't change frequently.

21
00:01:09.409 --> 00:01:12.769
在构建的时候把它们放在一起，这样网站就有了可用的
Put it together at build time, so
that the site has that available and

22
00:01:12.769 --> 00:01:15.280
将离线工作，并加载非常迅速。
will work offline and loads very quickly.

23
00:01:15.280 --> 00:01:18.340
然后事情经常改变，如果你有库存，或者
And then things that change frequently
like if you've got inventory, or

24
00:01:18.340 --> 00:01:21.069
如果你运行类似股票应用程序的东西
if you were running
something like a stock app

25
00:01:21.069 --> 00:01:23.640
每隔几秒钟就要改变一次价格。
that needed to change prices
every couple of seconds.

26
00:01:23.640 --> 00:01:26.069
你不可能每隔几秒钟就重建你的网站。
You wouldn't be able to rebuild
your site every couple of seconds.

27
00:01:26.069 --> 00:01:29.730
所以你可以得到客户端，只是更新，你可以做到这一点与任何
So you can get that client side and
just update and you can do that with any

28
00:01:29.730 --> 00:01:32.280
你想要的骨骼模式，旋转器，随便什么。
pattern that you want skeleton patterns,
spinners, whatever.

29
00:01:34.129 --> 00:01:38.599
架构自定义和自定义数据类型允许您克服一些问题。
Schema customization and custom data types
allows you to overcome a couple problems.

30
00:01:38.599 --> 00:01:43.189
一种是如果数据是空的，如果您正在使用文件系统和
One is if the data is empty,
like if you're using the file system and

31
00:01:43.189 --> 00:01:47.180
没有文件，盖茨比会说你想念这个领域。
there are no files, Gatsby would
say you're missing this field.

32
00:01:47.180 --> 00:01:49.979
因为没有数据来证明这个字段的存在。
Because there was no data
to make that field exist.

33
00:01:49.979 --> 00:01:52.349
通过创建自定义数据类型，我们可以避免这些错误。
By creating custom data types
we can avoid those errors.

34
00:01:52.349 --> 00:01:56.909
所以我们实际上得到了空的设置回来，你可以这样做。
So we actually get empty sets back and
you can do things like.

35
00:01:56.909 --> 00:02:00.879
在高级情况下，你可以说我想要一个页面。
In advanced cases,
you could say I wanna have a page.

36
00:02:00.879 --> 00:02:04.489
我的页面可能来自 Markdown。
And my page could come from Markdown.

37
00:02:04.489 --> 00:02:08.310
或者它可能来自 WordPress，或者它可能来自 Contentful 或
Or it could come from WordPress, or
it could come from Contentful or

38
00:02:08.310 --> 00:02:11.639
任何其他地方，但我只是想查询页面。
any other number of places,
but I just wanna query pages.

39
00:02:11.639 --> 00:02:14.300
因此，通过模式定制和自定义数据类型，您可以
So with schema customization and
custom data types, you can

40
00:02:14.300 --> 00:02:18.289
实际上把所有这些数据源的数据放到一个桶里。
actually pull data from all of those
sources and put them into one bucket.

41
00:02:18.289 --> 00:02:19.909
我们今天不讨论这个。
We're not gonna get into that today.

42
00:02:19.909 --> 00:02:22.870
但是，我们将进入单一源的模式定制。
But we are gonna get into schema
customization for a single source.

43
00:02:24.159 --> 00:02:27.280
实际上这里潜在的信息是，任何反应可以做的事情,
And really the the underlying message
here is that anything that React can do,

44
00:02:27.280 --> 00:02:29.870
盖茨比最有可能处理好。
Gatsby can most likely handle.

45
00:02:29.870 --> 00:02:36.210
说到底，《了不起的盖茨比》是一个不错的提供 React 应用程序的软件包
Gatsby is, at the end of the day, a nice
package for serving React apps, which

46
00:02:36.210 --> 00:02:41.469
这意味着 React 应用只是 React 应用，你可以做几乎所有相同的事情。
means that React apps are just React apps
you can do almost all of the same things.

47
00:02:41.469 --> 00:02:45.310
这里几乎没有什么限制，几乎所有这些地方都有逃生舱口
There are very few restrictions and almost
all of those have escape hatches and

48
00:02:45.310 --> 00:02:48.030
我们今天会看看其中的一些工作。
controls and
we'll look at some of that works today.
