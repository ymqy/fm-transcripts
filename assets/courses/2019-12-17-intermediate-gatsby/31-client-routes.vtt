WEBVTT

1
00:00:00.530 --> 00:00:04.884
杰森 · 兰斯托夫: 好的，我们的第一部分是创建
&gt;&gt; Jason Lengstorf: All right, so our
first piece here is going to be to create

2
00:00:04.884 --> 00:00:09.435
一个表格，这样我们就可以追踪人们在搜索什么。
a form, so that we can track
what people are searching for.

3
00:00:09.435 --> 00:00:12.811
他们需要能够实际输入一个搜索词，然后我们想采取
They need to be able to actually input
a search term and then we wanna take

4
00:00:12.811 --> 00:00:15.980
提交表单时，重写 URL。
that search term on submitting the form,
rewrite the URL with it.

5
00:00:15.980 --> 00:00:20.771
这意味着我们需要使搜索词 url 友好。
So that means that we need to make
the search term URL-friendly.

6
00:00:20.771 --> 00:00:25.539
所以我们要做一点点的字符串咀嚼，使工作，然后我们将
So we're gonna do a little bit of string
munging to make that work and then we'll

7
00:00:25.539 --> 00:00:30.890
也可以使用导航助手函数使用 Gatsby 进入编程导航。
also get into programmatic navigation with
Gatsby using the navigate helper function.

8
00:00:30.890 --> 00:00:35.058
首先，我们要进入源文件夹
So first, we're just gonna hop
into our source folder and

9
00:00:35.058 --> 00:00:40.600
让我们创建一个组件文件夹，在其中，我们将创建一个表单。
let's create a components folder and
inside of that, we'll create a form.

10
00:00:41.619 --> 00:00:43.380
这是我们的搜索表格。
And this is gonna be our search form.

11
00:00:43.380 --> 00:00:47.253
所以我要进口反应从反应。
So I'm gonna import React from React.

12
00:00:47.253 --> 00:00:51.176
然后我们要建立我们的表格，常量表格，还有
And then we're gonna set up our form,
so const form, and

13
00:00:51.176 --> 00:00:55.110
它会返回一些东西，导出违约。
that will return something,
that will export default.

14
00:00:59.012 --> 00:01:06.128
Jason Lengstorf: 好的，在我们的表单中，我们只需要设置一个表单。
&gt;&gt; Jason Lengstorf: Okay, so inside of
our form, we want to set up just a form.

15
00:01:06.128 --> 00:01:10.688
然后，onSubmit，我们需要做一些事情。
And then, onSubmit,
we need to do something.

16
00:01:10.688 --> 00:01:15.144
让我们创建一个名为 handleSubmit 的函数。
So let's create a function
called handleSubmit.

17
00:01:22.691 --> 00:01:25.686
杰森 · 兰斯托夫: 这将会起到一些作用
&gt;&gt; Jason Lengstorf: And
that's gonna do something, and

18
00:01:25.686 --> 00:01:30.236
然后在我们的表格里，我们要建立一个标签。
then inside of our form,
we're going to set up a label.

19
00:01:30.236 --> 00:01:33.716
在标签里面我们会说按名字搜索。
And inside of the label
we'll say search by name.

20
00:01:33.716 --> 00:01:37.843
然后我们将添加类型文本的输入。
And then we'll add
an input of the type text.

21
00:01:37.843 --> 00:01:41.859
我们会给它起个名字。
We will give it a name of name.

22
00:01:41.859 --> 00:01:44.893
然后我们设定一个值。
And we'll set a value.

23
00:01:44.893 --> 00:01:48.466
因为我们想要控制价值，我们想要做出反应来管理它。
And because we want to control the value,
we want React to manage it.

24
00:01:48.466 --> 00:01:51.700
我们不希望它被用户管理。
We don't want it to be
kind of user-land managed.

25
00:01:51.700 --> 00:01:55.299
我们将使用 use state hook。
We're going to use the use state hook.

26
00:01:55.299 --> 00:02:01.579
那么让我们设置一下 use state，然后我们说 value。
So let's set up use state,
and we'll say value.

27
00:02:01.579 --> 00:02:03.340
设定值。
set value.

28
00:02:03.340 --> 00:02:07.260
这将是使用状态的结果，我们只需要空白开始。
And that's going to be the result of use
state, and we'll just start it out empty.

29
00:02:08.689 --> 00:02:11.990
所以我们这里的价值就是价值。
So our value here is going to be value.

30
00:02:11.990 --> 00:02:15.264
然后在改变的时候，我们要处理输入,
And then on change,
we're going to handle input,

31
00:02:15.264 --> 00:02:17.862
这是另一个辅助函数。
which will be another helper function.

32
00:02:21.375 --> 00:02:24.840
杰森 · 兰斯托夫: 然后在下面，在我们的标签之外,
&gt;&gt; Jason Lengstorf: And
then below, outside of our label,

33
00:02:24.840 --> 00:02:27.469
我们要加一个按钮。
we're going to add a button.

34
00:02:27.469 --> 00:02:31.590
那个按钮将会是提交类型。
That button is gonna
be of the type Submit.

35
00:02:31.590 --> 00:02:33.250
上面只写着搜索。
And it'll just say search.

36
00:02:34.270 --> 00:02:37.170
所以，这就是我们最需要的。
So, that is most of what we need.

37
00:02:37.170 --> 00:02:41.159
但现在我们需要做到这一点，我们需要处理输入。
But now we need to make this,
we need to handle input.

38
00:02:41.159 --> 00:02:47.194
我们可以设置常量处理输入，这也是一个函数。
So we can set up const handle input,
and that's also gonna be a function.

39
00:02:49.799 --> 00:02:51.848
Jason Lengstorf: 所以为了处理输入,
&gt;&gt; Jason Lengstorf: So
for handling the input,

40
00:02:51.848 --> 00:02:56.852
我们真正要做的是得到当前值，然后把它放进去。
what we really wanna do is just get
the current value and drop it in.

41
00:02:56.852 --> 00:02:59.459
所以我们可以得到事件和
So we can just get the event and

42
00:02:59.459 --> 00:03:04.270
然后我们将值设置为事件目标值。
then we're gonna set the value
to event target value.

43
00:03:05.449 --> 00:03:08.379
这样我们就可以在字段中输入
And that will allow us to
type in the field, and

44
00:03:08.379 --> 00:03:09.900
当我们输入时，它会更新状态。
that'll update the state whenever we type.

45
00:03:11.370 --> 00:03:15.026
这是一个非常标准的控制反应输入的方式。
It's a pretty standard way of
controlling inputs in React.

46
00:03:15.026 --> 00:03:19.173
如果您使用类组件完成了这项工作,
If you've done this
using class components,

47
00:03:19.173 --> 00:03:24.168
美国房地产挂钩是如此的新鲜空气的呼吸方面
the useState hook is such
a breath of fresh air in terms of

48
00:03:24.168 --> 00:03:27.906
控制输入是多么的简单。
how simple it makes it to control inputs.

49
00:03:27.906 --> 00:03:32.631
我们没有写出特殊的类方法，然后把它绑定到这些方法上
We're not writing out special class
methods and then binding this to them and

50
00:03:32.631 --> 00:03:35.610
做这些事情就像，你知道,
doing all these things that are like,
you know,

51
00:03:35.610 --> 00:03:39.983
一旦你记住了它们的工作原理，它们就变得容易了，但这并不容易。
they're easy once you've memorized
how they work but it's not easy.

52
00:03:39.983 --> 00:03:44.927
看起来有点时髦，因为当你看着它们的钩子时
useState is a little bit funky to look at
because when you look at hooks they've got

53
00:03:44.927 --> 00:03:47.723
这些数组的破坏设置，并
these kind of array destructuring set up,
and

54
00:03:47.723 --> 00:03:50.248
感觉有点像魔术。
they kind of feel like magic a little bit.

55
00:03:50.248 --> 00:03:56.924
但是一旦这个模型开始运作，事情就变得简单明了了
But once the the model kind of sets in,
it really makes things straightforward and

56
00:03:56.924 --> 00:04:02.258
陈述性的，非常非常适合工作。
declarative, which is really,
really wonderful to work with.

57
00:04:02.258 --> 00:04:07.860
在我们的处理，提交，我们想要做的是，再一次，我们将得到一个事件。
In our handle, submit, what we want to do,
is again, we're going to get an event.

58
00:04:07.860 --> 00:04:10.853
但是在这种情况下，我们要防止形式去任何地方。
But in this case, we wanna prevent
the form from going anywhere.

59
00:04:10.853 --> 00:04:13.680
我们不想导航到另一个页面或刷新页面或
We don't wanna like navigate to
another page or refresh the page or

60
00:04:13.680 --> 00:04:16.160
默认情况下表单会做的任何事情。
any of the things that forms
will typically do by default.

61
00:04:16.160 --> 00:04:19.242
所以我们要做事，阻止违约
So we're gonna do event.preventDefault,
and

62
00:04:19.242 --> 00:04:23.901
这样可以防止表单，你知道，把我们的 React 应用吹走
that will prevent the form from,
you know, blowing away our React app and

63
00:04:23.901 --> 00:04:27.451
带我们去，或者刷新页面什么的。
taking us to, or
like refreshing the page or anything.

64
00:04:27.451 --> 00:04:32.822
在那之下，我们需要把搜索
Underneath that,
we need to turn the search

65
00:04:32.822 --> 00:04:37.329
字符串放到一个 url 友好的查询中。
string into a URL-friendly query.

66
00:04:37.329 --> 00:04:38.492
然后,
And then,

67
00:04:38.492 --> 00:04:45.182
我们真的需要，杰森 · 兰斯托夫: 改变
we need to actually,
&gt;&gt; Jason Lengstorf: Change

68
00:04:45.182 --> 00:04:48.247
网址来匹配搜索结果。
the URL to match our search results.

69
00:04:51.913 --> 00:04:55.449
杰森 · 兰斯托夫: 所以，为了把它变成一个搜索友好的查询,
&gt;&gt; Jason Lengstorf: So,
to turn this into a search-friendly query,

70
00:04:55.449 --> 00:04:59.918
我们要在这里取值，这可能是任何东西。
we're gonna take the value up here,
which could be anything.

71
00:04:59.918 --> 00:05:03.990
所以我实际上要做的是，让我们把这个放到屏幕上，这样我们就能看到它了。
So what I'll actually do is, let's just
get this on the screen, so we can see it.

72
00:05:03.990 --> 00:05:09.000
然后我们开始学习如何处理表单。
And then we'll start playing
with how to handle the form.

73
00:05:09.000 --> 00:05:09.737
让我们来看看这个。
So let's get this.

74
00:05:09.737 --> 00:05:12.764
我们将使用自动导入，因为这很简洁。
We're going to use that
auto-import because that's neat.

75
00:05:12.764 --> 00:05:17.495
然后在这里，这就是我们想要的。
And then up here, that does what we want.

76
00:05:17.495 --> 00:05:20.019
实际上并不需要那个链接。
Don't need that link actually.

77
00:05:20.019 --> 00:05:20.776
所以，让我们把它从那里拿出来。
So let's get that out of there.

78
00:05:20.776 --> 00:05:23.033
现在我有了一张表格。
And so now I've got a form.

79
00:05:23.033 --> 00:05:24.274
让我们开始吧。
So let's start this up.

80
00:05:24.274 --> 00:05:25.773
我要去做 netlify dev。
I'm going to do netlify dev.

81
00:05:35.345 --> 00:05:38.862
杰森 · 兰斯托夫: 好的，成功，好的，现在我们有了一个表格，和
&gt;&gt; Jason Lengstorf: Okay, success, all
right, and so now we've got a form, and

82
00:05:38.862 --> 00:05:41.718
我们可以在里面输入，它就会按照我们预期的方式运行。
we can type into it and
it's doing what we expect.

83
00:05:41.718 --> 00:05:47.215
如果我把控制台移到这里,
So if I move the console down here,

84
00:05:47.215 --> 00:05:54.228
所以我们可以看到它，然后把它变大
so we can see it and
then make it much bigger so

85
00:05:54.228 --> 00:05:59.156
我们可以读它，我可以把它设置为
we can read it, I can set this by

86
00:05:59.156 --> 00:06:04.107
默认为控制台日志值。
default to console log value.

87
00:06:04.107 --> 00:06:10.858
让我们找一块地来搜索，它会记录一些东西。
So let's just take a field and
search it, and it's gonna log something.

88
00:06:10.858 --> 00:06:11.970
好的很好。
Okay, good.

89
00:06:11.970 --> 00:06:14.158
所以我们的表格。
So our form does submit.

90
00:06:14.158 --> 00:06:16.774
它正确地处理提交，它不刷新页面或任何东西。
It handles the submit properly,
it's not refreshing the page or anything.

91
00:06:16.774 --> 00:06:21.798
接下来我们要做的是
So the next thing that we want
to do is what if somebody

92
00:06:21.798 --> 00:06:26.709
像 Rick & Morty 之类的,
types in like Rick &amp; Morty,
something like that,

93
00:06:26.709 --> 00:06:32.444
我们不能只是喜欢链接到那里。
that would break any URL,
we can't just like link to that.

94
00:06:32.444 --> 00:06:37.110
在我们正在进行的查找上下文中，它也不是特别有用。
It's also not particularly useful in the
context of the lookup that we're doing.

95
00:06:37.110 --> 00:06:40.100
因为我们知道我们的 API 是基于文本的搜索,
So because we know that our
API's a text-based search,

96
00:06:40.100 --> 00:06:44.665
我们不需要任何特殊角色，这样就大大简化了我们的工作。
we don't need any special characters, so
that drastically simplifies our job here.

97
00:06:44.665 --> 00:06:49.590
所以我想做的第一件事就是
So the first thing that I want to do is,
I'm just gonna go ahead and

98
00:06:49.590 --> 00:06:55.682
我们先创建一个新的变量,
let's start by creating a new variable,
which is gonna initially be the value,

99
00:06:55.682 --> 00:06:59.641
然后我要做几个变形。
but then I'm gonna do
a couple of transformations.

100
00:06:59.641 --> 00:07:01.418
我把它改成小写,
I'm gonna change it to lowercase,

101
00:07:01.418 --> 00:07:04.389
我要把开头和结尾的空白部分都剪掉。
I'm gonna trim any white space
from the beginning and end.

102
00:07:04.389 --> 00:07:08.572
然后我们来讨论正则表达式替换。
Then I'm gonna get into regular
expression replacement.

103
00:07:08.572 --> 00:07:11.093
所以我们要用正则表达式。
So we'll use a regex.

104
00:07:11.093 --> 00:07:16.297
我要创建一个集合，并说任何不是
And I'm going to create a set and
say anything that is not

105
00:07:16.297 --> 00:07:21.550
一个单词字符或者一个空格，Jason Lengstorf: And
a word character or a space,
&gt;&gt; Jason Lengstorf: And

106
00:07:21.550 --> 00:07:24.776
我们要把它推向全球，它将被一无所有的东西所取代。
we're gonna go global with that,
it's going to be replaced with nothing.

107
00:07:24.776 --> 00:07:29.312
所以我们基本上就是把所有的
So we're basically going through and
stripping out any

108
00:07:29.312 --> 00:07:34.250
特殊字符，任何非空白的空白，都在里面。
special characters,
any non-space white space, all in.

109
00:07:34.250 --> 00:07:37.307
这就是字母 a 到 z 和数字0到9。
And so that's the letters A through Z and
the number zero through nine.

110
00:07:37.307 --> 00:07:39.269
这就是斜杠小写 w 所允许的。
That's what the slash lowercase w allows.

111
00:07:39.269 --> 00:07:43.120
空格字符就是空格字符。
And the space character is
just the space character.

112
00:07:43.120 --> 00:07:47.139
所以不是新行，不是制表符，不是那样的。
So not new lines, not tabs,
nothing like that.

113
00:07:47.139 --> 00:07:49.110
所以我们对允许什么有很多限制。
So we're being pretty restrictive
about what we're allowing.

114
00:07:49.110 --> 00:07:54.750
然后，因为我想传递这个网址，我不想要一堆丑陋的,
And then, because I wanna pass this in
the URL and I don't want a bunch of ugly,

115
00:07:54.750 --> 00:08:00.579
比如，百分之20在这里，我也要取代所有的空格字符。
like, percent 20s in there, I'm going
to also replace any space character.

116
00:08:00.579 --> 00:08:04.463
我们会做一个或多个，以防有人说，比如,
And we will do one or more,
just in case somebody says, like,

117
00:08:04.463 --> 00:08:09.829
里克15个空格，然后莫蒂，我们不喜欢15个连字符，这是愚蠢的。
Rick 15 spaces and then Morty,
we don't like 15 hyphens, that's silly.

118
00:08:09.829 --> 00:08:12.134
所以我们要做一个或多个空格字符。
So we're going to do one or
more space characters.

119
00:08:12.134 --> 00:08:15.394
再一次，我们将用它走向全球，我们将用连字符代替它。
And again, we'll go global with that,
and we'll replace it with a hyphen.

120
00:08:15.394 --> 00:08:18.605
现在我有了这个问题。
So now I have this query.

121
00:08:18.605 --> 00:08:20.792
所以让我们控制台记录它。
So let's console log it.

122
00:08:24.303 --> 00:08:27.944
杰森 · 兰斯托夫: 好的，在这样做之后，我应该得到的是
&gt;&gt; Jason Lengstorf: Okay, so
upon doing that, what I should get is for

123
00:08:27.944 --> 00:08:32.019
一个普通的查询，比如我输入一个人的名字,
an average query,
like if I just type someone's name,

124
00:08:32.019 --> 00:08:36.959
没有什么真正的改变，但如果我开始添加一些无意义的东西
nothing really changes, but
if I start adding a bunch of nonsense in

125
00:08:36.959 --> 00:08:41.626
这里，杰森 · 兰斯托夫: 它剥离它只是
here,
&gt;&gt; Jason Lengstorf: It strips it to just

126
00:08:41.626 --> 00:08:45.846
实际的字母字符，这样做的方式将工作在一个网址。
the actual letter characters, and does so
in a way that would work in a URL.

127
00:08:45.846 --> 00:08:48.787
这就是我们想要的，对吧？
So that's kind of what we're after, right?

128
00:08:48.787 --> 00:08:52.562
我们需要一些东西，我们可以把它放在一个网址，使它可以链接，和
Is we want something that we can put
in a URL and make it linkable, and

129
00:08:52.562 --> 00:08:55.758
我们会在结果会议上解决这个问题。
we'll deal with reversing
this in the results session.

130
00:08:55.758 --> 00:09:01.799
所以现在我们知道它们在那里它在做我们想做的事,
So, now that we know these are there,
and it's doing what we want,

131
00:09:01.799 --> 00:09:05.840
我们可以用这个查询重写历史。
we can use this query
to rewrite our history.

132
00:09:05.840 --> 00:09:09.615
为了做到这一点，我们将使用《了不起的盖茨比》中的导航助手。
And to do that, we're going to use
the navigate helper from Gatsby.

133
00:09:09.615 --> 00:09:16.323
所以我们要从盖茨比引进导航系统,
So we're gonna import
navigate from Gatsby,

134
00:09:16.323 --> 00:09:20.279
在我们的联络人体内,
and inside of our handler,

135
00:09:20.279 --> 00:09:24.929
我们只是去导航。
we're just going to navigate.

136
00:09:29.350 --> 00:09:32.479
Jason Lengstorf: 要搜索，我们将使用查询。
&gt;&gt; Jason Lengstorf: To search,
and we'll use the query.

137
00:09:32.479 --> 00:09:37.966
然后，我们也会把它传递下去。
And then,
we're also going to pass that down.

138
00:09:37.966 --> 00:09:40.865
所以我们将它作为查询放入状态。
So we'll put it in the state as query.

139
00:09:45.126 --> 00:09:48.976
詹森 · 兰斯托夫: 这意味着我们可以拉动我们已经创建的状态
&gt;&gt; Jason Lengstorf: So this means that
we can pull the state that we've created

140
00:09:48.976 --> 00:09:53.379
不需要解析 url 或者其他任何东西，直接从查询中删除,
right out of the query without
having to parse the url or anything,

141
00:09:53.379 --> 00:09:55.120
当它是一个本地点击。
when it's a local click.

142
00:09:55.120 --> 00:09:58.908
当有人发送链接时，我们仍然需要解析 URL。
We'll still have to parse the URL
when someone sends a link.

143
00:09:58.908 --> 00:10:03.153
但我们可以跳过一些工作如果有人在本地做的话,
But we can skip some work in the case
that somebody's doing it locally,

144
00:10:03.153 --> 00:10:06.216
这将是，真的，最常见的用例。
which will be, really,
the most common use case.

145
00:10:06.216 --> 00:10:11.384
所以在这个过程中，我们每次搜索的时候,
So upon doing this,
what should happen is whenever we search,

146
00:10:11.384 --> 00:10:18.509
所以我会说，让我们说，Morty，我们的网址刚刚改变，现在它说斜杠 Morty。
so I'll say, let's say, Morty, our URL
just changed, and now it says slash Morty.

147
00:10:18.509 --> 00:10:22.349
如果我在这里放一堆垃圾
And if I put a bunch of junk in here and

148
00:10:22.349 --> 00:10:27.730
然后说 Rick，它被编辑给 Morty dash Rick。
then say Rick,
it gets edited to Morty dash Rick.

149
00:10:27.730 --> 00:10:29.546
酷。
Cool.

150
00:10:29.546 --> 00:10:31.186
好吧，这就是我们想要的。
Okay, that's doing what we want.

151
00:10:31.186 --> 00:10:33.664
所以，让我们保存我们的工作。
So let's save our work.

152
00:10:33.664 --> 00:10:38.067
然后我们会让结果页面工作。
And then we'll get that
results page working.
