WEBVTT

1
00:00:00.190 --> 00:00:02.020
我想创建一个目录。
&gt;&gt; Jason Lengstorf: I wanna
create a table of contents.

2
00:00:02.020 --> 00:00:06.724
所以我想看看文档里还有什么。
So I want to be able to see
what else is in the docs.

3
00:00:06.724 --> 00:00:10.300
要做到这一点，作为今天的捷径,
And to do that,
as kind of a shortcut today,

4
00:00:10.300 --> 00:00:13.449
我们只需要创建一个组件就可以了。
we will just create a component
that does that for us.

5
00:00:13.449 --> 00:00:19.632
所以这个方法的工作原理是，我们要进入我们的组件。
So the way that that works is,
we're going to get into our components.

6
00:00:19.632 --> 00:00:26.678
让我们创建一个叫做 table-of-contents. js 的东西。
And let's just create something
called table-of-contents.js.

7
00:00:26.678 --> 00:00:30.986
在这里面，我们将从一些风格开始
And inside of that we'll just
start out with some style so

8
00:00:30.986 --> 00:00:34.359
我们不需要分阶段进行。
that we don't have to do that in phases.

9
00:00:34.359 --> 00:00:39.917
因此，我们将 pragma 设置为 jsx，我们将从 theme-ui 导入 jsx。
So we'll set the pragma to jsx,
we'll import jsx from theme-ui.

10
00:00:39.917 --> 00:00:43.607
然后我们还要导入 graphql，Link so
And then we're also going
to import graphql, Link so

11
00:00:43.607 --> 00:00:46.076
我们可以把这些页面连接起来。
that we can link between the pages.

12
00:00:46.076 --> 00:00:51.957
然后是盖茨比给我们的一个钩子，叫做 useStaticQuery。
And then a hook that Gatsby
gives us called useStaticQuery.

13
00:00:51.957 --> 00:00:57.359
现在因为这不是一个模板，我们没有访问权限
Now because this is not a template,
we don't have access

14
00:00:57.359 --> 00:01:02.920
到页面查询或上下文或变量或任何东西。
to the page queries or context or
variables or anything.

15
00:01:02.920 --> 00:01:09.539
所以我们要使用 useStaticQuery，这样我们就可以得到数据了。
So we're gonna use this useStaticQuery so
that we can get data out.

16
00:01:09.539 --> 00:01:12.686
但需要注意的是，只有在不需要变量的情况下，才可以这样做。
But it's important to note that you can
only do this if you don't need variables.

17
00:01:12.686 --> 00:01:17.120
您必须在 useStaticQuery 中对所有内容进行硬编码。
You have to hard code
everything in a useStaticQuery.

18
00:01:17.120 --> 00:01:17.870
这就是为什么它是静态的。
That's why it's static.

19
00:01:17.870 --> 00:01:20.659
你得不到动态的内容。
You don't get dynamic content.

20
00:01:20.659 --> 00:01:23.430
首先，让我们设置组件本身,
So first,
let's set up our component itself,

21
00:01:23.430 --> 00:01:27.200
桌面目录，如果我能拼出来的话。
TableOfContents, if I could spell it.

22
00:01:28.900 --> 00:01:34.865
这里没有任何参数，我们将它作为默认值导出。
That doesn’t get any arguments and
we will export that as our default.

23
00:01:39.723 --> 00:01:42.664
作为第一步，我们将在内部加载数据。
&gt;&gt; Jason Lengstorf: Inside we will,
as a first step, load our data.

24
00:01:42.664 --> 00:01:46.359
那么让我们得到数据，这将是 useStaticQuery 的结果。
So let’s get the data and that’s gonna
be the result of useStaticQuery.

25
00:01:47.370 --> 00:01:52.039
我们使用 graphql 标记来表示它确实是一个查询。
And we use the graphql tag to
signify that it is indeed a query.

26
00:01:53.180 --> 00:01:57.210
我想要获得 allDocsPage 节点
And I wanna get allDocsPage nodes and

27
00:01:57.210 --> 00:02:00.730
我需要这个 id，这样我们就可以用它作为反应钥匙。
I want the id, so
that we can use it as a react key.

28
00:02:00.730 --> 00:02:04.478
我想要的标题，这样我们就可以有一些显示文本。
I want the title, so
that we can have some display text.

29
00:02:04.478 --> 00:02:07.599
我需要路径，这样我们就知道，如果有人点击了链接，该把他们送到哪里。
And I want the path, so that we know where
to send somebody if they click the link.

30
00:02:09.591 --> 00:02:12.533
杰森 · 兰斯托夫: 一旦我们得到了那些数据，它就会出现
&gt;&gt; Jason Lengstorf: Once we’ve got
that data, it’s gonna come in and

31
00:02:12.533 --> 00:02:14.227
存储在这个数据道具里。
be stored in this data prop.

32
00:02:14.227 --> 00:02:16.159
实际上，盖茨比会在建造时间做这件事。
Gatsby will do this at build time,
actually.

33
00:02:16.159 --> 00:02:17.860
所以我们不需要等待。
So we don’t need to await it or anything.

34
00:02:17.860 --> 00:02:22.670
就组件而言，当它在浏览器上运行时,
It just as far as the component is
concerned when it runs on the browser,

35
00:02:22.670 --> 00:02:23.778
那些数据早就存在了。
that data will already exist.

36
00:02:25.569 --> 00:02:32.127
然后，为了方便起见，我们可以重命名页面
Then we can, for convenience,
let's rename pages and

37
00:02:32.127 --> 00:02:37.021
我们去拿 data.alldock.nodes。
we'll get data.allDocsPage.nodes.

38
00:02:37.021 --> 00:02:40.300
然后我们可以归还一件东西。
And then we can return a thing.

39
00:02:40.300 --> 00:02:44.860
所以我们要返回的是，我们给它一个 div 以防万一
So the thing that we wanna return is,
we'll give it a div in case we

40
00:02:44.860 --> 00:02:48.437
想要风格或添加一些边框或周围的东西。
want to style it or add some borders or
something around it.

41
00:02:48.437 --> 00:02:51.430
我们暂时不会这么做，但是我们想让那扇门开着。
We're not gonna do that for now, but
we want to leave that door open.

42
00:02:51.430 --> 00:02:53.960
让我们为它添加一个标题。
Let's add a heading to it.

43
00:02:53.960 --> 00:02:56.229
所以我们会说探索文档。
So we'll say Explore the Docs.

44
00:02:56.229 --> 00:02:59.939
然后我们会在一个列表中展示这些。
And then we'll just show these in a list.

45
00:02:59.939 --> 00:03:03.169
那么让我们来看看我们的页面。
So let's map over our pages.

46
00:03:03.169 --> 00:03:06.805
对于每个人，我们都要找出他们的身份，路径和头衔。
And for each one we're gonna get
out that id, path and title.

47
00:03:10.594 --> 00:03:14.400
杰森 · 兰斯托夫: 我们可以返回一里。
&gt;&gt; Jason Lengstorf: And
we can return an li.

48
00:03:14.400 --> 00:03:15.740
我们把钥匙设置成 id。
We'll set the key to the id.

49
00:03:17.710 --> 00:03:20.340
在这里面，我们要使用一个链接。
And then inside of that,
we're gonna use a link.

50
00:03:21.740 --> 00:03:27.550
我想把它链接到路径上，我想给它一些样式。
And I want that to link to the path and
I wanna give it some styles.

51
00:03:27.550 --> 00:03:31.569
所以我想要的风格实际上是一个它是活跃的。
So the styles that I want are actually
gonna be one it's active.

52
00:03:31.569 --> 00:03:35.680
这意味着当我们回顾当前页面时,
So what that means is,
when we're reviewing the current page,

53
00:03:35.680 --> 00:03:40.069
我想展示一个稍微不同的风格，这样我们就知道我们在哪一页。
I wanna show a slightly different style so
we know what page we're on.

54
00:03:40.069 --> 00:03:41.765
所以我们马上就要开始了。
So we'll do that in just a second.

55
00:03:41.765 --> 00:03:44.229
然后我们想把它和标题联系起来。
And then we want that
to link to the title.

56
00:03:44.229 --> 00:03:46.650
这就是将要展示的内容。
So this is what will be displayed.

57
00:03:46.650 --> 00:03:49.730
当这是一个活动类的时候,
And then whenever this
is the active class,

58
00:03:49.730 --> 00:03:52.403
盖茨比有这么一个好帮手。
Gatsby has this really handy helper.

59
00:03:52.403 --> 00:03:56.888
这样我们就可以设置当前链接是什么时候
That will let us just set whenever
the current link is the one that's being

60
00:03:56.888 --> 00:03:57.909
访问。
visited.

61
00:03:57.909 --> 00:03:59.277
它只是为我们设置了一个类名。
It'll just set a class name for us.

62
00:03:59.277 --> 00:04:00.175
所以我要把它设置为激活状态。
So I'm gonna set that to active.

63
00:04:01.625 --> 00:04:06.155
所以现在我们进入了一些主题 UI 的东西，有点不同。
So now we're getting into some theme
UI stuff that's a little different.

64
00:04:06.155 --> 00:04:08.164
我们想要有条件的样式。
We're wanting conditional styles.

65
00:04:08.164 --> 00:04:12.504
我们希望这个组件只有在使用类时才有样式,
We want this component to only have
a style when we're using a class on it,

66
00:04:12.504 --> 00:04:14.115
当它有一个活跃的类。
when it has that active class.

67
00:04:14.115 --> 00:04:19.769
所以要做到这一点，我们可以使用一个非常标准的 CSS 和 JS 技术。
So to do that, we can use a pretty
standard CSS and JS technique.

68
00:04:19.769 --> 00:04:24.160
它是使用与引用当前元素的符号。
Which is to use the ampersand which
references the current element.

69
00:04:24.160 --> 00:04:29.420
然后我们用活动类修改它，在这里添加这个. active。
And then we modify it with the active
class by adding this .active here.

70
00:04:29.420 --> 00:04:32.439
在这里面，我们可以应用任何我们想要的样式。
Inside of that we can apply
whatever styles we want.

71
00:04:32.439 --> 00:04:36.105
假设我们希望我们的字体样式是斜体的。
So let's say we want our
font style to be italic.

72
00:04:36.105 --> 00:04:41.829
我们会说我们希望文本装饰为无，因为它是当前的链接。
We'll say that we want the text decoration
to be none because it's the current link.

73
00:04:41.829 --> 00:04:46.629
我们想淡化它作为一个链接，但不是实际上停用它作为一个链接。
We want to de-emphasize it as a link but
not actually deactivate it as a link.

74
00:04:46.629 --> 00:04:48.279
然后我想更进一步
And then I want to go one step further and

75
00:04:48.279 --> 00:04:51.480
实际上，我想告诉人们，这就是他们正在浏览的页面。
I actually want to tell people that
this is the page they're viewing.

76
00:04:51.480 --> 00:04:54.720
所以我要使用 after 伪类。
So I'm gonna use the after pseudo class.

77
00:04:54.720 --> 00:05:00.459
同样，我们只是把它作为一个字符串添加，然后在这里添加一个子对象。
And again we just add it as a string and
then add a subobject here.

78
00:05:00.459 --> 00:05:02.079
我要设置内容。
And I'm gonna set the content.

79
00:05:02.079 --> 00:05:06.346
这是值得注意的 CSS 和 CSS 中的内容
And this is worth noting
the content in CSS and

80
00:05:06.346 --> 00:05:10.622
结果看起来像是双引号。
JS ends up looking like
it's double quoted.

81
00:05:10.622 --> 00:05:17.100
因为你必须引用它一次才能使它成为 JavaScript 的属性。
Because you have to quote it once to
make it a property for JavaScript.

82
00:05:17.100 --> 00:05:19.297
然后你必须为 CSS 引用它。
And then you have to quote it for CSS.

83
00:05:19.297 --> 00:05:22.244
这意味着 JavaScript 和 JavaScript 都有单引号
Which means that we've got
single quotes for JavaScript and

84
00:05:22.244 --> 00:05:24.829
然后我们有双引号的 CSS。
then we've got double quotes for CSS.

85
00:05:24.829 --> 00:05:27.307
所以我把这个设置为。
So, I'm gonna set this as
the currently viewing.

86
00:05:27.307 --> 00:05:34.240
这些是用于 JavaScript 的，这些是用于 CSS 的。
And so, these ones are for
JavaScript, these ones are for CSS.

87
00:05:34.240 --> 00:05:36.918
这下我明白了，这下我完全明白了。
That's a gotcha, that definitely got me.

88
00:05:36.918 --> 00:05:41.060
所以这就有点像试图把它钉在你的头上。
So it's worth just kind of like
trying to pin that in your head for.

89
00:05:41.060 --> 00:05:42.720
当你将来尝试使用它的时候。
When you are trying to
use this in the future.

90
00:05:44.670 --> 00:05:48.250
既然我们已经有了这个，我们应该可以直接使用它。
So now that we've got this,
we should be able to just use it.

91
00:05:48.250 --> 00:05:50.779
让我们来看看我们的文档页面。
So let's go into our docs page.

92
00:05:51.800 --> 00:05:54.079
我要把它扔进去。
And I'm just gonna toss it in.

93
00:05:54.079 --> 00:05:55.189
让我们看看会怎么样。
Let's see how it goes.

94
00:05:55.189 --> 00:06:04.500
因此，让我们从目录导入 TableOfContents。
So let's import TableOfContents
from table-of-contents.

95
00:06:04.500 --> 00:06:06.728
我们可以把它放在底部。
And we can drop that right at the bottom.

96
00:06:09.911 --> 00:06:13.552
杰森 · 兰斯托夫: 首先要启动网站,
&gt;&gt; Jason Lengstorf: Gotta
start the site first,

97
00:06:13.552 --> 00:06:18.415
纱线工作区主题-开发。
yarn workspace theme-dev develop.

98
00:06:24.238 --> 00:06:27.319
杰森 · 兰斯托夫: 重新装载，就这样，我们现在正在观看。
&gt;&gt; Jason Lengstorf: Reload, and
there we go, we're currently viewing.

99
00:06:27.319 --> 00:06:30.939
因此，让我们添加一个额外的页面，以确保它按照我们预期的方式工作。
So let's add an extra page to make sure
that it's working the way we expect.

100
00:06:30.939 --> 00:06:35.649
所以我们要去主题开发，在文档下，我要创建一个新的文件和
So we're going to theme-dev, under docs,
and I'm gonna create a new file and

101
00:06:35.649 --> 00:06:40.360
我们叫它另一个 mdx。
we'll call it another.mdx.

102
00:06:40.360 --> 00:06:47.764
所以我们会给它一个标题，让我们称之为另一个页面，我们会说更多的文档！
So we'll give it a title, let's call it
another page, and we'll say More docs!

103
00:06:51.596 --> 00:06:52.292
杰森 · 兰斯托夫: 我们开始吧。
&gt;&gt; Jason Lengstorf: And there we go.

104
00:06:52.292 --> 00:06:55.709
现在我们可以点击我们的页面了。
So now we can click around to our pages.

105
00:06:55.709 --> 00:06:59.040
看看我们还有其他的页面。
And see that we've got
other pages in there.

106
00:06:59.040 --> 00:07:01.060
他们正以我们所期望的方式出现。
They are showing up the way we expect.

107
00:07:01.060 --> 00:07:03.750
主题是热重载，我们创建了这个文件。
The theme is hot reloading,
we created that file.

108
00:07:03.750 --> 00:07:04.930
我们不必停下来重新启动它。
We didn't have to stop and restart it.

109
00:07:04.930 --> 00:07:06.771
就这么捡起来了。
Just picked it right up.

110
00:07:06.771 --> 00:07:10.000
我们的目录正在做我们想做的事情。
And our table of contents is
doing what we wanted to do.

111
00:07:10.000 --> 00:07:14.629
因此，有一个很好的地方来保存我们的工作。
So there is a good place to save our work.

112
00:07:14.629 --> 00:07:17.490
所以让我们把所有的加起来。
So let's git add all.

113
00:07:18.769 --> 00:07:21.329
看看我们都做了些什么，好吗？
Take a look at what we've done, okay?

114
00:07:21.329 --> 00:07:23.966
所以我们更新了文档页面，使用了我们的目录。
So we updated the docs page
to use our table of contents.

115
00:07:23.966 --> 00:07:26.100
写了那个目录组件。
Wrote that table of contents component.

116
00:07:26.100 --> 00:07:28.459
创建了一个新的文档页面。
And created a new docs page.

117
00:07:28.459 --> 00:07:29.339
所以我们要承认这一点。
So we'll commit that.

118
00:07:31.329 --> 00:07:37.341
说添加目录，把它推上去。
Say add table of contents, push that up.
