WEBVTT

1
00:00:00.170 --> 00:00:03.770
杰森 · 兰斯托夫: 所以在《了不起的盖茨比》中使用主题的主要好处是
&gt;&gt; Jason Lengstorf: So the major benefit
of using themes in Gatsby versus just

2
00:00:03.770 --> 00:00:07.200
当你创建一个主题的时候,
doing a site individually is
that when you create a theme,

3
00:00:07.200 --> 00:00:10.070
你可以把这个逻辑用一种可共享的方式打包。
you're able to package up
that logic in a sharable way.

4
00:00:10.070 --> 00:00:14.326
所以在我们今天要创建的主题中，我们要添加对
So in the theme that we're gonna create
today, we're gonna add support for

5
00:00:14.326 --> 00:00:15.333
写文件。
writing up docs.

6
00:00:15.333 --> 00:00:20.152
在这些文档中，我们可能会在多个网站上使用它。
And in those docs,
we might wanna use that in multiple sites.

7
00:00:20.152 --> 00:00:24.571
也许如果你在中介工作，这会成为你工作的共同模式
Maybe if you work in an agency, this is
gonna be a common pattern where you've

8
00:00:24.571 --> 00:00:28.530
有些客户需要相似但稍有不同的东西。
got clients that need similar but
slightly different things.

9
00:00:28.530 --> 00:00:31.940
您可以将所有常见的功能打包到一个主题中，并且
You can package up all the common
functionality into a theme, and

10
00:00:31.940 --> 00:00:33.810
然后以可重复使用的方式分享。
then share that in a reusable way.

11
00:00:34.820 --> 00:00:39.070
使用标准样板文件的一个主要好处是
And a major benefit here over using
a standard boilerplate is that

12
00:00:39.070 --> 00:00:42.770
当您使用一个主题时，该主题是一个 NPM 包。
when you're using a theme,
that theme is an NPM package.

13
00:00:42.770 --> 00:00:46.409
当你使用样板文件时，你就是在克隆回购文件。
When you use a boilerplate,
you're cloning a repo.

14
00:00:46.409 --> 00:00:49.380
一旦你克隆了一个回购，那现在就是你的责任了。
As soon as you clone a repo,
that is now your responsibility.

15
00:00:49.380 --> 00:00:53.539
您已经完全选择了维护该样板文件中的所有代码。
You've fully opted-in to maintaining
all of the code in that boilerplate.

16
00:00:53.539 --> 00:00:58.060
如果事情发生在上游，那么您必须手动导入这些更改。
If things happen upstream, you would have
to then manually import those changes.

17
00:00:58.060 --> 00:01:01.100
您必须查看迁移文档，找出发生了什么变化。
You would have to look at the migration
docs, figure out what changed.

18
00:01:01.100 --> 00:01:04.620
然后，将这些改动移植到样板文件的每个用法中。
And then, port those changes over
into each usage of that boilerplate.

19
00:01:04.620 --> 00:01:05.640
这是一个巨大的痛苦。
That's a huge pain.

20
00:01:05.640 --> 00:01:09.140
如果你有很多网站，如果你正在工作，比如说，一个客户网站，和
And if you've got a lot of sites, if
you're working on, say, a client site, and

21
00:01:09.140 --> 00:01:11.620
他们有一套15种不同的房产,
they've got a suite of
15 different properties,

22
00:01:11.620 --> 00:01:15.620
这样升级的时间投资可不少。
the time investment to do
an upgrade like that is not small.

23
00:01:15.620 --> 00:01:19.789
因此，对于一个主题，它变成了一个包，只是一个已安装的 NPM 包。
So with a theme, it becomes a package,
just an NPM installed package.

24
00:01:19.789 --> 00:01:21.329
所以为了得到上游的更新,
So to get those upstream updates,

25
00:01:21.329 --> 00:01:26.810
你所要做的就是最迟安装 NPM 的主题，然后你就会得到那些更新。
all you have to do is NPM install the
theme at latest and you get those updates.

26
00:01:26.810 --> 00:01:31.855
所以现在，您可以设置类似 dependabot 的东西来自动保存
So now, you can set up something like
dependabot to automatically keep

27
00:01:31.855 --> 00:01:37.084
你的网站最新的任何上游最新的最佳做法是什么。
your sites up to date with whatever
the upstream latest best practice is.

28
00:01:37.084 --> 00:01:41.950
与直接构建主题相比，使用主题的另一个好处是
Another benefit of using themes versus
just building it all out directly is

29
00:01:41.950 --> 00:01:46.664
因为主题是可组合的，你可以把网站分解成小的,
that because themes are composable
you can break down sites into small,

30
00:01:46.664 --> 00:01:51.686
逻辑分组的功能集，处理一件事情真的很好
logically grouped sets of functionality
that handle one thing really well in

31
00:01:51.686 --> 00:01:56.900
一个真正可维护的方式，这样分享就更容易了。
a really maintainable way, which then
makes that sharing much more easy.

32
00:01:56.900 --> 00:02:01.034
如果你建立了一个网站，该网站有一个博客和电子商务
If you built a site, and
that site has a blog and e-commerce and

33
00:02:01.034 --> 00:02:03.923
一个营销页面和一个电子邮件采集表单,
a marketing page and
an email capture form,

34
00:02:03.923 --> 00:02:08.837
这是四种截然不同的工作，如果它们被分解成不同的主题
those are four distinct jobs that if
they were broken into themes, then any

35
00:02:08.837 --> 00:02:13.859
网站，需要一个联系表单，你可以只是下降在联系表单的主题。
site that needs a contact form, you can
just drop in the contact form theme.

36
00:02:13.859 --> 00:02:16.461
任何需要博客的网站，你都可以选择博客主题。
Any site that needs a blog,
you drop in the blog theme.

37
00:02:16.461 --> 00:02:21.512
并且你的网站变得更像乐高积木组装而不是
And your sites become more like
Lego block assembly rather than

38
00:02:21.512 --> 00:02:27.240
查看以前的作品，然后复制粘贴出你需要的部分。
looking at previous work and
copy pasting out the pieces that you need.

39
00:02:27.240 --> 00:02:31.853
所以这会给你所有的好处，作为一个网站建设,
So this is gonna give you all the same
benefits of building it as a site,

40
00:02:31.853 --> 00:02:36.626
但是随着上游升级带来的额外好处以及
but with an added layer of benefits of
upstream updates and the ability to

41
00:02:36.626 --> 00:02:41.737
将较小的代码单元组合在一起的速度和可维护性都要快得多。
compose smaller units of code together
much more quickly and maintainably.

42
00:02:43.133 --> 00:02:45.990
演讲者2: 盖茨比的主题不仅仅是用户界面,
&gt;&gt; Speaker 2: So
Gatsby themes is not just about the UI,

43
00:02:45.990 --> 00:02:49.430
其实也是功能性的问题？
it's actually the functionality as well?

44
00:02:49.430 --> 00:02:52.680
贾森 · 兰斯托夫: 盖茨比的主题是 UI 和功能。
&gt;&gt; Jason Lengstorf: Gatsby
themes is UI and functionality.

45
00:02:52.680 --> 00:02:57.937
因此，盖茨比的主题实际上是一个功能完备的盖茨比网站。
So a Gatsby theme is effectively
a fully functioning Gatsby site.

46
00:02:57.937 --> 00:03:01.171
唯一的区别是它接受配置选项和
The only difference is that it
accepts configuration options and

47
00:03:01.171 --> 00:03:05.210
需要作为一个软件包安装，而不是独立运行。
needs to be installed as a package,
as opposed to running standalone.

48
00:03:05.210 --> 00:03:10.012
但是如今很多盖茨比的网站，如果你看看默认的博客主题
But a lot of Gatsby sites these days,
if you look at the default blog theme

49
00:03:10.012 --> 00:03:14.500
它只是一个空文件夹，里面有一个内容文件夹
starter, what it is is just an empty
folder with a content folder for

50
00:03:14.500 --> 00:03:17.915
博客和一个 Gatsby 配置来安装主题。
blogs and
a Gatsby config that installs the theme.

51
00:03:17.915 --> 00:03:21.947
其他的一切都是在主题本身中处理的。
And the rest of everything else in
it is handled in the theme itself.

52
00:03:25.689 --> 00:03:28.229
杰森 · 兰斯托夫: 你可以在盖茨比的土地上做任何事情，但是
&gt;&gt; Jason Lengstorf: It’s anything that
you can do with a Gatsby site, but

53
00:03:28.229 --> 00:03:32.829
以这样一种方式打包，它是可配置的，可重用的，可分享的。
packaged up in such a way that it’s
configurable, reusable, and shareable.

54
00:03:32.829 --> 00:03:36.272
所以从主题到底层的数据操作和
So ranging from theme to
the underlying data manipulation and

55
00:03:36.272 --> 00:03:40.590
模式定制以及在标准站点上可以做的所有事情。
schema customization and all the things
that you would do on a standard site.

56
00:03:41.627 --> 00:03:44.800
说话人3: 插件和主题有什么区别吗
&gt;&gt; Speaker 3: Is there a difference
between a plugin and a theme, or

57
00:03:44.800 --> 00:03:47.490
一个人能做到另一个人做不到的事？
things that one can do
that the other can't?

58
00:03:48.625 --> 00:03:50.750
杰森 · 兰斯托夫: 大多数情况下，没有。
&gt;&gt; Jason Lengstorf: For the most part, no.

59
00:03:50.750 --> 00:03:55.604
主题的一个主要区别是，当他们使用盖茨比主题标签时,
The one major difference is that themes,
when they use the Gatsby theme tag,

60
00:03:55.604 --> 00:04:01.520
组件隐藏行为，并且他们有一个 Gatsby 配置。
opt-in to component shadowing behavior,
and they have a Gatsby config.

61
00:04:01.520 --> 00:04:06.099
因此，盖茨比主题实际上是一个插件，其中包含一个 Gatsby 配置。
So really, a Gatsby theme is
a plug-in with a Gatsby config in it.

62
00:04:06.099 --> 00:04:10.849
其他的都是没有 Gatsby 配置的插件。
And anything else is a plug-in
without a Gatsby config in it.

63
00:04:10.849 --> 00:04:12.770
这就是主要的区别。
That's the major difference.

64
00:04:12.770 --> 00:04:15.520
然后，命名是必须的，因为盖茨比就是这么认为的
And then, the naming is required because
that's how Gatsby identifies that

65
00:04:15.520 --> 00:04:16.970
一个主题应该用不同的方式处理。
a theme should be handled differently.

66
00:04:19.213 --> 00:04:23.356
演讲者2: 样板文件的概念也会消失
&gt;&gt; Speaker 2: So is the concept of
a boilerplate gonna go away pretty much

67
00:04:23.356 --> 00:04:23.870
然后呢？
then?

68
00:04:23.870 --> 00:04:25.661
杰森 · 兰斯托夫: 了解盖茨比的世界,
&gt;&gt; Jason Lengstorf: Inside
the Gatsby world,

69
00:04:25.661 --> 00:04:29.060
我认为这个问题不会受到重视。
I would expect that it
will be de emphasized.

70
00:04:29.060 --> 00:04:35.079
我的意思是，我不认为任何东西真的会消失，因为它是一个开放的生态系统。
I mean, I don't think anything ever really
goes away, because it's an open ecosystem.

71
00:04:35.079 --> 00:04:36.159
人们有自己的偏好
People have preferences and

72
00:04:36.159 --> 00:04:38.370
人们会按照自己的方式做事。
people are gonna do things
the way they're gonna do them.

73
00:04:38.370 --> 00:04:42.879
根据我的经验，我已经完全停止使用样板，因为
In my experience, I have completely
stopped using boilerplates because

74
00:04:42.879 --> 00:04:45.071
主题就像样板一样。
themes function as boilerplates.

75
00:04:45.071 --> 00:04:47.884
但是他们给我增加了额外的好处,
But they add an additional layer
of benefits that I, to me,

76
00:04:47.884 --> 00:04:50.606
现在做样板已经没有意义了。
it just doesn't make sense
to do a boilerplate anymore.
