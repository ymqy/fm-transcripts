WEBVTT

1
00:00:00.240 --> 00:00:03.169
我们将使用 Cloudinary 来处理我们网站上的资产
&gt;&gt; Jason Lengstorf: We're gonna use
Cloudinary for handling assets on our site

2
00:00:03.169 --> 00:00:09.630
原因是，如果你观察另一条路径，你会发现
and the reason for that is that
the typical path if you watch the other

3
00:00:09.630 --> 00:00:13.810
在我做的 Frontend Masters 的 Gatsby 工作坊中，我们使用了一个叫做 Sharp 的插件。
Gatsby workshop that I did on Frontend
Masters, we used a plugin called Sharp.

4
00:00:13.810 --> 00:00:18.250
夏普将处理本地的一切，它产生的所有不同的资产作为
And Sharp will handle everything locally,
it generates all the different assets as

5
00:00:18.250 --> 00:00:23.329
构建管道的一部分，并将它们存储在本地文件系统中
part of the build pipeline and
stores them in your local file system and

6
00:00:23.329 --> 00:00:25.949
这次我们不这么做有几个原因。
there are a couple reasons that
we're not gonna do that this time.

7
00:00:25.949 --> 00:00:29.410
第一个是夏普是真正的强大，但
The first one is that Sharp
is really powerful, but

8
00:00:29.410 --> 00:00:34.009
这也是一种挑剔，如果你的节点版本改变或
it's also kind of finicky and
if your node version changes or

9
00:00:34.009 --> 00:00:38.100
如果你的齿轮锁，机器之间有点不同步，然后锋利
if your yarn.lock, it's a little bit
out of sync between machines then sharp

10
00:00:38.100 --> 00:00:42.210
将失败与真正神秘的错误，它可能是有点难以调试。
will fail with really cryptic errors and
it can be kind of hard to debug.

11
00:00:42.210 --> 00:00:45.009
特别是如果你在一个团队里，很多人都会接触到它
Especially if you're on a team where lots
of people are gonna be touching it and

12
00:00:45.009 --> 00:00:49.340
他们不一定使用完全相同的机器设置。
they're not necessarily using
exactly the same machine setup.

13
00:00:49.340 --> 00:00:52.939
所以我们要避免这种麻烦，我们要避免这种混乱。
So we wanna avoid that hassle,
we wanna avoid that confusion.

14
00:00:52.939 --> 00:00:57.450
另一个需要注意的问题是 nulify 刚刚引入了
Another issue that will run into
is that Nullify just introduced

15
00:00:57.450 --> 00:01:02.399
限制免费构建分钟的时间量。
restrictions on the amount of time that
you get for free for build minutes.

16
00:01:02.399 --> 00:01:05.569
所以每次你在那个 Nullify 上运行一个构建，都需要
So every time that you run a build
on that Nullify, it's going to take

17
00:01:05.569 --> 00:01:10.560
他们会根据你每月的总时间来追踪这些账单。
a set amount of time and they track those
bills minutes against your monthly total.

18
00:01:10.560 --> 00:01:14.230
如果你超过了这个月的总数，那么你知道他们不会把你的网站关闭或
If you exceed that monthly total then you
know they don't take your site down or

19
00:01:14.230 --> 00:01:16.609
但是你必须开始支付建设分钟。
anything but you do have to start
paying for building minutes.

20
00:01:16.609 --> 00:01:21.640
这对我们来说意味着，任何我们可以拿走的东西
And what that means for us is that
anything that we can take out of

21
00:01:21.640 --> 00:01:26.730
在不降低我们网站价值的前提下，建设输油管道给了我们一个优势
that build pipeline without degrading
our sites gives us an advantage

22
00:01:26.730 --> 00:01:32.150
让我们正在建造的东西免费，对吗？
to keep stuff that we're building free,
right?

23
00:01:32.150 --> 00:01:35.799
对于个人项目，我们可不想花一大笔钱
And for personal projects we don't wanna
have to be shelling out a bunch of cash

24
00:01:35.799 --> 00:01:41.780
因此 Cloudinary 有一个非常慷慨的免费级别和时间
for that so Cloudinary has an extremely
generous free tier and when

25
00:01:41.780 --> 00:01:45.310
我们使用 Cloudinary 作为资产管理渠道，我们要做两件事。
we use Cloudinary as our asset management
pipeline, we get to do two things.

26
00:01:45.310 --> 00:01:49.049
首先我们把夏普排除在处理流程之外,
First, we dropped Sharp out
of the processing pipeline,

27
00:01:49.049 --> 00:01:52.460
这意味着我们消除了一些神秘的错误和潜在的困惑
which means that we eliminate some cryptic
errors and potential confusion for us and

28
00:01:52.460 --> 00:01:57.939
我们的团队和我们消除额外的工作，在建立过程中完成。
our team and we eliminate extra
work done during the build process.

29
00:01:57.939 --> 00:02:01.060
这将加快我们的构建速度，并减少构建分钟的数量
Which will speed up our builds and cut
down on the number of build minutes that

30
00:02:01.060 --> 00:02:04.010
我们正在使用类似于 nullfy 的东西，这将有助于我们
we're using through something
like Nullify, which will help us

31
00:02:04.010 --> 00:02:08.169
留在我们的免费层，保持我们的项目负担得起的东西。
stay in our free tier and keep things
affordable for us on our projects.

32
00:02:08.169 --> 00:02:09.819
让我们添加对图像的支持,
Let's add support for images so,

33
00:02:09.819 --> 00:02:14.229
这种饮料最棒的地方之一，就是它绚丽的红色？
one of the best things about this drink
is this gorgeous red color, right?

34
00:02:14.229 --> 00:02:18.860
还有橘子皮，这是一种非常美味的饮料
And it comes with an orange peel and It's
a very aesthetically pleasing drink so

35
00:02:18.860 --> 00:02:21.629
我们在这个网站上看到的并不是完全的效果
we really aren't getting the full effect
on this website when we're just looking at

36
00:02:21.629 --> 00:02:23.879
文本，我们希望能够看到这些图像。
text, we wanna be able
to look at these images.

37
00:02:23.879 --> 00:02:31.280
让我们来看看这些图片，我们可以看到
So let's get these going and the images
that we have are here, we can see

38
00:02:32.680 --> 00:02:38.479
得到这些好看的图像，所以让我们得到这些网站。
got these nice looking images and
so let's get these into the site.

39
00:02:38.479 --> 00:02:44.520
要做到这一点，因为我们不想真正拉长我们的建设长度,
To do that, because we don't want to
really elongate the length of our build,

40
00:02:44.520 --> 00:02:47.689
我们要让 Cloudinary 帮我们处理资产管理。
we're gonna use Cloudinary to
handle asset management for us.

41
00:02:47.689 --> 00:02:54.030
所以我们将使用一个针对 Cloudinary 的 transformer 插件
So there is a transformer plugin for
Cloudinary that we're going to use and

42
00:02:54.030 --> 00:02:59.552
我们将利用这一点，安装让我们这样说
we will use that by
installing the let's say

43
00:02:59.552 --> 00:03:04.680
纱线工作空间 negronis add,
yarn workspace.negronis add,

44
00:03:04.680 --> 00:03:10.128
我们要加上 gatsby-transformer-cloudinary。
we're gonna add
gatsby-transformer-cloudinary.

45
00:03:10.128 --> 00:03:18.569
为了获得映像，我们需要使用 gatsby-source-filesystem，然后,
And in order to get to the images, we need
to use gatsby-source-filesystem and then,

46
00:03:18.569 --> 00:03:23.189
因为我们想要能够显示这些图像，我们要导入盖茨比的形象
because we wanna be able to display those
images, we're gonna import Gatsby image

47
00:03:23.189 --> 00:03:28.879
这是一个反应堆纹身的辅助组成部分，会做很多
which is a helper component for
a reactor tat will do a lot of

48
00:03:28.879 --> 00:03:34.270
延迟加载，直到图像在视图端口中才开始加载
lazy loading and it waits until the image
is in the view port to start loading and

49
00:03:34.270 --> 00:03:39.379
所有这些美好的东西，以确保我们得到一个非常快的表演
all those nice things to make sure
that we get a very fast performance

50
00:03:39.379 --> 00:03:44.793
而不需要我们做一堆手工工作。
with our images without us having
to do a bunch of manual work.

51
00:03:44.793 --> 00:03:47.349
因此，我们将安装这些，而我们正在等待
So we'll get those installed and
while we're waiting for

52
00:03:47.349 --> 00:03:52.937
我们可以跳到我们的盖茨比配置中
those to install we can jump
into our Gatsby config and

53
00:03:52.937 --> 00:03:58.067
我将配置这个，我们将要
I will configure this, we're going to

54
00:03:58.067 --> 00:04:06.479
首先安装 gatsby-source-filesystem 并
first install gatsby-source-filesystem and

55
00:04:06.479 --> 00:04:11.139
对于选项，我们会得到一个名字的图片。
for the options,
we're gonna get given a name images.

56
00:04:11.139 --> 00:04:14.110
再说一次，因为这是网站，而不是主题，我们可以更多一点
Again, because this is the site and
not the theme, we can be a little more

57
00:04:16.819 --> 00:04:20.600
就像它是我们的工地一样，我们不必担心下游的兼容性
like it's our site, we don't have to worry
about incompatibility downstream and

58
00:04:20.600 --> 00:04:25.560
然后，我们要使用的路径是源图像和
then, the path that we wanna
use is source images and

59
00:04:25.560 --> 00:04:28.247
这样我们就能看到这些图像了。
that’ll give us these images here.

60
00:04:28.247 --> 00:04:35.680
接下来我们要做的是，我们要用变压器
So the next thing that we wanna do is,
we want to use the transformer for

61
00:04:35.680 --> 00:04:39.699
还有期权,
cloudinary and for the options,

62
00:04:39.699 --> 00:04:44.858
需要输出 cloudname 我们的 API 密钥,
it’s going to need out cloudname,
our API key,

63
00:04:44.858 --> 00:04:50.779
一个 API 的秘密和我们想要存放东西的地方。
an API secret and
where we wanna store things.

64
00:04:50.779 --> 00:04:54.050
所以我们只需要选择一个上传文件夹
So we just choose an upload folder and

65
00:04:54.050 --> 00:04:58.540
我会把这个设置成类似于校长工作室的样子。
I'll just set this to like
frontendmasters workshop.

66
00:04:58.540 --> 00:05:02.370
要得到其余的这些，我们需要去 Cloudinary，所以我只是要跳过
To get the rest of these, we need to go to
Cloudinary so I'm just gonna jump over to

67
00:05:02.370 --> 00:05:06.790
我会登陆 cloudinary 网站。
the cloudinary.com site and
I'm going to log in.

68
00:05:06.790 --> 00:05:09.870
有一个非常慷慨的免费级别
Cloudinary has a really
generous free tier so

69
00:05:09.870 --> 00:05:14.360
这是一个很好的开始形象资产管理的工具,
it's a really good tool for kinda getting
started with image asset management,

70
00:05:14.360 --> 00:05:17.309
在你击中他们的帽子之前，你可以走很远的路。
you're gonna be able to go quite
a ways before you hit their caps.

71
00:05:18.930 --> 00:05:21.478
一旦你在你的仪表盘上，一旦你注册了，你将在
Once you are in your dashboard,
once you're signed up, you'll be at

72
00:05:21.478 --> 00:05:26.149
Cloudinary.com/console  ，我要到这里来，右上角的设置齿轮。
cloudinary.com/console, I'm gonna go up to
this, the settings cog at the top right.

73
00:05:27.750 --> 00:05:33.850
然后我要去的安全标签和滚动所有的方式到底部
And then I'm going to go to the Security
tab and scroll all the way to the bottom

74
00:05:33.850 --> 00:05:38.680
在 Access keys 下面有一个链接可以生成一个新对。
and there's a link under Access
keys to generate a new pair.

75
00:05:38.680 --> 00:05:43.930
为了避免显示 API 标记，我已经创建了一些这样的标记
I've created a couple of these already in
order to avoid showing API tokens that I

76
00:05:43.930 --> 00:05:48.029
然后必须去验证，我有一个禁用的关键，我可以显示代替。
would then have to go and validate, I have
a disabled key that I can show instead.

77
00:05:48.029 --> 00:05:54.000
我们要拉的 API 键是这个，然后你就可以播放了
So the API key that we're gonna pull is
this one here and then you get to play

78
00:05:54.000 --> 00:06:00.240
这个有趣的游戏与 Cloudinary API，你点击这一点，它变得可见。
this fun game with Cloudinary API where
you click on this and it becomes visible.

79
00:06:00.240 --> 00:06:06.670
现在这是一个禁用的关键，所以这不会工作，但要选择它，你必须
Now this is a disable key so this won't
work but to select it you have to

80
00:06:06.670 --> 00:06:11.860
移开，然后拖到这里，然后复制
move off and then kind of drag
over here and then copy it and

81
00:06:11.860 --> 00:06:16.579
然后当你进入你的实际文件，它会有一大堆
then when you go into your actual
files it's gonna have a bunch of

82
00:06:16.579 --> 00:06:21.639
所以只要确保你实际上只选择该文本。
junk on it so just make sure that
you actually only select that text.

83
00:06:21.639 --> 00:06:26.139
这是一个非常有趣的用户界面怪癖，因为如果你试图真正选择它
That's a very fun UI quirk where because
if you try to actually select it it

84
00:06:26.139 --> 00:06:27.307
会再次隐形。
will go invisible again.

85
00:06:27.307 --> 00:06:28.423
(笑声)。
[LAUGH].

86
00:06:28.423 --> 00:06:31.860
虽然不是很有趣但不管怎样,
So it's not very fun but anyways,

87
00:06:31.860 --> 00:06:36.199
然后把它放到一个. end.development so 中
so you're then going to put
it into a .end.development so

88
00:06:36.199 --> 00:06:39.680
我有一个活的 API 键在那里，所以我不会显示，但我会显示这一点
I've got a live API key in there so I'm
not gonna show that but I will show this

89
00:06:39.680 --> 00:06:44.930
例子文件，这是完全相同的，除了我已经替换这些在这里。
example file which is exactly the same
except I've replaced these here.

90
00:06:44.930 --> 00:06:50.790
所以云的名字会和你的 cloundinary 网站 Cloudbucket 匹配,
So the cloud name is gonna match
your cloundinary.com Cloudbucket,

91
00:06:50.790 --> 00:06:58.370
你可以在这里找到，所以我的是 jlengstorf，所以我把 jlengstorf 放在这里。
which you can find up here so mine is
jlengstorf so I put in jlengstorf here.

92
00:06:58.370 --> 00:07:02.430
然后对于 API 键，它总是可见的
Then for the API key,
that's the one that's always visible and

93
00:07:02.430 --> 00:07:07.649
那么 API 的秘密就是这个，所以这些是你必须设置的值。
then the API secret is this one here so
those are the values that you have to set.

94
00:07:07.649 --> 00:07:12.149
一旦你设定了这些价值观，我们就需要把这些价值观融入到盖茨比的环境中,
Once you've set those values we then need
to pull those in to Gatsby's environment,

95
00:07:13.279 --> 00:07:18.100
gadsby 已经安装了 dotenv，所以我们可以使用它。
Gadsby ships with dotenv already
installed so we can just use it.

96
00:07:18.100 --> 00:07:23.322
所以我要进入盖茨比配置，在顶部,
So I'm gonna go into the Gatsby config and
up at the top,

97
00:07:23.322 --> 00:07:29.435
我需要使用 dotenv，然后我们调用 config 方法
I'm going to require dotenv and
then we call the config method and

98
00:07:29.435 --> 00:07:33.661
遵循盖茨比的模式
to follow Gatsby's pattern we're gonna use

99
00:07:33.661 --> 00:07:40.029
Dotenv.development 而不是一个普通的.env 文件。
dotenv.development instead of
like just a plain .env file.

100
00:07:40.029 --> 00:07:49.269
为了确保。 我们会安排好的。 节点 ENV,
And to make sure the .env pick set up,
we do .env.process.env.NODE_ENV,

101
00:07:49.269 --> 00:07:53.029
这样当我们处于开发模式时,
in that way what will happen is
when we're in development mode,

102
00:07:53.029 --> 00:07:56.180
它会接收到这个 env.development 文件。
it will pick up this
.env.development file.

103
00:07:57.269 --> 00:08:02.610
当您处于生产模式时，您必须添加相同的密钥
And when you're in production mode,
you will have to add the same keys

104
00:08:02.610 --> 00:08:06.689
都在这里面。 例如，您只需将其添加到您的部署管道中。
that are in this .Example, you'll just add
this to whatever your deploy pipeline is.

105
00:08:06.689 --> 00:08:10.129
因此，如果使用 nullfy，则只需声明要添加的环境变量
So if you're using Nullify, you'll only
did declare environment variables to add

106
00:08:10.129 --> 00:08:14.519
特拉维斯 · 詹金斯，不管你用的是什么，你只要
them there Travis Jenkins,
whatever you're using, you would just

107
00:08:14.519 --> 00:08:17.079
设置这些环境变量，使它们在构建过程中可用。
set those environment variables up so
they're available during the build.

108
00:08:19.759 --> 00:08:26.389
一旦我们拥有了这些，我们就可以使用它们，让我们看看。
Once we have these,
we can use them, let's see.

109
00:08:26.389 --> 00:08:34.068
云名称，所以然后我们可以得到 API 的关键。
Cloud name so Then we can get the API key.

110
00:08:34.068 --> 00:08:37.381
Envapi key.
Process.env API_Key.

111
00:08:37.381 --> 00:08:41.897
还有一个 API 秘密。
And then one more for API_SECRET.

112
00:08:41.897 --> 00:08:42.799
好吧。
Okay.

113
00:08:42.799 --> 00:08:51.840
这些配置，我们能够实际上获得文件上传。
Which those configured we are able
to actually get files uploaded.

114
00:08:51.840 --> 00:08:56.697
到 Cloudinary，我们将能够看到结果在我们的
To Cloudinary and we'll be able
to see the result of that in our

115
00:08:56.697 --> 00:09:01.639
这里是 GraphQL。
GraphQL there.

116
00:09:01.639 --> 00:09:07.524
所以让我们开始这个，纱线工作空间 negronis 开发。
So let's start this up,
yarn workspace negronis develop.

117
00:09:21.135 --> 00:09:24.317
杰森 · 兰斯托夫: 好的，变压器的工作方式是
&gt;&gt; Jason Lengstorf: Okay, and so the way
that that transformer works is that during

118
00:09:24.317 --> 00:09:28.320
这个构建只是将图片从文件系统上传到 Cloudinary。
the build it will just upload images
from the file system to Cloudinary.

119
00:09:28.320 --> 00:09:32.370
然后以资产的名称返回基于这个资产的名称,
And then it gets back in asset name,
and then based on that asset name,

120
00:09:32.370 --> 00:09:36.820
云 URL 是，你可以这样配置 URL 中的所有内容
Cloudinary URLs are, you configure
everything in the URL itself so

121
00:09:36.820 --> 00:09:40.529
我们可以说给我200,400,600,
we're able to say give it to me with 200,
with 400, with 600,

122
00:09:40.529 --> 00:09:45.700
这使我们能够建立响应图像与酸痛的集合。
and that allows us to set up
responsive images with sore sets.

123
00:09:48.080 --> 00:09:49.899
如果我给你演示一下它是怎么工作的，可能会更简单。
It's probably just easier if
I just show you how it works.

124
00:09:49.899 --> 00:09:55.509
让我们看一下 GraphiQL 层，我们可以清除它,
So let's look at the GraphiQL layer and
we can clear this out,

125
00:09:55.509 --> 00:10:00.460
所以我们现在可以看到，我们已经得到了所有的云 / 资产。
and so we can see now that
we've got all CloudinaryAsset.

126
00:10:00.460 --> 00:10:04.629
如果我进入这些节点，我们可以看到我们已经得到了固定，流动，固定
And if I go into the nodes, we can see
that we've got fixed and fluid, fixed

127
00:10:04.629 --> 00:10:10.539
宽度是一个盖茨比形象约定，用于设置永远不会改变宽度的图像。
width is a Gatsby image Convention for
setting images that never change in width.

128
00:10:10.539 --> 00:10:12.879
如果你有一个虚拟化身,
So if you have an avatar, for example,

129
00:10:12.879 --> 00:10:17.269
总是40像素宽，你会使用固定在40像素宽
that's always going to be 40 pixels wide,
you would use fixed at 40 pixels wide and

130
00:10:17.269 --> 00:10:21.070
这样图像就会显示出来，根据这个宽度进行优化。
that way the image comes out,
optimized for that width.

131
00:10:21.070 --> 00:10:25.129
如果你使用流体，流体是为了图像的可伸缩性取决于视口。
If you use fluid, fluid is for images that
will scale depending on the viewport.

132
00:10:25.129 --> 00:10:29.250
所以，如果你想做一个横幅图像，你想使用流体，因为作为
So if you're doing like a banner image,
you wanna use fluid because as

133
00:10:29.250 --> 00:10:33.399
视口变得更宽或更窄，你只想显示一个图像
the viewport gets wider or narrower,
you only wanna be showing an image that's

134
00:10:33.399 --> 00:10:35.740
大到可以容纳当前的视窗大小。
big enough for
the current size of the viewport.

135
00:10:35.740 --> 00:10:39.679
你不想像1600像素的图像压缩到
You don't wanna have like a 1,600
pixel image squish down to

136
00:10:39.679 --> 00:10:43.720
功能手机300像素的视窗，浪费了很多带宽。
a 300 pixel viewport on a feature phone,
it's a lot of wasted bandwidth.

137
00:10:44.850 --> 00:10:48.289
所以，如果我们进入这些节点，让我们进入流体
So, if we get into these nodes,
let's get into fluid and

138
00:10:48.289 --> 00:10:50.000
让我们看看来源。
let's just take a look at the source.

139
00:10:51.480 --> 00:10:57.590
从我们上传的图像中，我们可以看到一个完整的数组
So, from the image that we uploaded, we
can see here that we've got a whole array

140
00:10:57.590 --> 00:11:03.740
图像资产传回来，他们来在200像素宽,
of image asset pass back and
they come in at 200 pixels wide,

141
00:11:03.740 --> 00:11:10.039
461,646和650，因为我们设置了650作为我们的最大宽度。
461, 646, and 650 because we've
set 650 as our max width.

142
00:11:12.159 --> 00:11:16.179
那么，让我们来看看其中一个是什么样子的。
So, let's just take a look at
what one of these, it looks like.

143
00:11:18.799 --> 00:11:22.200
杰森 · 兰斯托夫: 这就是 Cloundinary 真正吸引人的地方
&gt;&gt; Jason Lengstorf: And this is kind of
where Cloundinary is really fascinating

144
00:11:22.200 --> 00:11:25.669
因为你可以控制所有这些不同的东西。
because you can just control
all of these different things.

145
00:11:25.669 --> 00:11:30.235
所以如果我把这个设置为800，图像会变得更大,
So if I set this to 800,
the image will come back much bigger,

146
00:11:30.235 --> 00:11:33.365
如果我把它设置为喜欢一个不同的长宽比
if I set it to Like
a different aspect ratio so

147
00:11:33.365 --> 00:11:37.195
比如说我想要长宽比为16乘以9。
let's say I want it to be
an aspect ratio of 16 by 9.

148
00:11:40.863 --> 00:11:44.221
杰森 · 兰斯托夫: 我把它放错地方了，让我们把它移到这里,
&gt;&gt; Jason Lengstorf: I put that in
the wrong place, let's move it over here,

149
00:11:44.221 --> 00:11:45.870
长宽比为16 × 9。
aspect ratio of 16 by 9.

150
00:11:45.870 --> 00:11:50.230
所以我们可以添加任何我们想要的转换，并且
So we can just add any of these
transformations that we want, and

151
00:11:50.230 --> 00:11:54.100
可以帮我们清理一下
it will kinda clean that stuff up for
us so

152
00:11:55.490 --> 00:11:59.659
我们可以按照自己的想法，进行变形。
we're able to go through and kinda add
the transformations as we see fit.

153
00:11:59.659 --> 00:12:01.639
而 Cloudinary 在飞行中为我们处理这些事情,
And Cloudinary handles that for
us on the fly,

154
00:12:01.639 --> 00:12:06.960
我们不需要管理，不同的资产产生，它只是为我们做。
we don't have to manage the, different
asset generation, it just does it for us.

155
00:12:06.960 --> 00:12:10.200
这里有很多我不打算介绍的高级功能
And this has a ton of really
advanced features that I'm not gonna

156
00:12:10.200 --> 00:12:13.549
进入今天，我鼓励你去探索云点。
get into today, I'd encourage you
to go explore the Cloudinary dots.

157
00:12:13.549 --> 00:12:17.899
你可以做一些事情，如水印你的图像，你可以混淆的颜色,
You can do things like watermark your
images, you can mess with the colors,

158
00:12:17.899 --> 00:12:23.230
你可以做 SVG 跟踪，你可以找到脸，你可以模糊的脸实际上
you can do SVG tracing, you can find
faces, you can blur out faces actually

159
00:12:23.230 --> 00:12:27.159
非常非常强大的东西，是一个非常酷的 API。
really, really powerful stuff,
it's a very cool API.

160
00:12:27.159 --> 00:12:28.259
但是一旦我们有了这个,
But once we have this,

161
00:12:28.259 --> 00:12:33.090
一旦我们能够真正得到这个，然后我们可以开始在我们的网站上使用它
once we're able to actually get this,
then we can start using it in our site
