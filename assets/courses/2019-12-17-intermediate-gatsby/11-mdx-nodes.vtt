WEBVTT

1
00:00:00.170 --> 00:00:03.194
现在我们要实际创建这些节点。
&gt;&gt; Jason Lengstorf: Now we wanna
actually create these nodes.

2
00:00:03.194 --> 00:00:07.777
为此，我们将侦听创建的任何 MDX 节点，并且
And to do that we're going to listen for
any MDX node that gets created, and

3
00:00:07.777 --> 00:00:11.259
然后我们用它创建一个 docs 页面节点。
then we'll create a docs
page node out of it.

4
00:00:11.259 --> 00:00:15.778
为了做到这一点，我们将添加另一个 API 钩子
So to do that,
we're going to add another API hook, and

5
00:00:15.778 --> 00:00:18.577
这个叫做 onCreateNode。
this one is called onCreateNode.

6
00:00:18.577 --> 00:00:19.861
这个给了我们一堆数据。
And this one gives us a bunch of data.

7
00:00:19.861 --> 00:00:22.690
第一个要给我们的是创建的节点。
So the first thing that's gonna give
us is the node that was created.

8
00:00:23.699 --> 00:00:24.789
它会给我们一个物体
It'll give us an object for

9
00:00:24.789 --> 00:00:29.399
我们能做的就是帮助我们处理这个节点。
the actions that we can do that will
help us kinda process this node.

10
00:00:29.399 --> 00:00:32.840
它将使我们能够加载给定节点的内容。
It will give us the ability to
load the content of a given node.

11
00:00:32.840 --> 00:00:37.009
所以如果我们想把它交给父母，或者如果它有孩子，我们可以得到这些
So if we wanna get it to parent or
if it had children, we could get those and

12
00:00:37.009 --> 00:00:38.880
它会给我们一个帮助器来创建一个节点 ID。
it'll give us a helper
to create a node ID.

13
00:00:40.009 --> 00:00:41.530
最后，它会给我们提供选择。
And finally, it'll give us options.

14
00:00:42.659 --> 00:00:45.560
所以在这里面,
So inside of this,

15
00:00:45.560 --> 00:00:50.149
我们先从我们需要的选择开始。
we are going to start by getting
out just the options that we need.

16
00:00:50.149 --> 00:00:55.000
所以我们要在这里使用基本路径，因为我们要设置路径
So we wanna use the base path in here,
because we're going to set the path for

17
00:00:55.000 --> 00:01:01.229
文档页面，如果需要的话，它会包含基本路径,
the docs page to be, it's going to
include that base path if necessary,

18
00:01:01.229 --> 00:01:05.420
因为这是它以后构建页面的方法，使用这条路径。
cuz this is how it will actually build
the pages later, using this path.

19
00:01:05.420 --> 00:01:09.519
所以我们要拉出基本路径，我们将使用默认值。
So we're gonna pull the base path out and
we'll use the defaults.

20
00:01:12.140 --> 00:01:15.920
好的，然后我们加载父节点。
Okay, and
then we're gonna load the parent node.

21
00:01:15.920 --> 00:01:23.879
因此，当我们获得 MDX 节点时，MDX 节点是从文件节点生成的。
So when we get an MDX node, that MDX
node is generated off of a file node.

22
00:01:23.879 --> 00:01:28.989
所以 Gatsby 的工作方式是 Gatsby 源文件系统创建文件节点。
So the way that Gatsby works is the Gatsby
source file system creates file nodes.

23
00:01:28.989 --> 00:01:31.680
然后 Gatsby 插件 MDX 实际上是一个变压器插件。
And then Gatsby plugin MDX is
actually a transformer plugin.

24
00:01:31.680 --> 00:01:34.689
它所做的就是寻找任何文件节点。
So what it's doing is it's looking for
any file nodes.

25
00:01:34.689 --> 00:01:37.780
然后它检查实际使用这个 onCreateNode 的类型
And then it checks the type
actually using this onCreateNode

26
00:01:37.780 --> 00:01:39.780
我们现在看到的 API。
API that we're looking at right now.

27
00:01:39.780 --> 00:01:43.978
如果找到兼容的类型，在本例中是带 mdx 的文件
And if it finds compatible types, which
in this case would be files with a mdx

28
00:01:43.978 --> 00:01:50.629
扩展名时，它将为名为子 MDX 的文件创建一个子节点。
extension, it will then create a child
node for the file called child MDX.

29
00:01:50.629 --> 00:01:55.225
这就是我们在这里接收到的，是孩子 MDX。
And that is what we are receiving
here is the child MDX.

30
00:01:55.225 --> 00:01:58.329
所以，我们要加载这个文件，这样我们就可以检查这个名字。
So, we wanna load that file so
that we can check that name.

31
00:01:58.329 --> 00:02:02.069
记住，我们将文件名设置为盖茨比主题文档。
Remember, we set the name for
the files to Gatsby themed docs.

32
00:02:02.069 --> 00:02:05.659
这是因为我们只想创建文档页面
And that's because we only
want to create docs pages for

33
00:02:05.659 --> 00:02:08.349
这个主题下载的文档。
docs that are loaded by this theme.

34
00:02:08.349 --> 00:02:13.500
我们不想把博客或其他东西变成文档页面。
We don't want to turn blogs or
anything else into docs pages.

35
00:02:13.500 --> 00:02:19.180
所以我们要获取节点，也就是 node.parent。
So we're going to get the node,
which is the node.parent.

36
00:02:19.180 --> 00:02:22.579
然后我们要确保我们
And then we wanna make sure that we

37
00:02:22.579 --> 00:02:26.579
只能处理由这个东西加载的 MDX 文件。
only work on MDX files that
were loaded by this thing.

38
00:02:29.900 --> 00:02:32.939
为此，我们设置了一个 if 语句。
And to do that we set up an if statement.

39
00:02:32.939 --> 00:02:40.509
我们首先要检查的是这个节点的实际类型是 MDX。
And the first thing we're gonna check is
that the actual type of this node is MDX.

40
00:02:40.509 --> 00:02:45.770
在《了不起的盖茨比》中，内部只是某个给定节点的元数据,
And in Gatsby, the internal is just
kind of metadata about a given node,

41
00:02:45.770 --> 00:02:49.030
和 node.internal.type 将会反映
and the node.internal.type
is going to reflect

42
00:02:49.030 --> 00:02:52.069
不管插件告诉它什么数据类型。
whatever the plugin told
it the data type was.

43
00:02:52.069 --> 00:02:54.699
因此，如果是一个文件，内部类型将是 file。
So if it's a file,
the internal type would be file.

44
00:02:54.699 --> 00:02:59.710
如果是 Mdx，Mdx 使用这个大写 m 小写 dx 作为文件类型。
If it's Mdx, Mdx uses this capital
M lowercase dx as its file type.

45
00:02:59.710 --> 00:03:03.229
我们将使用文档页面作为文件类型。
We're gonna be using docs
page as our file type.

46
00:03:03.229 --> 00:03:06.520
所以我们可以检查然后说，嘿，我只想处理 Mdx 文件或者
So we can just check and say, hey,
I only wanna work on Mdx files or

47
00:03:06.520 --> 00:03:09.419
节点，所以如果我们没有任何保释。
Mdx nodes, so
if we don't have any bail out.

48
00:03:09.419 --> 00:03:14.979
另一件我要检查的事情是父源实例
And then the other thing that I wanna
check is if the parent source instance

49
00:03:14.979 --> 00:03:23.659
名字实际上不是盖茨比主题文档。
name is not actually Gatsby theme docs.

50
00:03:23.659 --> 00:03:26.680
再说一次，我本不该这么做的。
And again, I should have made this not.

51
00:03:26.680 --> 00:03:29.180
所以我们要做的就是提前回报。
So what we're doing is we're
doing an early return.

52
00:03:29.180 --> 00:03:34.810
所以我们要说的是，如果节点类型不是 Mdx，或者
So what we’re saying is,
if the node type is not Mdx, or

53
00:03:34.810 --> 00:03:39.680
文件 gatsby-theme-docs 的源实例名。
the source instance name of
the file gatsby-theme-docs.

54
00:03:39.680 --> 00:03:44.075
源实例名称来自这里。
That source instance name comes from here.

55
00:03:44.075 --> 00:03:47.262
所以不管我们在盖茨比源文件系统中设置的名称是什么,
So whatever we set as the name
in Gatsby source file system,

56
00:03:47.262 --> 00:03:50.789
它将成为文件节点上的源实例名。
that will become the source
instance name on the file node.

57
00:03:50.789 --> 00:03:56.120
因此，当我们加载父节点时，父节点是一个文件节点，我们可以检查
So when we load that parent, the parent
is a file node, and we can check

58
00:03:56.120 --> 00:03:59.829
确保它是由我们的主题加载的，而不是其他文件。
to make sure that it was loaded by
our theme, and not some other file.

59
00:03:59.829 --> 00:04:02.150
所以如果这些事情不是真的，我们就要退出。
So if those things aren't true,
we're gonna bail out.

60
00:04:02.150 --> 00:04:03.939
但是一旦我们到了这里,
But once we get to here,

61
00:04:03.939 --> 00:04:08.770
我们知道我们的节点是由我们的主题加载的 Mdx 节点。
we know that our node is an Mdx
node that was loaded by our theme.

62
00:04:08.770 --> 00:04:11.090
这意味着我们可以开始定制它。
So that means we can
start to customize it.

63
00:04:11.090 --> 00:04:15.740
所以我要做的第一件事就是确保如果我们有一个索引
So the first thing I'm going to do is I
wanna make sure that if we have an index

64
00:04:15.740 --> 00:04:20.819
文件，我们要处理一个索引点 MDX,
file, we wanna treat
an index index dot MDX,

65
00:04:20.819 --> 00:04:23.439
同样的方式，我们会一个索引点 HTML。
the same way that we
would an index dot HTML.

66
00:04:24.519 --> 00:04:29.100
这意味着我们希望在文档中加载它
And what that means is we
want it to load up at docs

67
00:04:29.100 --> 00:04:35.850
而不是文档索引，这将是默认的行为。
Instead of docs index,
which would be the default behavior.

68
00:04:37.180 --> 00:04:40.079
所以我们要设置一个页面名称。
So we're gonna set up a page name.

69
00:04:40.079 --> 00:04:45.401
我们将使用的页面名称是
And the page name that
we'll use is if the parent

70
00:04:45.401 --> 00:04:51.004
Name 不是 index，我们将使用 parent.name。
name is not index,
we will use the parent.name.

71
00:04:51.004 --> 00:04:54.069
如果是索引，我们就不填。
And if it is index we'll leave it blank.

72
00:04:54.069 --> 00:04:59.211
这样，它就只是内容或基本路径。
In that way it would just be
the content or the base path.

73
00:04:59.211 --> 00:05:04.860
因此，如果我们去 / docs 并且有一个索引
So if we go /docs and
have an index .Mdx there will be /docs and

74
00:05:04.860 --> 00:05:06.785
这就是网址。
that will be the URL.

75
00:05:06.785 --> 00:05:11.310
如果我们有一个 about. Mdx，它将是 / docs 和 / about。
And if we have an about.Mdx
it will be /docs and /about.

76
00:05:11.310 --> 00:05:14.769
因为 parent.name 是没有扩展名的文件名。
Because the parent.name is the file
name without an extension.

77
00:05:15.980 --> 00:05:20.839
所以我们有我们的页面名称，从那里我将继续和
So we have our page name and
from there I'm gonna go ahead and

78
00:05:20.839 --> 00:05:26.790
使用创建节点操作，并接受一个对象，这是我们的新节点。
use the create node action and that
accepts an objects which is our new node.

79
00:05:26.790 --> 00:05:28.920
所以我要做的第一件事就是创建一个节点 ID。
So the first thing I wanna
do is create a node ID.

80
00:05:30.250 --> 00:05:34.636
并且节点 ID 可以是任意的，它只需要是唯一的。
And the node ID can be arbitrary,
it just needs to be unique.

81
00:05:34.636 --> 00:05:39.000
所以我通常要做的就是把我们将要使用的类型
So what I typically do is I take
the type that we're going to use, and

82
00:05:39.000 --> 00:05:43.459
然后获取现有节点 ID，并将其传递到 create node ID。
then I take the existing nodes ID,
and pass that into create node ID.

83
00:05:43.459 --> 00:05:45.389
这将创建一个独特的散列。
And that'll create a unique hash.

84
00:05:45.389 --> 00:05:47.279
所以这个想法是独一无二的，但是
So the the idea is already unique, but

85
00:05:47.279 --> 00:05:51.800
然后把我们的类型添加进去，就得到了一个新的但也是唯一的散列。
then by adding our type to it,
we get a new but also unique hash.

86
00:05:54.029 --> 00:05:56.740
一旦我有了 ID，我就可以添加标题。
Once I've got the ID,
I can add in the title.

87
00:05:56.740 --> 00:06:00.769
所以题目会从前面的问题中显现出来。
And so the title is gonna
come out of the front matter.

88
00:06:02.980 --> 00:06:06.819
但是如果没有设置，我们可以退回到文件名。
But if that's not set,
we can just fall back to the file name.

89
00:06:09.699 --> 00:06:12.629
我们要检查更新的时间幸运的是,
We're gonna check the updated time and
fortunately,

90
00:06:12.629 --> 00:06:16.810
盖茨比的文件系统会给我们提供这个，所以我们将使用父母修改时间。
Gatsby's file system will just give us
that, so we'll do parent modified time.

91
00:06:16.810 --> 00:06:21.870
这是最后一次修改这个文件，所以非常好用。
And that's the last time that that file
was modified, so that's nice and handy.

92
00:06:21.870 --> 00:06:26.579
然后，我想得到的路径，我要使用的路径模块。
Then, I wanna get the path and
I'm gonna use the path module.

93
00:06:27.839 --> 00:06:30.269
确保我已经把它包含在这里了，我做到了。
Make sure I've got that included up here,
I do.

94
00:06:30.269 --> 00:06:35.029
所以我要使用 path.join，我总是想以一个斜杠开头
So I'm gonna use path.join and I always
wanna start with a leading slash so

95
00:06:35.029 --> 00:06:36.629
我们会把它写进去的。
we'll include that in there.

96
00:06:36.629 --> 00:06:38.610
然后我会用棒道。
Then I'm gonna use the basepath.

97
00:06:38.610 --> 00:06:44.715
然后我要使用父目录的相对目录。
And then I'm gonna use the relative
directory of the parent.

98
00:06:44.715 --> 00:06:48.971
这意味着我们的医生,
And what that means is like in our docs,

99
00:06:48.971 --> 00:06:53.389
我们可以建立 / 文档 / 反应 / 挂钩。
we could set up /docs/react/hooks.

100
00:06:53.389 --> 00:06:56.230
国家管理或什么的
State management or something, and

101
00:06:56.230 --> 00:07:01.430
Url 将反映内容路径中的目录结构。
the URL will reflect the directory
structure inside of our content path.

102
00:07:01.430 --> 00:07:05.149
因此，对于管理内容的人来说，这更符合逻辑。
So that makes it a little more logical for
people who are managing content.

103
00:07:05.149 --> 00:07:08.069
无论文件夹结构在内容中是什么样子
Whatever the folder structure
looks like in the content

104
00:07:08.069 --> 00:07:13.209
会反映在网址和网站的层次结构中。
will be what gets reflected on the URL and
in the hierarchy of the site.

105
00:07:13.209 --> 00:07:15.639
一旦你有了这个相对目录,
And once you've got that
relative directory in there,

106
00:07:15.639 --> 00:07:18.199
我们会加上页名，哎呀。
we will include the page name, whoops.

107
00:07:18.199 --> 00:07:21.509
跳到文件夹的开头，页面名称。
Skip to the beginning of the folder,
page name.

108
00:07:21.509 --> 00:07:25.339
所以这是我们现在唯一的崩溃。
So this now is our only collapse out.

109
00:07:25.339 --> 00:07:26.750
所以我们可以看到整个过程。
So we can see the whole thing.

110
00:07:26.750 --> 00:07:31.449
所以我们的路径将从斜杠开始。
So our path then is going to be
starting at the leading slash.

111
00:07:31.449 --> 00:07:33.819
如果我们有一个类似 / docs 的基本路径,
If we have a base path like /docs,

112
00:07:33.819 --> 00:07:36.420
然后相对目录，以匹配文件层次结构。
then the relative directory
to match the file hierarchy.

113
00:07:36.420 --> 00:07:42.550
然后是页面名称，如果它的索引是空的或者是文件名。
And then the page name which will either
be the filename or empty if its index.

114
00:07:42.550 --> 00:07:44.250
那么，这说得通吗？
So, does this make sense?

115
00:07:44.250 --> 00:07:46.529
在我们继续前进之前，有人对此有什么问题吗？
Does anybody have questions about
how this works before we move on?

116
00:07:48.110 --> 00:07:50.970
演讲者2: 我想澄清一下，我们这么做的目的
&gt;&gt; Speaker 2: So I guess just to clarify,
the purpose of what we're doing

117
00:07:50.970 --> 00:07:56.139
这里是创建知道我们可以查询和 GraphQL。
here is creating knows that
we can query and GraphQL.

118
00:07:56.139 --> 00:07:56.840
杰森 · 兰斯托夫: 没错。
&gt;&gt; Jason Lengstorf: Exactly.

119
00:07:56.840 --> 00:07:57.409
讲者2: 好的。
&gt;&gt; Speaker 2: Okay.

120
00:07:57.409 --> 00:07:58.269
杰森 · 兰斯托夫: 是的，所以
&gt;&gt; Jason Lengstorf: Yeah, so

121
00:07:58.269 --> 00:08:03.980
我们要做的就是在这里定义这个文档页面。
what we're doing is we're basically
saying we define this docs page up here.

122
00:08:03.980 --> 00:08:06.329
标题路径更新。
Id titled path updated.

123
00:08:06.329 --> 00:08:11.699
在 onCreateNode 中，id 标题路径更新了，我们创建了所有这些文件。
And in onCreateNode, id title path
updated, we're creating all these files.
