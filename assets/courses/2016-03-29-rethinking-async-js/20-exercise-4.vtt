WEBVTT

1
00:00:00.000 --> 00:00:03.851
[音乐]
[MUSIC]

2
00:00:03.851 --> 00:00:07.240
&gt；&gt；Kyle：在休息之前，我们讨论了将承诺链接在一起。
&gt;&gt; Kyle: Before the break we talked about chaining promises together.

3
00:00:07.240 --> 00:00:12.519
但是这种方法从根本上是有限制的。
But there's something fundamentally limiting about this approach.

4
00:00:12.519 --> 00:00:15.769
这种方法的基本限制是您必须了解所有
The fundamental limitation of this approach is that you have to know all of

5
00:00:15.769 --> 00:00:16.850
提前承诺。
the promises in advance.

6
00:00:16.850 --> 00:00:21.190
你必须知道在你的流量控制中有多少个步骤。
You have to know how many steps are in your flow control.

7
00:00:21.190 --> 00:00:24.760
有时，甚至在大多数情况下，情况就是这样。
Sometimes, and maybe even most of the time, that is going to be the case.

8
00:00:24.760 --> 00:00:28.280
你会知道，有一套离散的步骤你可以安排。
You're going to know, there's a discrete set of steps that you can lay out.

9
00:00:28.280 --> 00:00:31.109
你可以把你的承诺连在一起
And you can chain your promises together to

10
00:00:32.119 --> 00:00:35.039
近似于任何必要的流量控制。
approximate whatever flow control is necessary.

11
00:00:35.039 --> 00:00:38.460
但在某些情况下，这并不是真的。
But there will be cases where that won't be true.

12
00:00:38.460 --> 00:00:43.469
在某些情况下，无法预测作者的时间，
There will be cases where it's impossible to predict author time,

13
00:00:43.469 --> 00:00:47.280
可能有三个步骤，五个步骤，还是一千个步骤。
whether there might be three steps or five steps or a thousand steps.

14
00:00:48.740 --> 00:00:53.320
你可能不想重复这个模式上千次。
And you probably don't wanna repeat this pattern thousand times over.

15
00:00:54.560 --> 00:00:58.520
这需要大量的复制和粘贴，可能会出现很多错误，
That's a lot of copy and pasting, a lot of mistakes can be made,

16
00:00:58.520 --> 00:01:00.555
很多更新，如果你必须调整一些东西。
a lot of updates if you have to tweak something.

17
00:01:00.555 --> 00:01:05.219
因此，练习四将要求我们
So, exercise four is going to ask us to

18
00:01:05.219 --> 00:01:07.750
改变我们大脑思考它的方式，至少一点点。
change the way our brains are thinking about it, at least a little bit.

19
00:01:09.019 --> 00:01:15.739
试图了解我们可能如何使用承诺的功能性本质。
To try to understand how we might use the functional nature of promises.

20
00:01:15.739 --> 00:01:18.070
他们一起工作的方式，他们的作曲方式。
The way that they work together, the way that they compose.

21
00:01:18.070 --> 00:01:25.751
我们如何才能以这样一种方式使用它，我们可以得到我们的。
How might we use that in such a fashion that we can get our.

22
00:01:29.549 --> 00:01:32.072
&gt；&gt；Kyle：将我们的流控制设置为任意长度，
&gt;&gt; Kyle: Get our flow control to be an arbitrary length,

23
00:01:32.072 --> 00:01:33.531
这就是我想说的。
is what I'm trying to say.

24
00:01:33.531 --> 00:01:38.057
我们怎样才能让它达到一个任意的长度，这样就可以有一个步骤，
How can we get it to an arbitrary length so that there could be one step,

25
00:01:38.057 --> 00:01:40.147
三步，还是一百步？
three steps, or 100 steps?

26
00:01:40.147 --> 00:01:42.777
所以，我们要去打开练习四。
So, we're gonna go and open up exercise four.

27
00:01:47.128 --> 00:01:49.231
&gt；&gt；Kyle：我已经给了你GET文件，
&gt;&gt; Kyle: I've already given you the get file,

28
00:01:49.231 --> 00:01:51.670
因为我们已经实现了这一部分。
cuz we've already implemented that part.

29
00:01:52.740 --> 00:01:57.719
但我现在要你做的是我想让你想想，我可能是什么工具
But what I want you to do now is I want you to think, what tools might I be

30
00:01:57.719 --> 00:02:02.623
能够使用创建
able to use to create

31
00:02:02.623 --> 00:02:09.090
一个可以任意长的列表，并且仍然有所有这些动作发生？
a list that could be arbitrarily long, and still have all these actions occur?

32
00:02:09.090 --> 00:02:12.830
我很努力地给你提示，但没有给你完整的解决方案。
I'm trying very hard to give you hints without giving you the full solution.

33
00:02:12.830 --> 00:02:17.460
如果你还记得的话，我们在另一个研讨会上谈到了效用。
So if you recall, we talked about utility in a different workshop.

34
00:02:17.460 --> 00:02:20.288
我们谈到了像地图这样的公用事业，
We talked about utilities like map,

35
00:02:20.288 --> 00:02:24.036
它可以获取一系列值并对其进行转换。
which can take a list of values and transform it.

36
00:02:24.036 --> 00:02:27.611
我们讨论了一个叫做Reduce的实用程序，
And we talked about a utility called reduce,

37
00:02:27.611 --> 00:02:32.229
它可以获取一系列值并将它们组合在一起。
which can take a list of values and compose them together.

38
00:02:34.189 --> 00:02:37.425
所以如果我有一个URL列表。
So if I had a list of URLs.

39
00:02:39.021 --> 00:02:41.680
&gt；&gt；Kyle：我可以将URL列表转换成什么？
&gt;&gt; Kyle: What could I transform that list of URLs into?

40
00:02:43.699 --> 00:02:46.500
也许我可以将URL列表转换为承诺列表。
Maybe I could transform that list of URLs into a list of promises.

41
00:02:46.500 --> 00:02:51.960
如果我有一张承诺的清单，我该如何将所有这些承诺组合在一起呢？
And if I had a list of promises, how might I compose all those promises together?

42
00:02:53.870 --> 00:02:57.280
我也许可以减少一些承诺
I could maybe do a reduction on the list of promises and

43
00:02:57.280 --> 00:02:59.879
创建一个任意长的承诺链。
create an arbitrarily long promise chain.

44
00:03:01.500 --> 00:03:03.312
这是你的练习四。
That's your exercise four.

45
00:03:03.312 --> 00:03:03.939
玩得开心。
Have fun.
